[{"/Users/harmansahota/Desktop/Multiple-days-Non-Profits-and-Health-Wellness-Group-B/frontend/src/pages/network.js":"1","/Users/harmansahota/Desktop/Multiple-days-Non-Profits-and-Health-Wellness-Group-B/frontend/src/pages/tracker.js":"2","/Users/harmansahota/Desktop/Multiple-days-Non-Profits-and-Health-Wellness-Group-B/frontend/src/index.js":"3","/Users/harmansahota/Desktop/Multiple-days-Non-Profits-and-Health-Wellness-Group-B/frontend/src/App.js":"4","/Users/harmansahota/Desktop/Multiple-days-Non-Profits-and-Health-Wellness-Group-B/frontend/src/reportWebVitals.js":"5","/Users/harmansahota/Desktop/Multiple-days-Non-Profits-and-Health-Wellness-Group-B/frontend/src/components/NavBarOut.js":"6","/Users/harmansahota/Desktop/Multiple-days-Non-Profits-and-Health-Wellness-Group-B/frontend/src/components/footer.js":"7","/Users/harmansahota/Desktop/Multiple-days-Non-Profits-and-Health-Wellness-Group-B/frontend/src/components/NavBarIn.js":"8","/Users/harmansahota/Desktop/Multiple-days-Non-Profits-and-Health-Wellness-Group-B/frontend/src/pages/Home.js":"9","/Users/harmansahota/Desktop/Multiple-days-Non-Profits-and-Health-Wellness-Group-B/frontend/src/pages/register.js":"10","/Users/harmansahota/Desktop/Multiple-days-Non-Profits-and-Health-Wellness-Group-B/frontend/src/pages/login.js":"11","/Users/harmansahota/Desktop/Multiple-days-Non-Profits-and-Health-Wellness-Group-B/frontend/src/pages/resetPassword.js":"12","/Users/harmansahota/Desktop/Multiple-days-Non-Profits-and-Health-Wellness-Group-B/frontend/src/pages/publicSharing.js":"13","/Users/harmansahota/Desktop/Multiple-days-Non-Profits-and-Health-Wellness-Group-B/frontend/src/pages/directory.js":"14","/Users/harmansahota/Desktop/Multiple-days-Non-Profits-and-Health-Wellness-Group-B/frontend/src/pages/faq.js":"15","/Users/harmansahota/Desktop/Multiple-days-Non-Profits-and-Health-Wellness-Group-B/frontend/src/pages/profile.js":"16","/Users/harmansahota/Desktop/Multiple-days-Non-Profits-and-Health-Wellness-Group-B/frontend/src/pages/comment.js":"17","/Users/harmansahota/Desktop/Multiple-days-Non-Profits-and-Health-Wellness-Group-B/frontend/src/pages/admin.js":"18","/Users/harmansahota/Desktop/Multiple-days-Non-Profits-and-Health-Wellness-Group-B/frontend/src/components/Step1.js":"19","/Users/harmansahota/Desktop/Multiple-days-Non-Profits-and-Health-Wellness-Group-B/frontend/src/components/Step4.js":"20","/Users/harmansahota/Desktop/Multiple-days-Non-Profits-and-Health-Wellness-Group-B/frontend/src/components/Step2.js":"21","/Users/harmansahota/Desktop/Multiple-days-Non-Profits-and-Health-Wellness-Group-B/frontend/src/components/Step3.js":"22"},{"size":15890,"mtime":1678404251606,"results":"23","hashOfConfig":"24"},{"size":32600,"mtime":1678402635568,"results":"25","hashOfConfig":"24"},{"size":535,"mtime":1674080536150,"results":"26","hashOfConfig":"24"},{"size":4478,"mtime":1675802925356,"results":"27","hashOfConfig":"24"},{"size":362,"mtime":1673570249596,"results":"28","hashOfConfig":"24"},{"size":2074,"mtime":1675299992942,"results":"29","hashOfConfig":"24"},{"size":535,"mtime":1675972064908,"results":"30","hashOfConfig":"24"},{"size":4214,"mtime":1678469037442,"results":"31","hashOfConfig":"24"},{"size":1950,"mtime":1678469271595,"results":"32","hashOfConfig":"24"},{"size":15088,"mtime":1678060408885,"results":"33","hashOfConfig":"24"},{"size":5187,"mtime":1678060408884,"results":"34","hashOfConfig":"24"},{"size":2334,"mtime":1674268972791,"results":"35","hashOfConfig":"24"},{"size":9562,"mtime":1678397216600,"results":"36","hashOfConfig":"24"},{"size":545,"mtime":1677878352423,"results":"37","hashOfConfig":"24"},{"size":3119,"mtime":1674857155468,"results":"38","hashOfConfig":"24"},{"size":20836,"mtime":1677889965815,"results":"39","hashOfConfig":"24"},{"size":5372,"mtime":1676599224807,"results":"40","hashOfConfig":"24"},{"size":59337,"mtime":1677902005654,"results":"41","hashOfConfig":"24"},{"size":1725,"mtime":1678060408883,"results":"42","hashOfConfig":"24"},{"size":482,"mtime":1678060408883,"results":"43","hashOfConfig":"24"},{"size":2932,"mtime":1674792460212,"results":"44","hashOfConfig":"24"},{"size":1799,"mtime":1674792565947,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"50"},"1ni9587",{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"50"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"50"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"50"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"50"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"50"},"/Users/harmansahota/Desktop/Multiple-days-Non-Profits-and-Health-Wellness-Group-B/frontend/src/pages/network.js",["126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144"],[],"import React, { useState } from 'react';\nimport { useEffect } from 'react';\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './network.css';\nimport fourcss from './fourcss.css';\nimport axios, { all } from 'axios';\nimport { local } from 'd3-selection';\n\nvar filter = 'Product';\nfunction SearchBar() {\n\n  const [getData, setData] = useState([]);\n  const [getSharedData, setSharedData] = useState([]);\n  const [getGraphData, setGraphData] = useState([]);\n\n  const fetchSharedData = async () => {\n    axios.post(\n      \"http://localhost:8000/api/postsPullShared/\",\n      {\n        Email: localStorage.getItem('email')\n      },\n      {\n        headers: {\n          \"Content-type\": \"application/json\",\n        }\n      }\n    )\n      .then(response => {\n        if (response.status == 200) {\n          setSharedData(response.data);\n        }\n      })\n      .catch(err => console.warn(err));\n  }\n\n\n  const fetchData = async () => {\n    const response = await fetch(\"http://localhost:8000/api/networkPull/\");\n    const data = await response.json();\n    return setData(data);\n  }\n\n  const fetchDataSharing = async () => {\n    const response = await fetch(\"http://localhost:8000/api/networkPullSharing/\");\n    const data = await response.json();\n    return setData(data);\n  }\n\n  const fetchDataReceiving = async () => {\n    const response = await fetch(\"http://localhost:8000/api/networkPullReceiving/\");\n    const data = await response.json();\n    return setData(data);\n  }\n\n  const fetchDataCreator = async () => {\n    axios.post(\n      \"http://127.0.0.1:8000/api/networkPullCreator/\",\n      {\n        Email: localStorage.getItem('email')\n      },\n      {\n        headers: {\n          \"Content-type\": \"application/json\",\n        }\n      }\n    )\n      .then(response => {\n        if (response.status == 200) {\n          setData(response.data);\n        }\n      })\n      .catch(err => console.warn(err));\n  }\n\n\n  useEffect(() => {\n    fetchData();\n    fetchSharedData();\n  }, [])\n\n  const [posts, setPosts] = useState({\n    product: '',\n    Type: '',\n    Units: '',\n    Quantity: '',\n    Description: '',\n    Email: ''\n  });\n\n  const [showModal, setShowModal] = useState(false);\n  posts.Quantity = parseInt(posts.Quantity)\n  const handleClose = () => setShowModal(false);\n  const handleShow = () => setShowModal(true);\n\n\n  if (new Date().getTime() > localStorage.getItem('expiry') && (localStorage.roles)) {\n    const response = window.confirm(\"Your session has expired. Do you still want to be logged in?\");\n\n    if (response) {\n      localStorage.removeItem('expiry');\n      const date = new Date().setHours(new Date().getHours() + 1);\n      localStorage.setItem('expiry', date)\n    }\n  }\n  {\n    if (new Date().getTime() < localStorage.getItem('expiry') && localStorage.roles) {\n      return (\n        <>\n          <div className=\"container-md col-md-auto table-responsive-sm\">\n            <h3>Shared with:</h3>\n            <table class=\"table table-striped table-bordered table-hover table-sm\">\n              <tr>\n                <th>Email</th>\n                <th>Graph</th>\n              </tr>\n              {getSharedData && getSharedData.length > 0 && getSharedData.map((sharedObj) => (\n                <tr>\n                  <td>{sharedObj.shared_with}</td>\n                  <td><Button variant='outline-primary' className='btn btn-outline-primary' onClick={(event) => {\n                    axios.post(\n                      \"http://localhost:8000/api/NetworkGraphing/\",\n                      {\n                        user_email: localStorage.getItem('email'),\n                        compare_email: sharedObj.shared_with\n                      },\n                      {\n                        headers: {\n                          \"Content-type\": \"application/json\",\n                        }\n                      }\n                    )\n                      .then(response => {\n                        if (response.status == 200) {\n                          setGraphData(response.data);\n                        }\n                      })\n                      .catch(err => console.warn(err));\n                  }}>Compare Data</Button></td>\n                </tr>\n              ))}\n            </table>\n          </div>\n          <div className=\"container-lg col-md-auto\">\n            <div className=\"container-fluid\">\n              <div className=\"input-group\">\n                <input type=\"search\" className=\"form-control rounded\" placeholder=\"Search\" aria-label=\"Search\"\n                  onChange={(event) => {\n                    axios.post(\n                      \"http://127.0.0.1:8000/api/networkSearch/\",\n                      {\n                        filter: filter,\n                        input: event.target.value\n                      },\n                      {\n                        headers: {\n                          \"Content-type\": \"application/json\",\n                        }\n                      }\n                    )\n                      .then(response => {\n                        if (response.status == 200) {\n                          setData(response.data);\n                          console.log(response.data)\n                        }\n                      })\n                      .catch(err => console.warn(err));\n                  }}\n                />\n              </div>\n\n              <div className=\"select\">\n                <select name=\"format\" className=\"form-select\"\n                  onChange={(event) => {\n                    filter = event.target.value;\n                  }}\n                >\n                  <option value=\"Email\" >Filter by: Email</option>\n                  <option value=\"Product\" selected>Filter by: Product</option>\n                </select>\n              </div>\n\n              <div className=\"select\">\n                <select name=\"format\" className=\"form-select\">\n                  <option selected disabled>Sort By: Latest Activity</option>\n                  <option value=\"pdf\">Latest activity</option>\n                  <option value=\"txt\">Date Created</option>\n                  <option value=\"epub\">Top: Past day</option>\n                  <option value=\"fb2\">Top: Past week</option>\n                  <option value=\"mobi\">Top: Past month</option>\n                </select>\n              </div>\n\n              <div>\n                <Button type=\"Button\" className=\"create_btn btn btn-success\" onClick={handleShow}>Create Post</Button>\n              </div>\n            </div>\n\n            <div className=\"container-md\">\n              <div className=\"tab container-sm\">\n                <Button className=\"tablinks btn btn-light\" onClick={(e) => { { fetchData() } }} id=\"defaultOpen\">\n                  💬 All Posts</Button><br />\n                <Button className=\"tablinks btn btn-light\" onClick={(e) => { { fetchDataSharing() } }}  >📣 Sharing</Button><br />\n                <Button className=\"tablinks btn btn-light\" onClick={(e) => { { fetchDataReceiving() } }}>💬 Receiving</Button><br />\n                <Button className=\"tablinks btn btn-light\" onClick={(e) => { { fetchDataCreator() } }}>💬 My Posts</Button><br />\n              </div>\n\n              <div id=\"disc\">\n                {getData && getData.length > 0 && getData.map((userObj) => (\n                  <div class='card'>\n                    <h5 class='card-header m-0'>\n                      <span>{userObj.product} - {userObj.Quantity} {userObj.Units}</span>\n                    </h5>\n                    {(() => {\n                      if (userObj.Email == localStorage.getItem('email') && userObj.Type == 'Sharing') {\n                        return (\n                          <select id='status'\n\n                            onChange={(event) => {\n                              if (event.target.value == 'closed') {\n                                var a = prompt('enter the email of the person you shared your products with');\n                                if (a === '') {\n                                  alert('value of the email cannot be empty, please try again')\n                                  document.getElementById('status').value = 'open'\n                                } else {\n\n                                  axios.put(\n                                    `http://127.0.0.1:8000/api/networkUpdate/${userObj.id}`,\n\n\n                                    {\n                                      \"shared_with\": a,\n                                      \"product\": userObj.product,\n                                      \"Quantity\": userObj.Quantity,\n                                      \"Units\": userObj.Units\n                                    },\n                                    {\n                                      headers: {\n                                        \"Content-type\": \"application/json\",\n                                      }\n                                    }\n\n                                  )\n                                    .then(response => {\n                                      if (response.status == 201) {\n                                        window.alert('post status successfully changed to closed');\n                                      }\n\n                                      fetchSharedData();\n                                      fetchData();\n                                      fetchDataCreator();\n                                      fetchDataReceiving();\n                                      fetchDataSharing();\n\n                                    })\n                                    .catch(err => console.warn(err));\n\n                                }\n                              }\n                            }}\n\n                          >\n                            {(() => {\n                              if (userObj.state == 'open') {\n                                // document.getElementById('status').style.borderColor = 'green';\n                                return (\n                                  <><option selected> open </option><option> closed </option></>\n                                )\n                              } else {\n                                // document.getElementById('status').style.borderColor = 'red';\n                                return (\n                                  <><option> open </option><option selected> closed </option></>\n                                )\n                              }\n                            })()}\n                          </select>\n                        )\n                      } else { }\n                    })()}\n                    <div class='card-body'>\n                      <h6 class='card-text'>\n                        {userObj.Description}\n                      </h6>\n                      {/* <a href='\"+ url_mask + \"' id='postbutton' class='btn btn-outline-success'>Comment</a>*/}\n                      <p><small>Posted By: <br /> Contact: {userObj.Email}</small></p>\n                      <p class='text-success'> {userObj.Type} </p>\n\n                    </div>\n                  </div>\n                )).reverse()}\n              </div>\n            </div>\n\n            <Modal show={showModal} onHide={handleClose}>\n              <Modal.Header closeButton>\n                <Modal.Title>Create Post</Modal.Title>\n              </Modal.Header>\n              <Modal.Body>\n                <div>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"product\">Product</label>\n                    <input type=\"text\" className=\"form-control\" id=\"product\" placeholder=\"Enter product name\"\n                      onChange={(event) => {\n                        setPosts({ ...posts, product: event.target.value })\n                      }}\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"quantity\">Quantity</label>\n                    <input type=\"number\" step=\"any\" className=\"form-control\" id=\"quantity\" placeholder=\"Enter quantity\"\n                      onChange={(event) => {\n                        setPosts({ ...posts, Quantity: event.target.value })\n                      }}\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"units\">Units</label>\n                    <select className=\"form-control\" id=\"units\"\n                      onChange={(event) => {\n                        setPosts({ ...posts, Units: event.target.value })\n                      }}\n                    >\n                      <option>Choose an option</option>\n                      <option>lbs</option>\n                      <option>kgs</option>\n                    </select>\n                  </div>\n                  <br />\n                  <div className=\"form-group\">\n                    <label htmlFor=\"desc\">Description</label>\n                    <textarea className=\"form-control\" id=\"desc\" rows=\"3\"\n                      onChange={(event) => {\n                        setPosts({ ...posts, Description: event.target.value })\n                      }}\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"type\">Type</label>\n                    <select className=\"form-control\" id=\"type\"\n                      onChange={(event) => {\n                        setPosts({ ...posts, Type: event.target.value })\n                      }}\n                    >\n                      <option>Choose an option</option>\n                      <option>Sharing</option>\n                      <option>Receiving</option>\n                    </select>\n                  </div>\n\n                  <Button variant=\"primary\" type=\"submit\"\n                    onClick={(e) => {\n                      axios.post(\n                        \"http://127.0.0.1:8000/api/networkInsert/\",\n                        {\n                          product: posts.product,\n                          Type: posts.Type,\n                          Quantity: posts.Quantity,\n                          Units: posts.Units,\n                          Description: posts.Description,\n                          Email: localStorage.getItem(\"email\"),\n                        },\n                        {\n                          headers: {\n                            \"Content-type\": \"application/json\",\n                          }\n                        }\n                      )\n                        .then(response => {\n                          if (response.status == 201) {\n                            handleClose(e); //Close modal\n                            //window.alert(\"Your form has been submitted succesfully\")\n                            fetchData();\n                          }\n                        })\n                        .catch(err => console.warn(err));\n                    }}\n                  >\n                    Submit\n                  </Button>\n                </div>\n              </Modal.Body>\n            </Modal>\n          </div>\n        </>\n      )\n    }\n    else if (new Date().getTime() > localStorage.getItem('expiry') && !(localStorage.roles)) {\n      return (\n        <section>\n          <div className=\"flex-container\">\n            <div className=\"text-center\">\n              <h1 className='heading1'>\n                <span className=\"fade-in\" id=\"digit1\">4</span>\n                <span className=\"fade-in\" id=\"digit2\">0</span>\n                <span className=\"fade-in\" id=\"digit3\">4</span>\n              </h1>\n              <h3 className=\"heading3 fadeIn\">YOU MUST LOGIN TO VIEW THIS PAGE</h3>\n              <a href='/login'><Button type=\"button\" class='btn btn-primary ' name=\"button\">Login</Button></a>\n            </div>\n          </div>\n        </section>\n      );\n    }\n  }\n}\n\nexport default SearchBar;\n\n",[],"/Users/harmansahota/Desktop/Multiple-days-Non-Profits-and-Health-Wellness-Group-B/frontend/src/pages/tracker.js",["145","146","147","148","149","150","151","152","153","154"],[],"import React, { useState, useRef, useEffect } from \"react\";\nimport axios from \"axios\";\n\nimport trackerCSS from \"./tracker.module.css\";\nimport fourcss from \"./fourcss.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Table from \"react-bootstrap/Table\";\n\nimport * as d3Fetch from \"d3-fetch\";\nimport * as d3Scale from \"d3-scale\";\nimport * as d3Shape from \"d3-shape\";\nimport * as d3Selection from \"d3-selection\";\nimport * as d3Axis from \"d3-axis\";\nimport * as d3ScaleChromatic from \"d3-scale-chromatic\";\n\nfunction Tracker() {\n  const [getData, setData] = useState([]);\n  const [getPercentageData, setPercentageData] = useState([]);\n  const [getCategoryData, setCategoryData] = useState([]);\n\n  const fetchData = async () => {\n    const response = await fetch(\"http://127.0.0.1:8000/api/trackerPull/\");\n    const data = await response.json();\n    return setData(data);\n\n  }\n  const fetchPercentagechartData = async () => {\n    const response = await fetch(\"http://localhost:8000/api/trackerPercentageSum/\");\n    const data = await response.json();\n    return setPercentageData(data);\n\n  }\n  const fetchCategorychartData = async () => {\n    const response = await fetch(\"http://localhost:8000/api/trackerCategorySum/\");\n    const data = await response.json();\n    return setCategoryData(data);\n\n  }\n\n\n  useEffect(() => {\n    fetchData();\n    fetchPercentagechartData();\n    fetchCategorychartData();\n  }, [])\n\n\n\n  const [trackers, setTrackers] = useState({\n    Category: \"Fresh Produce\",\n    Description: \"\",\n    Quantity: \"\",\n    Qunits: \"lb\",\n    amountToClients: \"\",\n    amountToAFeed: \"\",\n    amountToCompost: \"\",\n    amountToPartnerNetwork: \"\",\n    Email: \"\",\n    Organization: \"\"\n   \n  });\n\n  const quantity = useRef();\n  const clients = useRef();\n  const animalFeed = useRef();\n  const compost = useRef();\n  const partnerNetwork = useRef();\n  const landFill = useRef();\n\n  const percentClients = useRef();\n  const percentAnimalFeed = useRef();\n  const percentCompost = useRef();\n  const percentPartnerNetwork = useRef();\n  const percentLandFill = useRef();\n\n  // setInterval(calculateLandFillPercent(), 500);\n  useEffect(() => {\n    const interval = setInterval(function () {\n      calculateLandFillAndPercentsWrapper();\n    }, 500);\n    return () => clearInterval(interval);\n  }, []);\n\n  function calculateLandFillAndPercentsWrapper() {\n    calculateLandFill();\n    calculatePercent();\n    calculateLandFillPercent();\n  }\n\n  function calculateLandFill() {\n    const sum =\n      Number(clients.current.value) +\n      Number(animalFeed.current.value) +\n      Number(compost.current.value) +\n      Number(partnerNetwork.current.value);\n    const diff = Number(quantity.current.value) - Number(sum);\n\n    landFill.current.value = Number(diff);\n  }\n\n  function calculateLandFillPercent() {\n    const sum =\n      Number(percentClients.current.value) +\n      Number(percentAnimalFeed.current.value) +\n      Number(percentCompost.current.value) +\n      Number(percentPartnerNetwork.current.value);\n\n    const diff = 100 - Number(sum);\n\n    percentLandFill.current.value = Number(diff).toFixed(2);\n  }\n\n  function calculatePercent() {\n    percentClients.current.value = (\n      Number(Number(clients.current.value) / Number(quantity.current.value)) *\n      100\n    ).toFixed(2);\n    percentAnimalFeed.current.value = (\n      Number(\n        Number(animalFeed.current.value) / Number(quantity.current.value)\n      ) * 100\n    ).toFixed(2);\n    percentCompost.current.value = (\n      Number(Number(compost.current.value) / Number(quantity.current.value)) *\n      100\n    ).toFixed(2);\n    percentPartnerNetwork.current.value = (\n      Number(\n        Number(partnerNetwork.current.value) / Number(quantity.current.value)\n      ) * 100\n    ).toFixed(2);\n  }\n\n  // Downloading CSV\n  function downloadCSV(csv, filename) {\n    const csvFile = new Blob([csv], { type: \"text/csv\" });\n    const downloadLink = document.createElement(\"a\");\n\n    downloadLink.download = filename;\n    downloadLink.href = window.URL.createObjectURL(csvFile);\n\n    downloadLink.style.display = \"none\";\n\n    document.body.appendChild(downloadLink);\n    downloadLink.click();\n  }\n\n  // Exporting Table to CSV\n  function exportTableToCSV(filename) {\n    var csv;\n    const rows = document.querySelectorAll(\"table tr\");\n\n    for (var i = 0; i < rows.length; i++) {\n      var row = [],\n        cols = rows[i].querySelectorAll(\"td, th\");\n\n      for (var j = 0; j < cols.length - 1; j++) row.push(cols[j].innerText);\n\n      csv.push(row.join(\",\"));\n    }\n    downloadCSV(csv.join(\"\\n\"), filename);\n  }\n\n  var trackerData = JSON.stringify(trackers);\n  if (\n    new Date().getTime() > localStorage.getItem(\"expiry\") &&\n    localStorage.roles\n  ) {\n    const response = window.confirm(\n      \"Your session has expired. Do you still want to be logged in?\"\n    );\n\n    if (response) {\n      localStorage.removeItem(\"expiry\");\n      const date = new Date().setHours(new Date().getHours() + 1);\n      localStorage.setItem(\"expiry\", date);\n    }\n  }\n\n  {\n    if (\n      new Date().getTime() < localStorage.getItem(\"expiry\") &&\n      localStorage.roles\n    ) {\n      return (\n        <div className=\"container p-2\">\n          <p>\n            <strong>Welcome, {localStorage.getItem(\"firstname\")}!</strong>\n          </p>\n          <div className=\"card\">\n            <div className=\"card-header\">\n              <h3>Enter tracker data:</h3>\n            </div>\n            <div className=\"card-body\">\n              <div id=\"form-wrapper\">\n                <div\n                  className=\"tracker-data-entry\"\n                  id=\"tracker\"\n                >\n                  <Form.Group>\n                    {/* {% csrf_token %} */}\n                    <div className=\"row\">\n                      <div className=\"col-md-auto\">\n                        <label htmlFor=\"category\">Category</label>\n                        <br />\n                        <select\n                          className=\"form-select\"\n                          id=\"category\"\n                          name=\"category\"\n                          onChange={(event) => {\n                            setTrackers({\n                              ...trackers,\n                              Category: event.target.value,\n                            });\n                          }}\n                        >\n                          <option selected>Fresh Produce</option>\n                          <option>Meat</option>\n                          <option>Canned Food</option>\n                          <option>Bread</option>\n                          <option>Dairy</option>\n                          <option>Reclaimed</option>\n                        </select>\n                      </div>\n                      <div className=\"col-md-auto\">\n                        <label htmlFor=\"description\">Description</label>\n                        <br />\n                        <input\n                          type=\"text\"\n                          id=\"description\"\n                          className={`form-control input-text ${trackerCSS[\"customised-input\"]}`}\n                          placeholder=\"Description\"\n                          name=\"description\"\n                          onChange={(event) => {\n                            setTrackers({\n                              ...trackers,\n                              Description: event.target.value,\n                            });\n                          }}\n                        />\n                      </div>\n                      <div className=\"col-md-auto\">\n                        <label htmlFor=\"quantity\">Quantity</label>\n                        <br />\n                        <input\n                          type={`text`}\n                          id=\"quantity\"\n                          className={`form-control input-text ${trackerCSS[\"customised-input\"]}`}\n                          placeholder=\"Quantity\"\n                          name=\"quantity\"\n                          ref={quantity}\n                          onKeyUp={calculateLandFillAndPercentsWrapper}\n                          onChange={(event) => {\n                            setTrackers({\n                              ...trackers,\n                              Quantity: event.target.value,\n                            });\n                          }}\n                        />\n                      </div>\n                      <div className=\"col-md-auto\">\n                        <label htmlFor=\"qunits\">Units</label>\n                        <br />\n                        <select\n                          className=\"form-select\"\n                          id=\"qunits\"\n                          name=\"qunits\"\n                          onChange={(event) => {\n                            setTrackers({\n                              ...trackers,\n                              Qunits: event.target.value,\n                            });\n                          }}\n                        >\n                          <option selected>lbs</option>\n                          <option>kgs</option>\n                        </select>\n                      </div>\n                      <div className=\"col-auto\">\n                        <div className=\"row\">\n                          <div className=\"col-auto\">\n                            <label htmlFor=\"amount\">Amount</label>\n                          </div>\n                        </div>\n                        <div className=\"row pb-2\">\n                          <div className=\"col-auto\">\n                            <input\n                              type=\"number\"\n                              step=\"any\"\n                              className={`form-control ${trackerCSS[\"customised-input\"]}`}\n                              id=\"clients\"\n                              name=\"clients\"\n                              ref={clients}\n                              min={0}\n                              // style={{ width: \"10em\" }}\n                              onKeyUp={calculateLandFillAndPercentsWrapper}\n                              // onkeyup=\"calculateLandfill(); calculatePercent()\n                              onChange={(event) => {\n                                setTrackers({\n                                  ...trackers,\n                                  amountToClients: event.target.value,\n                                });\n                              }}\n                            />\n                          </div>\n                        </div>\n                        <div className=\"row pb-2\">\n                          <div className=\"col-auto\">\n                            <input\n                              type=\"number\"\n                              step = \"any\"\n                              className={`form-control ${trackerCSS[\"customised-input\"]}`}\n                              id=\"animalFeed\"\n                              name=\"animalFeed\"\n                              ref={animalFeed}\n                              min={0}\n                              onKeyUp={calculateLandFillAndPercentsWrapper}\n                              // onkeyup=\"calculateLandfill(); calculatePercent()\"\n                              onChange={(event) => {\n                                setTrackers({\n                                  ...trackers,\n                                  amountToAFeed: event.target.value,\n                                });\n                              }}\n                            />\n                          </div>\n                        </div>\n                        <div className=\"row pb-2\">\n                          <div className=\"col-auto\">\n                            <input\n                              type=\"number\"\n                              step = \"any\"\n                              className={`form-control ${trackerCSS[\"customised-input\"]}`}\n                              id=\"compost\"\n                              name=\"compost\"\n                              ref={compost}\n                              min={0}\n                              onKeyUp={calculateLandFillAndPercentsWrapper}\n                              // onkeyup=\"calculateLandfill(); calculatePercent()\"\n                              onChange={(event) => {\n                                setTrackers({\n                                  ...trackers,\n                                  amountToCompost: event.target.value,\n                                });\n                              }}\n                            />\n                          </div>\n                        </div>\n                        <div className=\"row pb-2\">\n                          <div className=\"col-auto\">\n                            <input\n                              type=\"number\"\n                              step = \"any\"\n                              className={`form-control ${trackerCSS[\"customised-input\"]}`}\n                              id=\"partnerNetwork\"\n                              name=\"partnerNetwork\"\n                              ref={partnerNetwork}\n                              min={0}\n                              onKeyUp={calculateLandFillAndPercentsWrapper}\n                              // onKeyUp={() => {calculateLandfill(); calculatePercent()}}\n                              // onkeyup=\"calculateLandfill(); calculatePercent()\"\n                              onChange={(event) => {\n                                setTrackers({\n                                  ...trackers,\n                                  amountToPartnerNetwork: event.target.value,\n                                });\n                              }}\n                            />\n                          </div>\n                        </div>\n                        <div className=\"row pb-2\">\n                          <div className=\"col-auto\">\n                            <input\n                              type=\"number\"\n                              step = \"any\"\n                              className={`form-control ${trackerCSS[\"customised-input\"]}`}\n                              id=\"landFill\"\n                              name=\"landFill\"\n                              ref={landFill}\n                              min={0}\n                              onChange={(event) => {\n                                setTrackers({\n                                  ...trackers,\n                                  amountToLandfill: event.target.value,\n                                });\n                              }}\n                            />\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"col\">\n                        <div className=\"row\">\n                          <div className=\"col-auto\">\n                            <label htmlFor=\"percent\">% Diverted to:</label>\n                            <br />\n                          </div>\n                        </div>\n                        <div className=\"row pb-2\">\n                          <div className=\"col-auto\">\n                            <input\n                              type=\"number\"\n                              step = \"any\"\n                              className={`form-control ${trackerCSS[\"customised-smaller-input\"]}`}\n                              id=\"percentClients\"\n                              name=\"percentClients\"\n                              ref={percentClients}\n                              min={0}\n                              value={0}\n                              max={100}\n                              onLoad={calculateLandFillPercent}\n                              onChange={(event) => {\n                                setTrackers({\n                                  ...trackers,\n                                  percentClients: event.target.value,\n                                });\n                              }}\n                              // onLoad={() => calculateLandfillPercent()}\n                              // onload=\"calculateLandfillPercent()\"\n                              readonly\n                            />\n                          </div>\n                          <div className=\"col d-flex align-items-center\">\n                            Clients\n                          </div>\n                        </div>\n                        <div className=\"row pb-2\">\n                          <div className=\"col-auto\">\n                            <input\n                              type=\"number\"\n                              step = \"any\"\n                              className={`form-control ${trackerCSS[\"customised-smaller-input\"]}`}\n                              id=\"percentAnimalFeed\"\n                              name=\"percentAnimalFeed\"\n                              ref={percentAnimalFeed}\n                              min={0}\n                              value={0}\n                              max={100}\n                              onLoad={calculateLandFillPercent}\n                              onChange={(event) => {\n                                setTrackers({\n                                  ...trackers,\n                                  percentAFeed: event.target.value,\n                                });\n                              }}\n                              // onLoad={() => calculateLandfillPercent()}\n                              // onload=\"calculateLandfillPercent()\"\n                              readonly\n                            />\n                          </div>\n                          <div className=\"col d-flex align-items-center\">\n                            Animal Feed\n                          </div>\n                        </div>\n                        <div className=\"row pb-2\">\n                          <div className=\"col-auto\">\n                            <input\n                              type=\"number\"\n                              step = \"any\"\n                              className={`form-control ${trackerCSS[\"customised-smaller-input\"]}`}\n                              id=\"percentCompost\"\n                              name=\"percentCompost\"\n                              ref={percentCompost}\n                              min={0}\n                              value={0}\n                              max={100}\n                              onLoad={calculateLandFillPercent}\n                              onChange={(event) => {\n                                setTrackers({\n                                  ...trackers,\n                                  percentCompost: event.target.value,\n                                });\n                              }}\n                              // onLoad={() => calculateLandfillPercent()}\n                              // onload=\"calculateLandfillPercent()\"\n                              readonly\n                            />\n                          </div>\n                          <div className=\"col d-flex align-items-center\">\n                            Compost / Fertilizer\n                          </div>\n                        </div>\n                        <div className=\"row pb-2\">\n                          <div className=\"col-auto\">\n                            <input\n                              type=\"number\"\n                              step = \"any\"\n                              className={`form-control ${trackerCSS[\"customised-smaller-input\"]}`}\n                              id=\"percentPartnerNetwork\"\n                              name=\"percentPartnerNetwork\"\n                              ref={percentPartnerNetwork}\n                              min={0}\n                              value={0}\n                              max={100}\n                              onLoad={calculateLandFillPercent}\n                              onChange={(event) => {\n                                setTrackers({\n                                  ...trackers,\n                                  percentPartNet: event.target.value,\n                                });\n                              }}\n                              // onLoad={() => calculateLandfillPercent()}\n                              // onLoad=\"calculateLandfillPercent()\"\n                              readonly\n                            />\n                          </div>\n                          <div className=\"col d-flex align-items-center\">\n                            Partner Network\n                          </div>\n                        </div>\n                        <div className=\"row pb-2\">\n                          <div className=\"col-auto\">\n                            <input\n                              type=\"number\"\n                              step = \"any\"\n                              className={`form-control ${trackerCSS[\"customised-smaller-input\"]}`}\n                              id=\"percentLandFill\"\n                              name=\"percentLandFill\"\n                              ref={percentLandFill}\n                              value={100}\n                              onChange={(event) => {\n                                setTrackers({\n                                  ...trackers,\n                                  percentLandfill: event.target.value,\n                                });\n                              }}\n                              readonly\n                            />\n                          </div>\n                          <div className=\"col d-flex align-items-center\">\n                            Landfill\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"row p-2\">\n                      <div className=\"d-flex justify-content-start\">\n                        <Button\n                          variant=\"outline-success\"\n                          className={`${trackerCSS[\"save\"]} btn btn-outline-success`}\n                          id=\"submit\"\n                          onClick={(e) => {\n                            \n                            \n                           \n                            axios\n                              .post(\n                                \"http://127.0.0.1:8000/api/trackerInsert/\",\n                                {\n                                  Category: trackers.Category,\n                                  Description: trackers.Description,\n                                  Quantity: trackers.Quantity,\n                                  Qunits: trackers.Qunits,\n                                  amountToClients: trackers.amountToClients,\n                                  amountToAFeed: trackers.amountToAFeed,\n                                  amountToCompost: trackers.amountToCompost,\n                                  amountToPartNet:\n                                    trackers.amountToPartnerNetwork,\n                                  amountToLandfill: document.getElementById('landFill').value,\n                                  percentClients: document.getElementById('percentClients').value,\n                                  percentAFeed: document.getElementById('percentAnimalFeed').value,\n                                  percentCompost: document.getElementById('percentCompost').value,\n                                  percentPartNet: document.getElementById('percentPartnerNetwork').value,\n                                  percentLandfill: document.getElementById('percentLandFill').value,\n                                  Email: localStorage.getItem('email'),\n                                  Organization: localStorage.getItem('organization')\n                                },\n                                {\n                                  headers: {\n                                    \"Content-type\": \"application/json\",\n                                  },\n                                }\n                              )\n                              .then((response) => {\n                                if (response.status == 201) {\n                                  window.alert(\n                                    \"Your form has been submitted successfully\"\n                                  );\n                                  fetchData();\n                                  fetchPercentagechartData();\n                                  fetchCategorychartData();                                 \n                           \n\n                                }\n                              })\n                              .catch((err) => console.warn(err));\n                             \n                          }}\n                        >\n                          Save\n                        </Button>\n                      </div>\n                    </div>\n                  </Form.Group>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <br />\n          <br />\n\n          <section id=\"section\">\n            <div className=\"card\">\n              <div className={`${trackerCSS[\"card-header\"]} card-header`}>\n                <h3>Database</h3>\n                <Button\n                  type=\"button\"\n                  variant=\"outline-success\"\n                  className=\"btn btn-outline-success\"\n                  onClick={function () {\n                    exportTableToCSV(\"data.csv\");\n                  }}\n                  // onClick={() => exportTableToCSV(\"data.csv\")}\n                >\n                  Export CSV\n                </Button>\n              </div>\n              <div className=\"card-body\">\n                <Table\n                  striped\n                  bordered\n                  hover\n                  responsive\n                  style={{ width: \"100%\" }}\n                >\n                  <thead>\n                    <tr>\n                      <th>Category</th>\n                      <th>Description</th>\n                      <th>Quantity</th>\n                      <th>Units</th>\n                      <th>Clients</th>\n                      <th>Animal Feed</th>\n                      <th>Compost</th>\n                      <th>Partner Network</th>\n                      <th>Landfill</th>\n                      <th>Date Time</th>\n                      <th></th>\n                   \n                    </tr>\n                  </thead>\n                  <tbody>\n                    \n                  {getData && getData.length > 0 && getData.map((userObj) => (\n                 \n                    <tr>\n                      <td>{userObj.Category}</td>\n                      <td>{userObj.Description}</td>\n                      <td>{userObj.Quantity}</td>\n                      <td>{userObj.Qunits}</td>\n                      <td>{userObj.percentClients}</td>\n                      <td>{userObj.percentAFeed}</td>\n                      <td>{userObj.percentCompost}</td>\n                      <td>{userObj.percentPartNet}</td>\n                      <td>{userObj.percentLandfill}</td>\n                      <td>{userObj.date_time}</td>\n                      <td>\n                        <div>\n                \n                          <Button\n                            variant=\"danger\"\n                            className=\"btn btn-danger\"\n                            name=\"field\"\n                          >\n                            Delete\n                          </Button>\n                        </div>\n                      </td>\n                    </tr>\n                    ))}\n                   \n                  </tbody>\n                </Table>\n              </div>\n            </div>\n          </section>\n\n          <br />\n        \n          <div id=\"penetrate\" className=\"penetrate\" onLoad={pieChart}></div>\n          {/* {{ json|json_script:\"json\" }} */}\n        </div>\n      );\n    } else if (\n      new Date().getTime() > localStorage.getItem(\"expiry\") &&\n      !localStorage.roles\n    ) {\n      return (\n        <section>\n          <div className=\"flex-container\">\n            <div className=\"text-center\">\n              <h1 className=\"heading1\">\n                <span className=\"fade-in\" id=\"digit1\">\n                  4\n                </span>\n                <span className=\"fade-in\" id=\"digit2\">\n                  0\n                </span>\n                <span className=\"fade-in\" id=\"digit3\">\n                  4\n                </span>\n              </h1>\n              <h3 className=\" heading3 fadeIn\">\n                YOU MUST LOGIN TO VIEW THIS PAGE\n              </h3>\n              <a href=\"/login\">\n                <Button type=\"button\" class=\"btn btn-primary \" name=\"button\">\n                  Login\n                </Button>\n              </a>\n            </div>\n          </div>\n        </section>\n      );\n    }\n  }\n\n  function pieChart() {\n    let penetrate = document.getElementById(\"penetrate\");\n    let h3 = document.createElement(\"h3\");\n    h3.innerText = \"Database Visuals\";\n    penetrate.appendChild(h3);\n\n    var mydata = JSON.parse(document.getElementById(\"json\").textContent);\n    mydata = JSON.parse(mydata);\n    mydata = JSON.parse(JSON.stringify(mydata));\n    mydata.forEach((val) => console.log(val.Category)); //print by field\n    console.log(mydata); // print whole object\n\n    var sum = mydata.reduce((n, { Quantity }) => n + Quantity, 0);\n    console.log(sum);\n\n    var result = Array.from(\n      mydata.reduce(\n        (acc, obj) =>\n          Object.keys(obj).reduce(\n            (acc, key) =>\n              typeof obj[key] == \"number\"\n                ? acc.set(key, (acc.get(key) || []).concat(obj[key]))\n                : acc,\n            acc\n          ),\n        new Map()\n      ),\n      ([name, values]) => ({\n        name,\n        average: (values.reduce((a, b) => a + b) / sum) * 100,\n      })\n    );\n    console.log(result);\n\n    let mycategory = mydata[0].Category;\n    let myclients = result[1].average.toFixed(2);\n    let myfeeds = result[2].average.toFixed(2);\n    let mycompost = result[3].average.toFixed(2);\n    let mypartners = result[4].average.toFixed(2);\n    let mylandfill = result[5].average.toFixed(2);\n\n    let thedata = [\n      { category: \"Clients\", number: myclients },\n      { category: \"Animal Feed\", number: myfeeds },\n      { category: \"Compost / Fertilizer\", number: mycompost },\n      { category: \"Partner Network\", number: mypartners },\n      { category: \"Landfill\", number: mylandfill },\n    ];\n\n    let width = 750,\n      height = 500;\n\n    let colors = d3Scale.scaleOrdinal(d3ScaleChromatic.schemeDark2);\n\n    let svg = d3Selection\n      .select(\"body\")\n      .append(\"svg\")\n      .attr(\"width\", width)\n      .attr(\"height\", height)\n      .style(\"background\", \"#e7f5e4\");\n\n    let data = d3Shape\n      .pie()\n      .sort(null)\n      .value(function (d) {\n        return d.number;\n      })(thedata);\n\n    let segments = d3Shape\n      .arc()\n      .innerRadius(0)\n      .outerRadius(200)\n      .padAngle(0.05)\n      .padRadius(50);\n\n    let sections = svg\n      .append(\"g\")\n      .attr(\"transform\", \"translate(250, 250)\")\n      .selectAll(\"path\")\n      .data(data);\n\n    sections\n      .enter()\n      .append(\"path\")\n      .attr(\"d\", segments)\n      .attr(\"fill\", function (d) {\n        return colors(d.data.category);\n      });\n\n    let content = d3Selection.select(\"g\").selectAll(\"text\").data(data);\n\n    content\n      .enter()\n      .append(\"text\")\n      .classed(\"inside\", true)\n      .each(function (d) {\n        let center = segments.centroid(d);\n        d3Selection\n          .select(this)\n          .attr(\"x\", center[0])\n          .attr(\"y\", center[1])\n          .text(`${d.data.category}:\\n${d.data.number}`)\n          .style(\"text-anchor\", \"middle\");\n      });\n\n    let legends = svg\n      .append(\"g\")\n      .attr(\"transform\", \"translate(500, 100)\")\n      .selectAll(\".legends\")\n      .data(data);\n\n    let legend = legends\n      .enter()\n      .append(\"g\")\n      .classed(\"legends\", true)\n      .attr(\"transform\", function (d, i) {\n        return \"translate(0,\" + (i + 1) * 30 + \")\";\n      });\n\n    legend\n      .append(\"rect\")\n      .attr(\"width\", 20)\n      .attr(\"height\", 20)\n      .attr(\"fill\", function (d) {\n        return colors(d.data.category);\n      });\n\n    legend\n      .append(\"text\")\n      .classed(\"label\", true)\n      .text(function (d) {\n        return d.data.category;\n      })\n      .attr(\"fill\", function (d) {\n        return colors(d.data.category);\n      })\n      .attr(\"x\", 30)\n      .attr(\"y\", 15);\n    //   console.log(`Hey my category is: ${mydata[0].Category}`);\n    //   for (let i = 0; i < mydata.length; i++) console.log(mydata[i].DivertAFeed);\n  }\n}\nexport default Tracker;\n","/Users/harmansahota/Desktop/Multiple-days-Non-Profits-and-Health-Wellness-Group-B/frontend/src/index.js",[],[],"/Users/harmansahota/Desktop/Multiple-days-Non-Profits-and-Health-Wellness-Group-B/frontend/src/App.js",["155","156"],[],"import NavbarOut from \"./components/NavBarOut\";\nimport NavbarIn from \"./components/NavBarIn\";\nimport Footer from \"./components/footer\";\nimport { useState, useEffect } from 'react';\nimport Home from \"./pages/Home\";\nimport Login from \"./pages/login\";\nimport ResetPassword from \"./pages/resetPassword\";\nimport Register from \"./pages/register\";\nimport FAQ from \"./pages/faq\";\nimport Directory from \"./pages/directory\";\nimport PublicSharing from \"./pages/publicSharing\";\n\nimport Profile from \"./pages/profile\";\nimport SearchBar from \"./pages/network\";\nimport Comment from \"./pages/comment\";\nimport Tracker from \"./pages/tracker\";\nimport Admin from \"./pages/admin\";\n\nimport \"./App.css\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <>\n      <Router>\n        <Routes>\n          <Route\n            exact\n            path=\"/\"\n            element={\n              <>\n                <NavbarOut />\n                <Home title=\"Home\" />\n                <Footer />\n              </>\n            }\n          />\n        </Routes>\n      </Router>\n\n      <Router>\n        <Routes>\n          <Route\n            exact\n            path=\"/login\"\n            element={\n              <>\n                <NavbarOut />\n                <Login />\n                <Footer />\n              </>\n            }\n          />\n        </Routes>\n      </Router>\n\n      <Router>\n        <Routes>\n          <Route\n            exact\n            path=\"/register\"\n            element={\n              <>\n                <NavbarOut />\n                <Register />\n                <Footer />\n              </>\n            }\n          />\n        </Routes>\n      </Router>\n\n      <Router>\n        <Routes>\n          <Route\n            exact\n            path=\"/faq\"\n            element={\n              <>\n                <NavbarOut />\n                <FAQ />\n                <Footer />\n              </>\n            }\n          />\n        </Routes>\n      </Router>\n\n      <Router>\n        <Routes>\n          <Route\n            exact\n            path=\"/directory\"\n            element={\n              <>\n                <NavbarOut />\n                <Directory />\n                <Footer />\n              </>\n            }\n          />\n        </Routes>\n      </Router>\n\n      <Router>\n        <Routes>\n          <Route\n            exact\n            path=\"/publicSharing\"\n            element={\n              <>\n                <NavbarOut />\n                <PublicSharing />\n                <Footer />\n              </>\n            }\n          />\n        </Routes>\n      </Router>\n\n      <Router>\n        <Routes>\n          <Route\n            exact\n            path=\"/resetPassword\"\n            element={\n              <>\n                <NavbarOut />\n                <ResetPassword />\n                <Footer />\n              </>\n            }\n          />\n        </Routes>\n      </Router>\n\n      <Router>\n        <Routes>\n          <Route\n            exact\n            path=\"/profile\"\n            element={\n              <>\n                <NavbarIn />\n                <Profile />\n                <Footer />\n              </>\n            }\n          />\n        </Routes>\n      </Router>\n\n      <Router>\n        <Routes>\n          <Route\n            exact\n            path=\"/network\"\n            element={\n              <>\n                <NavbarIn />\n                <SearchBar />\n                <Footer />\n              </>\n            }\n          />\n        </Routes>\n      </Router>\n\n      <Router>\n        <Routes>\n          <Route\n            exact\n            path=\"/comments\"\n            element={\n              <>\n                <NavbarIn />\n                <Comment />\n                <Footer />\n              </>\n            }\n          />\n        </Routes>\n      </Router>\n\n      <Router>\n        <Routes>\n          <Route\n            exact\n            path=\"/tracker\"\n            element={\n              <>\n                <NavbarIn />\n                <Tracker />\n                <Footer />\n              </>\n            }\n          />\n        </Routes>\n      </Router>\n\n      <Router>\n        <Routes>\n          <Route\n            exact\n            path=\"/admin\"\n            element={\n             \n          \n                <>\n                <NavbarIn />\n                <Admin />\n                <Footer />\n                </>\n     \n            \n            }\n          />\n        </Routes>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","/Users/harmansahota/Desktop/Multiple-days-Non-Profits-and-Health-Wellness-Group-B/frontend/src/reportWebVitals.js",[],[],"/Users/harmansahota/Desktop/Multiple-days-Non-Profits-and-Health-Wellness-Group-B/frontend/src/components/NavBarOut.js",["157"],[],"import React from \"react\";\nimport \"./base.css\";\nimport Button from \"react-bootstrap/Button\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLeaf } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction NavbarOut() {\n  return (\n    <>\n      <header>\n        <div id=\"brand\">\n          <a href=\"\">\n            <FontAwesomeIcon icon={faLeaf} style={{ color: \"#A1C298\" }} />\n            <b> &nbsp; FoodSaviour</b>\n          </a>\n        </div>\n        <div className=\"nav\" id=\"desktop-menu\">\n          <ul>\n            <li>\n              <a href=\"/\">Home</a>\n            </li>\n            <li id=\"gettingStarted\">\n              <a href=\"/faq\">FAQ</a>\n            </li>\n            <li>\n              <a href=\"/directory\">Directory</a>\n            </li>\n            <li>\n              <a href=\"/publicSharing\">Public Sharing</a>\n            </li>\n            <li id=\"login\">\n              <a href=\"/login\">Login</a>\n            </li>\n            <li id=\"signup\">\n              <a href=\"/register\">\n                <Button\n                  className=\"register btn btn-outline-success\"\n                  variant=\"outline-success\"\n                >\n                  Register\n                </Button>\n              </a>\n            </li>\n          </ul>\n        </div>\n      </header>\n\n      <div id=\"hamburger-icon\">\n        <div className=\"bar1\"></div>\n        <div className=\"bar2\"></div>\n        <div className=\"bar3\"></div>\n        <div className=\"nav\">\n          <ul className=\"mobile-menu\">\n            <li>\n              <a href=\"{% url 'home' %}\">Home</a>\n            </li>\n            <li>\n              <a href=\"faq/\">FAQ</a>\n            </li>\n            <li>\n              <a href=\"directory/\">Directory</a>\n            </li>\n            <li id=\"login\">\n              <a href=\"login/\">Login</a>\n            </li>\n            <li id=\"signup\">\n              <a href=\"register/\">Register</a>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default NavbarOut;\n","/Users/harmansahota/Desktop/Multiple-days-Non-Profits-and-Health-Wellness-Group-B/frontend/src/components/footer.js",[],[],"/Users/harmansahota/Desktop/Multiple-days-Non-Profits-and-Health-Wellness-Group-B/frontend/src/components/NavBarIn.js",["158"],[],"/Users/harmansahota/Desktop/Multiple-days-Non-Profits-and-Health-Wellness-Group-B/frontend/src/pages/Home.js",["159","160","161","162","163"],[],"/Users/harmansahota/Desktop/Multiple-days-Non-Profits-and-Health-Wellness-Group-B/frontend/src/pages/register.js",["164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194"],[],"import React, { useState } from \"react\";\nimport { redirect } from \"react-router-dom\";\nimport SignUpInfo from \"../components/Step1\";\nimport PersonalInfo from \"../components/Step2\";\nimport OtherInfo from \"../components/Step3\";\nimport Confirm from \"../components/Step4\";\nimport Button from \"react-bootstrap/Button\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./register.css\";\nimport axios from 'axios';\nimport { local } from \"d3-selection\";\n\nfunction Form() {\n  const [page, setPage] = useState(0);\n\n  const [formData, setFormData] = useState({\n    FirstName: \"\",\n    LastName: \"\",\n    Email: \"\",\n    Password: \"\",\n    Roles: [],\n    Consent: \"\",\n    Organization: \"\",\n  });\n\n  formData.Roles = formData.Roles.toString();\n\n  const FormTitles = [\"Personal Info\", \"Pick your Roles\", \"Consent\", \"Confirm\"];\n\n  const PageDisplay = () => {\n    if (page === 0) {\n      return <SignUpInfo formData={formData} setFormData={setFormData} />;\n    } else if (page === 1) {\n      return <PersonalInfo formData={formData} setFormData={setFormData} />;\n    } else if (page === 2) {\n      return <OtherInfo formData={formData} setFormData={setFormData} />;\n    } else {\n      return <Confirm formData={formData} setFormData={setFormData} />;\n    }\n  };\n\n  return (\n    <div className=\"body\">\n      <div className=\"form-register\">\n        <div className=\"form-container-register\">\n          <div className=\"header\">\n            <h1>{FormTitles[page]}</h1>\n          </div>\n          <div className=\"progressbar\">\n            <div\n              style={{\n                width:\n                  page === 0\n                    ? \"33.3%\"\n                    : page == 1\n                      ? \"66.6%\"\n                      : page == 2\n                        ? \"88.8%\"\n                        : \"100%\",\n              }}\n            ></div>\n          </div>\n          <div className=\"body\">{PageDisplay()}</div>\n          <div className=\"footer\">\n            <Button\n              variant=\"btn btn-success\"\n              disabled={page == 0}\n              onClick={() => {\n                setPage((currPage) => currPage - 1);\n              }}\n            >\n              Back\n            </Button>\n            <Button\n              id=\"submit\"\n              variant=\"btn btn-success\"\n              onClick={(e) => {\n                if (page === FormTitles.length - 1) {\n                  console.log(JSON.parse(JSON.stringify(formData)));\n                 \n\n                  axios.post(\n                    \"http://127.0.0.1:8000/api/registerInsert/\",\n                    {\n                      FirstName: formData.FirstName,\n                      LastName: formData.LastName,\n                      Email: formData.Email,\n                      Password: formData.Password,\n                      Roles: formData.Roles,\n                      Consent: formData.Consent,\n                      Organization: formData.Organization\n                     \n                    },\n                    {\n                      headers: {\n                        \"Content-type\": \"application/json\",\n                      }\n                    }\n\n                  )\n\n                 \n                    .then(response => \n                      {if(response.status == 201){\n                        const date = new Date().setHours(new Date().getHours() + 1 );\n                        localStorage.setItem('firstname', formData.FirstName);\n                        localStorage.setItem('lastname', formData.LastName);\n                        localStorage.setItem('email', formData.Email);\n                        localStorage.setItem( 'roles', formData.Roles);\n                        localStorage.setItem( 'organization', formData.Organization);\n                        localStorage.setItem( 'consent', formData.Consent);\n                        localStorage.setItem( 'approve', \"\");\n                        localStorage.setItem('id',response.data['data']['id']);\n                        localStorage.setItem('token',response.data['token'])\n                        localStorage.setItem('expiry',date)\n\n                        window.location.replace(\"http://localhost:3000/tracker/\");\n\n\n                       \n                        }}\n                       \n                      )\n                      .catch(err => \n\n                        {if(err.status=\"409\" ){\n                          window.alert(\"Email already exists, please use a different email\");\n                    \n                        }}\n                        \n                        )\n                      \n\n                   \n\n                } else {\n                  var EmailValidRegex =\n                    /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n                  var PasswordRegex = /(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}/;\n\n                  if (page === 0) {\n                    if (\n                      formData.FirstName != \"\" &&\n                      formData.LastName != \"\" &&\n                      !/\\d/.test(formData.FirstName) &&\n                      !/\\d/.test(formData.LastName) &&\n                      formData.Email != \"\" &&\n                      formData.Email.match(EmailValidRegex) &&\n                      formData.Password != \"\" &&\n                      formData.Password.match(PasswordRegex) &&\n                      document.getElementById(\"confirm\").value == formData.Password &&\n                      formData.Organizatio != \"\"\n                    ) {\n                      setPage((currPage) => currPage + 1);\n                    }\n\n                    if (\n                      formData.FirstName == \"\" ||\n                      formData.LastName == \"\" ||\n                      formData.Email == \"\" ||\n                      formData.Password == \"\" ||\n                      formData.Organization == \"\" ||\n                      document.getElementById(\"confirm\").value == \"\"\n                    ) {\n                      window.alert(\"fields cannot be empty\");\n                    }\n\n                    if (\n                      /\\d/.test(formData.LastName) ||\n                      /\\d/.test(formData.LastName)\n                    ) {\n                      window.alert(\n                        \"First Name and Last Name cannot have numbers, please check if you entered a number in one of these fields\"\n                      );\n                    }\n\n                    if (\n                      formData.FirstName == \"\" ||\n                      /\\d/.test(formData.FirstName)\n                    ) {\n                      if (\n                        document\n                          .getElementById(\"firstname\")\n                          .hasAttribute(\"success\")\n                      )\n                        document\n                          .getElementById(\"firstname\")\n                          .classList.remove(\"success\");\n                      document\n                        .getElementById(\"firstname\")\n                        .classList.add(\"error\");\n                    } else {\n                      if (\n                        document\n                          .getElementById(\"firstname\")\n                          .hasAttribute(\"error\")\n                      )\n                        document\n                          .getElementById(\"firstname\")\n                          .classList.remove(\"error\");\n                      document\n                        .getElementById(\"firstname\")\n                        .classList.add(\"success\");\n                    }\n\n                    if (\n                      formData.LastName == \"\" ||\n                      /\\d/.test(formData.LastName)\n                    ) {\n                      if (\n                        document\n                          .getElementById(\"lastname\")\n                          .hasAttribute(\"success\")\n                      )\n                        document\n                          .getElementById(\"lastname\")\n                          .classList.remove(\"success\");\n                      document\n                        .getElementById(\"lastname\")\n                        .classList.add(\"error\");\n                    } else {\n                      if (\n                        document\n                          .getElementById(\"lastname\")\n                          .hasAttribute(\"error\")\n                      )\n                        document\n                          .getElementById(\"lastname\")\n                          .classList.remove(\"error\");\n                      document\n                        .getElementById(\"lastname\")\n                        .classList.add(\"success\");\n                    }\n\n                    if (\n                      formData.Email == \"\" ||\n                      !formData.Email.match(EmailValidRegex)\n                    ) {\n                      if (\n                        document.getElementById(\"email\").hasAttribute(\"success\")\n                      )\n                        document\n                          .getElementById(\"email\")\n                          .classList.remove(\"success\");\n                      document.getElementById(\"Email\").classList.add(\"error\");\n                      if (\n                        !formData.Email.match(EmailValidRegex) &&\n                        formData.Email != \"\"\n                      ) {\n                        window.alert(\"Email is not valid\");\n                      }\n                    } else {\n                      if ( document.getElementById(\"email\").hasAttribute(\"error\") )\n                        document\n                          .getElementById(\"email\")\n                          .classList.remove(\"error\");\n                      document.getElementById(\"email\").classList.add(\"success\");\n                    }\n\n                    if (\n                      formData.Password == \"\" ||\n                      !formData.Password.match(PasswordRegex)\n                    ) {\n                      if (\n                        document\n                          .getElementById(\"password\")\n                          .hasAttribute(\"success\")\n                      )\n                        document\n                          .getElementById(\"password\")\n                          .classList.remove(\"success\");\n                      document\n                        .getElementById(\"password\")\n                        .classList.add(\"error\");\n                      if (\n                        !formData.Email.match(PasswordRegex) &&\n                        formData.Password != \"\"\n                      ) {\n                        window.alert(\n                          \"Password Must contain at least one number and one uppercase and lowercase letter, and at least 8 or more characters\"\n                        );\n                      }\n                    } else {\n                      if (\n                        document\n                          .getElementById(\"password\")\n                          .hasAttribute(\"error\")\n                      )\n                        document\n                          .getElementById(\"password\")\n                          .classList.remove(\"error\");\n                      document\n                        .getElementById(\"password\")\n                        .classList.add(\"success\");\n                    }\n\n                    if (\n                      !(document.getElementById(\"confirm\").value == formData.Password) ||\n                      document.getElementById(\"confirm\").value == \"\"\n                    ) {\n                      if (\n                        document\n                          .getElementById(\"confirm\")\n                          .hasAttribute(\"success\")\n                      )\n                        document\n                          .getElementById(\"confirm\")\n                          .classList.remove(\"success\");\n                      document.getElementById(\"confirm\").classList.add(\"error\");\n                      if (document.getElementById(\"confirm\").value != \"\")\n                        window.alert(\"confirm Password doesnt match Password\");\n                    } else {\n                      if (\n                        document.getElementById(\"confirm\").hasAttribute(\"error\")\n                      )\n                        document\n                          .getElementById(\"confirm\")\n                          .classList.remove(\"error\");\n                      document\n                        .getElementById(\"confirm\")\n                        .classList.add(\"success\");\n                    }\n\n                    if (formData.Organizatio == \"\") {\n                      if (\n                        document.getElementById(\"org\").hasAttribute(\"success\")\n                      )\n                        document\n                          .getElementById(\"org\")\n                          .classList.remove(\"success\");\n                      document.getElementById(\"org\").classList.add(\"error\");\n                    } else {\n                      if (document.getElementById(\"org\").hasAttribute(\"error\"))\n                        document\n                          .getElementById(\"org\")\n                          .classList.remove(\"error\");\n                      document.getElementById(\"org\").classList.add(\"success\");\n                    }\n                  }\n\n                  if (page === 1) {\n                    if (formData.Roles.length == \"0\") {\n                      window.alert(\"you must pick atleast one role\");\n                      document\n                        .getElementById(\"flexCheckDefault1\")\n                        .classList.add(\"error\");\n                      document\n                        .getElementById(\"flexCheckDefault2\")\n                        .classList.add(\"error\");\n                      document\n                        .getElementById(\"flexCheckDefault3\")\n                        .classList.add(\"error\");\n                      document\n                        .getElementById(\"flexCheckDefault4\")\n                        .classList.add(\"error\");\n                      document\n                        .getElementById(\"flexCheckDefault5\")\n                        .classList.add(\"error\");\n                      document\n                        .getElementById(\"flexCheckDefault6\")\n                        .classList.add(\"error\");\n                    } else {\n                      setPage((currPage) => currPage + 1);\n                    }\n                  }\n\n                  if (page === 2) {\n                    if (formData.Consent == \"not-Consent\") {\n                      window.alert(\"you must consent to continue\");\n                      document\n                        .getElementById(\"flexCheckDefault1\")\n                        .classList.add(\"consent-check1\");\n                    } else {\n                      setPage((currPage) => currPage + 1);\n                    }\n                  }\n                }\n              }}\n            >\n              {page === FormTitles.length - 1 ? \"Submit\" : \"Next\"}\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Form;\n","/Users/harmansahota/Desktop/Multiple-days-Non-Profits-and-Health-Wellness-Group-B/frontend/src/pages/login.js",["195","196","197","198","199","200"],[],"import 'bootstrap/dist/css/bootstrap.min.css';\nimport loginCSS from './login.module.css';\nimport Button from 'react-bootstrap/Button';\nimport axios from 'axios';\nimport React, { useEffect, useState } from \"react\";\nimport { Navigate } from \"react-router-dom\";\nfunction Login() {\n  const [loginData, setLoginData] = useState([]);\n  return (\n  \n    <div className={loginCSS.body}>\n      <div className={`form-container ${loginCSS.form_container}`}>\n        <div className={`mx-auto bg-white ${loginCSS.form}`} id=\"login\"   >\n\n          <h5 className={`form-title ${loginCSS.form_title}`}>User Login</h5>\n\n\n          <div className={`form-floating  ${loginCSS.email_form}`}>\n            <input type=\"email\" id=\"exampleInputEmail1\" className=\"form-control input-text\" placeholder=\"jordan@gmail.com\" name=\"email\"\n\n              onChange={(event) =>\n                setLoginData({ ...loginData, Email: event.target.value })\n\n              }\n\n\n            />\n            <label for=\"exampleInputEmail1\" className={`form-label  ${loginCSS.input_text}`}>Email:</label>\n          </div>\n\n\n          <div className={`form-floating  ${loginCSS.password_form}`}>\n            <input type=\"password\" id=\"exampleInputPassword1\" className=\"form-control input-text\" placeholder=\"e.g. Kiwanuka\" name=\"password\"\n\n              onChange={(event) =>\n                setLoginData({ ...loginData, Password: event.target.value })\n\n              }\n            />\n            <label for=\"exampleInputPassword1\" className={`form-label  ${loginCSS.input_text}`}>Password:</label>\n          </div>\n\n\n          <Button className={`btn btn-outline-success ${loginCSS.sign_in}`} variant=\"outline-success\" id=\"submit\" for=\"login\" type=\"submit\"\n\n            onClick={(e) => {\n              axios.post(\n                \"http://127.0.0.1:8000/api/login/\",\n                {\n                    Email: loginData.Email,\n                    Password: loginData.Password\n                },\n                {\n                    headers: {\n                        \"Content-type\": \"application/json\",\n                    }\n                }\n            )\n                .then(response => {\n                    if (response.status == 200) {\n                        console.log(response.data);\n                        const date = new Date().setHours(new Date().getHours() + 1 );\n\n                        localStorage.setItem('firstname', response.data['data']['firstname']);\n                        localStorage.setItem('lastname', response.data['data']['lastname']);\n                        localStorage.setItem('email', response.data['data']['email']);\n                        localStorage.setItem( 'roles', response.data['data']['roles']);\n                        localStorage.setItem( 'organization', response.data['data']['organization']);\n                        localStorage.setItem( 'consent', response.data['data']['consent']);\n                        localStorage.setItem( 'approve', response.data['data']['approve']);\n                        localStorage.setItem( 'id', response.data['data']['id']);\n                       \n                        localStorage.setItem('token',response.data['token'])\n                        localStorage.setItem('expiry',date)\n                          window.location.replace(\"http://localhost:3000/tracker/\");\n                    }\n                })\n                .catch(err => \n\n                  {if(err.status=\"404\" && document.getElementById('exampleInputEmail1').value != \"\" && document.getElementById('exampleInputPassword1').value != \"\"){\n                    window.alert(\"invalid username or password\");\n                    document.getElementById('exampleInputEmail1').classList.add('error');\n                    document.getElementById('exampleInputPassword1').classList.add('error');\n                  }}\n                  \n                  \n                  );\n              \n              if (document.getElementById('exampleInputEmail1').value === \"\" || document.getElementById('exampleInputPassword1').value === \"\" ) {\n\n                window.alert('fields cannot be blank');\n                document.getElementById('exampleInputEmail1').classList.add('error');\n\n                document.getElementById('exampleInputPassword1').classList.add('error');\n\n              } else {\n                document.getElementById('exampleInputEmail1').classList.add('success');\n                document.getElementById('exampleInputPassword1').classList.add('success');\n              }\n\n\n\n            }}\n\n          >\n            Sign in\n          </Button>\n\n          <div className={loginCSS.trouble}>\n            <span className={`text-muted ${loginCSS.trouble_text}`}>Having trouble signing in?</span>\n            <a className={`text-danger ${loginCSS.trouble_reset}`} href=\"resetPassword/\">Reset password</a>\n          </div>\n\n          <div className={loginCSS.new_account}>\n            <span className={`text-muted ${loginCSS.new_account_text}`}>Don't have an account?</span>\n            <a href=\"/register\" className={`text-success ${loginCSS.new_account_text}`}>Create Now &rarr;</a>\n          </div>\n        </div>\n      </div>\n    </div>\n\n  );\n\n}\n\nexport default Login;","/Users/harmansahota/Desktop/Multiple-days-Non-Profits-and-Health-Wellness-Group-B/frontend/src/pages/resetPassword.js",["201"],[],"import 'bootstrap/dist/css/bootstrap.min.css';\nimport resetCSS from './resetPassword.module.css';\nimport Button from 'react-bootstrap/Button';\n//import { Form } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form'\n\nfunction resetPassword() {\n\n    return (\n        <>\n            <section>\n                <div className={resetCSS.body}>\n                    <div className={resetCSS.form_container}>\n                        <Form className={`form mx-auto bg-white ${resetCSS.form}`} action=\"\" method=\"POST\" onSubmit={(e) => {\n\n                            if (document.getElementById('exampleInputEmail1').value == \"\") {\n\n                                e.preventDefault();\n                                window.alert('fields cannot be blank');\n\n                                document.getElementById('exampleInputEmail1').classList.add('error');\n\n                            }else{\n                                document.getElementById('exampleInputEmail1').classList.add('success');\n                            }\n\n                        }}>\n                            <h5 className={`form-title ${resetCSS.form_title}`}>Reset Password</h5>\n                            <div>\n                                <span>\n                                    <p className={`form-title-text mb-0`}>\n                                        If the details entered ascribe to an account, your password will be\n                                        reset.\n                                    </p>\n                                </span>\n                            </div>\n\n                            <div className={`form-floating email-form ${resetCSS.email_form}`}>\n                                <Form.Control type=\"email\" id=\"exampleInputEmail1\" className=\"form-control input-text\" placeholder=\"jordan@gmail.com\" name=\"email\" />\n                                <Form.Label for=\"exampleInputEmail1\" className=\"form-label input-text\">Email:</Form.Label>\n                            </div>\n\n                            <Button classname={`resetPassword btn btn-outline-danger reset-button ${resetCSS.reset_button}`} variant=\"outline-danger\" type=\"submit\">Reset</Button>\n                        </Form>\n\n                    </div>\n                </div>\n            </section>\n        </>\n    );\n}\nexport default resetPassword;","/Users/harmansahota/Desktop/Multiple-days-Non-Profits-and-Health-Wellness-Group-B/frontend/src/pages/publicSharing.js",["202","203","204","205","206","207"],[],"import 'bootstrap/dist/css/bootstrap.min.css';\nimport Button from 'react-bootstrap/Button';\nimport React, { useState } from 'react';\nimport { useEffect } from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './network.css';\nimport axios, { all } from 'axios';\nvar filter = 'Product';\n\nfunction PublicSharing() {\n    const [getData, setData] = useState([]);\n  \n\n    const fetchData = async () => {\n        const response = await fetch(\"http://localhost:8000/api/networkPull/\");\n        const data = await response.json();\n        return setData(data);\n      }\n    \n      const fetchDataSharing = async () => {\n        const response = await fetch(\"http://localhost:8000/api/networkPullSharing/\");\n        const data = await response.json();\n        return setData(data);\n      }\n    \n      const fetchDataReceiving = async () => {\n        const response = await fetch(\"http://localhost:8000/api/networkPullReceiving/\");\n        const data = await response.json();\n        return setData(data);\n      }\n    \n    \n      useEffect(() => {\n        fetchData();\n      }, [])\n    \n      const [posts, setPosts] = useState({\n        product: '',\n        Type: '',\n        Units: '',\n        Quantity: '',\n        Description: '',\n        Email: ''\n      });\n    \n      const [showModal, setShowModal] = useState(false);\n      posts.Quantity = parseInt(posts.Quantity)\n      const handleClose = () => setShowModal(false);\n      const handleShow = () => setShowModal(true);\n    \n    \n     return (\n        <>\n    \n        <div className=\"container-lg col-md-auto\">\n            <div className=\"container-fluid\">\n              <div className=\"input-group\">\n                <input type=\"search\" className=\"form-control rounded\" placeholder=\"Search\" aria-label=\"Search\"\n                  onChange={(event) => {\n                    axios.post(\n                      \"http://127.0.0.1:8000/api/networkSearch/\",\n                      {\n                        filter: filter,\n                        input: event.target.value\n                      },\n                      {\n                        headers: {\n                          \"Content-type\": \"application/json\",\n                        }\n                      }\n                    )\n                      .then(response => {\n                        if (response.status == 200) {\n                          setData(response.data);\n                          console.log(response.data)\n                        }\n                      })\n                      .catch(err => console.warn(err));\n                  }}\n                />\n              </div>\n\n              <div className=\"select\">\n                <select name=\"format\" className=\"form-select\"\n                  onChange={(event) => {\n                    filter = event.target.value;\n                  }}\n                >\n                  <option value=\"Email\" >Filter by: Email</option>\n                  <option value=\"Product\" selected>Filter by: Product</option>\n                </select>\n              </div>\n\n              <div className=\"select\">\n                <select name=\"format\" className=\"form-select\">\n                  <option selected disabled>Sort By: Latest Activity</option>\n                  <option value=\"pdf\">Latest activity</option>\n                  <option value=\"txt\">Date Created</option>\n                  <option value=\"epub\">Top: Past day</option>\n                  <option value=\"fb2\">Top: Past week</option>\n                  <option value=\"mobi\">Top: Past month</option>\n                </select>\n              </div>\n\n              <div>\n                <Button type=\"Button\" className=\"create_btn btn btn-success\" onClick={handleShow}>Create Post</Button>\n              </div>\n            </div>\n\n            <div className=\"container-md\">\n              <div className=\"tab container-sm\">\n                <Button className=\"tablinks btn btn-light\" onClick={(e) => { { fetchData() } }} id=\"defaultOpen\">\n                  💬 All Posts</Button><br />\n                <Button className=\"tablinks btn btn-light\" onClick={(e) => { { fetchDataSharing() } }}  >📣 Sharing</Button><br />\n                <Button className=\"tablinks btn btn-light\" onClick={(e) => { { fetchDataReceiving() } }}>💬 Receiving</Button><br />\n              </div>\n\n              <div id=\"disc\">\n                {getData && getData.length > 0 && getData.map((userObj) => (\n                  <div class='card'>\n                    <h5 class='card-header m-0'>\n                      <span>{userObj.product} - {userObj.Quantity} {userObj.Units}</span>\n                    </h5>\n                   \n                    <div class='card-body'>\n                      <h6 class='card-text'>\n                        {userObj.Description}\n                      </h6>\n                      {/* <a href='\"+ url_mask + \"' id='postbutton' class='btn btn-outline-success'>Comment</a>*/}\n                      <p><small>Posted By: <br /> Contact: {userObj.Email}</small></p>\n                      <p class='text-success'> {userObj.Type} </p>\n\n                    </div>\n                  </div>\n                )).reverse()}\n              </div>\n            </div>\n\n            <Modal show={showModal} onHide={handleClose}>\n              <Modal.Header closeButton>\n                <Modal.Title>Create Post</Modal.Title>\n              </Modal.Header>\n              <Modal.Body>\n                <div>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"product\">Product</label>\n                    <input type=\"text\" className=\"form-control\" id=\"product\" placeholder=\"Enter product name\"\n                      onChange={(event) => {\n                        setPosts({ ...posts, product: event.target.value })\n                      }}\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"email\">Email</label>\n                    <input type=\"text\" className=\"form-control\" id=\"email\" placeholder=\"Enter your Email\"\n                      onChange={(event) => {\n                        setPosts({ ...posts, Email: event.target.value })\n                      }}\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"quantity\">Quantity</label>\n                    <input type=\"number\" step=\"any\" className=\"form-control\" id=\"quantity\" placeholder=\"Enter quantity\"\n                      onChange={(event) => {\n                        setPosts({ ...posts, Quantity: event.target.value })\n                      }}\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"units\">Units</label>\n                    <select className=\"form-control\" id=\"units\"\n                      onChange={(event) => {\n                        setPosts({ ...posts, Units: event.target.value })\n                      }}\n                    >\n                      <option>Choose an option</option>\n                      <option>lbs</option>\n                      <option>kgs</option>\n                    </select>\n                  </div>\n                  <br />\n                  <div className=\"form-group\">\n                    <label htmlFor=\"desc\">Description</label>\n                    <textarea className=\"form-control\" id=\"desc\" rows=\"3\"\n                      onChange={(event) => {\n                        setPosts({ ...posts, Description: event.target.value })\n                      }}\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"type\">Type</label>\n                    <select className=\"form-control\" id=\"type\"\n                      onChange={(event) => {\n                        setPosts({ ...posts, Type: event.target.value })\n                      }}\n                    >\n                      <option>Choose an option</option>\n                      <option>Sharing</option>\n                      <option>Receiving</option>\n                    </select>\n                  </div>\n\n                  <Button variant=\"primary\" type=\"submit\"\n                    onClick={(e) => {\n                      axios.post(\n                        \"http://127.0.0.1:8000/api/networkInsert/\",\n                        {\n                          product: posts.product,\n                          Type: posts.Type,\n                          Quantity: posts.Quantity,\n                          Units: posts.Units,\n                          Description: posts.Description,\n                          Email: posts.Email,\n                        },\n                        {\n                          headers: {\n                            \"Content-type\": \"application/json\",\n                          }\n                        }\n                      )\n                        .then(response => {\n                          if (response.status == 201) {\n                            handleClose(e); //Close modal\n                            //window.alert(\"Your form has been submitted succesfully\")\n                            fetchData();\n                          }\n                        })\n                        .catch(err => console.warn(err));\n                    }}\n                  >\n                    Submit\n                  </Button>\n                </div>\n              </Modal.Body>\n            </Modal>\n          </div>\n        </>\n     );\n}\n\nexport default PublicSharing;","/Users/harmansahota/Desktop/Multiple-days-Non-Profits-and-Health-Wellness-Group-B/frontend/src/pages/directory.js",["208","209"],[],"import 'bootstrap/dist/css/bootstrap.min.css';\nimport directoryCSS from './directory.module.css';\nimport Button from 'react-bootstrap/Button';\n\nfunction Directory() {\n    return (\n\n        <section>\n            <div className='container p-2'>\n                <div className='card'>\n                    <div className='card-body'>\n                        <h4 className='card-title'>Directory</h4>\n\n                        \n                    </div>\n                </div>\n            </div>\n        </section>\n    );\n}\n\nexport default Directory;","/Users/harmansahota/Desktop/Multiple-days-Non-Profits-and-Health-Wellness-Group-B/frontend/src/pages/faq.js",["210","211"],[],"import 'bootstrap/dist/css/bootstrap.min.css';\nimport startedCSS from './faq.module.css';\nimport Button from 'react-bootstrap/Button';\n\nfunction FAQ() {\n   return (\n\n      <section>\n         <div className='container p-2'>\n            <div className='card'>\n               <div className='card-body'>\n                  <h4 className='card-title'>Frequently Asked Questions</h4>\n                  <h8 className='card-subtitle mb-2 text-muted'>If you need more support, please contact example@email.com.</h8>\n\n                  <hr />\n\n                  <nav>\n                     <ul>\n                        <li><a href='#register'>How to create an account</a></li>\n                        <li><a href='#login'>How to log into your account</a></li>\n                        <li><a href='#tracker'>How to use the tracker</a></li>\n                     </ul>\n                  </nav>\n\n                  <hr />\n\n                  <h5 id='register'>How to create an account</h5>\n                  <ol>\n                     <li>Register for an account by clicking on one of the two icons on the Home page.</li>\n                     <li>Enter your credentials, select your role(s), and give consent.</li>\n                     <li>Click on the 'Submit' button.</li>\n\n                     <p>And you're done! You have successfully created an account and can now start tracking how much food you have saved and start connecting with other organizations in the Food Saviour community.</p>\n                  </ol>\n\n                  <h5 id='login'>How to log into your account</h5>\n                  <ol>\n                     <li>Log into your account by clickon on one of the two icons on the Home page.</li>\n                     <li>Enter the email and password you used to create your account.</li>\n                     <li>Click on the 'Login' button.</li>\n                  </ol>\n\n                  <h5 id='tracker'>How to use the tracker</h5>\n                  <ol>\n                     <li>Navigate to the Tracker page by clicking on 'Tracker' in the navigation bar.</li>\n                     <li>Select the category your food best falls under.</li>\n                     <li>(Optional) Enter a description for your food (i.e. Apples).</li>\n                     <li>Select the weight unit.</li>\n                     <li>Enter the amount of food according to your selected weight unit.</li>\n                     <li>Enter how much food had been diverted to each source according to your selected weight unit. As you enter the numbers, the calculator will automatically convert the data you entered into percentages on the right hand side.</li>\n                     <li>Once you are finished entering your data, click on the 'Save' button.</li>\n                     <li>Scroll down below and you should see a graph generated based on the data you entered.</li>\n                     <li>Below the graph, you can view the data you entered and delete the data entry by click on the 'Delete' button.</li>\n                  </ol>\n\n               </div>\n            </div>\n         </div>\n      </section>\n   );\n}\n\nexport default FAQ;","/Users/harmansahota/Desktop/Multiple-days-Non-Profits-and-Health-Wellness-Group-B/frontend/src/pages/profile.js",["212","213","214","215","216","217","218"],[],"import React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport profileCSS from './profile.module.css';\nimport Button from 'react-bootstrap/Button';\nimport Modal from \"react-bootstrap/Modal\";\nimport axios from 'axios';\nimport fourcss from './fourcss.css';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPenToSquare } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction Profile() {\n    const [all, setAll] = useState({\n        FirstName: localStorage.getItem('firstname'),\n        LastName: localStorage.getItem('lastname'),\n        Roles: localStorage.getItem('roles'),\n        Consent: localStorage.getItem('consent'),\n        Organization: localStorage.getItem('organization')\n    });\n\n    const [showModal, setShowModal] = useState(false);\n    const handleClose = () => setShowModal(false);\n    const handleShow = () => setShowModal(true);\n\n    const userId = localStorage.getItem('id');\n\n    window.onload = function () {\n        if (localStorage.getItem('roles').includes('user non-profit managers/CEO')) {\n            document.getElementById('manager_ceo').checked = true;\n        }\n        if (localStorage.getItem('roles').includes('user non-profit warehouse boss')) {\n            document.getElementById('warehouse_boss').checked = true;\n        }\n        if (localStorage.getItem('roles').includes('user non-profit volunteer')) {\n            document.getElementById('volunteer').checked = true;\n        }\n        if (localStorage.getItem('roles').includes('sponsor')) {\n            document.getElementById('sponsor').checked = true;\n        }\n        if (localStorage.getItem('roles').includes('admin')) {\n            document.getElementById('admin').checked = true;\n        }\n        if (localStorage.getItem('roles').includes('expert')) {\n            document.getElementById('expert').checked = true;\n        }\n        if (localStorage.getItem('consent') == 'consented') {\n            document.getElementById('consented').checked = true;\n        }\n        if (localStorage.getItem('consent') == 'unconsented') {\n            document.getElementById('unconsented').checked = true;\n        }\n\n        console.log(localStorage.getItem('roles')); \n    }\n\n    var role_str = [];\n    var prevroles = \"\";\n    if (new Date().getTime() > localStorage.getItem('expiry')  && localStorage.roles ){\n        const response = window.confirm(\"Your session has expired. Do you still want to be logged in?\");\n      \n        if(response){\n          localStorage.removeItem('expiry');\n          const date = new Date().setHours(new Date().getHours()+1);\n          localStorage.setItem('expiry',date) \n        }\n      }\n\n    if (new Date().getTime() < localStorage.getItem('expiry')  && localStorage.roles) {\n           return (\n            <section>\n                <div className=\"container p-4\">\n                    <div className=\"card\">\n                        <form>\n                            <div className={`${profileCSS.card_head} card-header bg-transparent text-center`}>\n                                <b>Profile</b>\n                            </div>\n                            <div className=\"card-body\">\n                                <div className=\"row\">\n                                    <div className=\"col-3\">\n                                        <b>Name: </b>\n                                    </div>\n\n                                    <div className='col-6'>\n                                        <div className='row'>\n                                            <div className='col-auto'>\n                                                <input type=\"text\" id=\"fname\" name=\"fname\" placeholder={localStorage.getItem('firstname')} size=\"20\" disabled\n                                                    onChange={(e) => {\n                                                        localStorage.removeItem('firstname');\n                                                        localStorage.setItem('firstname', e.target.value);\n                                                        setAll({ ...all, FirstName: localStorage.getItem('firstname') })\n                                                        prevroles = localStorage.getItem('roles').toString();\n                                                    }} />\n                                            </div>\n                                            <div className='col-auto'>\n                                                <input type=\"text\" id=\"lname\" name=\"lname\" placeholder={localStorage.getItem('lastname')} size=\"20\" disabled\n                                                    onChange={(e) => {\n                                                        localStorage.removeItem('lastname');\n                                                        localStorage.setItem('lastname', e.target.value);\n                                                        setAll({ ...all, LastName: localStorage.getItem('lastname') });\n                                                        prevroles = localStorage.getItem('roles').toString();\n                                                    }} />\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className='col-3'>\n                                        <Button className={`${profileCSS.edit_btn} btn btn-outline-danger`} variant=\"outline-danger\" onClick={(e) => {\n                                            document.getElementById('fname').disabled = false;\n                                            document.getElementById('lname').disabled = false;\n                                        }} >\n                                            Edit <FontAwesomeIcon icon={faPenToSquare} style={{ color: \"#DC143C\t\" }} />\n                                        </Button>\n                                    </div>\n                                </div>\n\n                                <br />\n\n                                <div className=\"row\">\n                                    <div className=\"col-3\">\n                                        <b>Email: </b>\n                                    </div>\n\n                                    <div className='col-6'>\n                                        <input type=\"email\" id=\"email\" name=\"email\" placeholder={localStorage.getItem('email')} size=\"50\" disabled />\n                                    </div>\n                                </div>\n\n                                <br />\n\n                                <div className=\"row\">\n                                    <div className=\"col-3\">\n                                        <b>Organization Name: </b>\n                                    </div>\n\n                                    <div className='col-6'>\n                                        <input type=\"text\" id=\"org\" name=\"org\" placeholder={localStorage.getItem('organization')} size=\"50\" disabled onChange={(e) => {\n                                            localStorage.removeItem('organization');\n                                            localStorage.setItem('organization', e.target.value);\n                                            setAll({ ...all, Organization: localStorage.getItem('organization') })\n                                            prevroles = localStorage.getItem('roles').toString();\n                                        }} />\n                                    </div>\n\n                                    <div className='col-3'>\n                                        <Button className={`${profileCSS.edit_btn} btn btn-outline-danger`} variant=\"outline-danger\" onClick={(e) => {\n                                            document.getElementById('org').disabled = false;\n                                        }}>\n                                            Edit <FontAwesomeIcon icon={faPenToSquare} style={{ color: \"#DC143C\t\" }} />\n                                        </Button>\n                                    </div>\n                                </div>\n\n                                <br />\n\n                                <div className=\"row\">\n                                    <div className=\"col-3\">\n                                        <b>Role(s): </b>\n                                    </div>\n\n                                    <div className='col-6'\n                                        onChange={(e) => {\n                                            localStorage.removeItem('roles');\n                                            if (e.target.checked) {\n                                                role_str.push(e.target.value);\n                                            }\n\n                                        }\n                                       \n                                        }>\n                                        <label for=\"manager_ceo\" className='checkbox-inline'>\n                                            <input type=\"checkbox\" className='roles' id=\"manager_ceo\" name=\"roles\" value=\"user non-profit managers/CEO\" disabled\n                                            />\n                                            User non-profit managers/CEO</label>\n                                        <br />\n                                        <label for=\"warehouse_boss\">\n                                            <input type=\"checkbox\"  className='roles' id=\"warehouse_boss\" name=\"roles\" value=\"user non-profit warehouse boss\" disabled />\n                                            User non-profit warehouse boss</label>\n                                        <br />\n                                        <label for=\"volunteer\">\n                                            <input type=\"checkbox\"  className='roles' id=\"volunteer\" name=\"roles\" value=\"user non-profit volunteer\" disabled />\n                                            User non-profit volunteer</label>\n                                        <br />\n                                        <label for=\"sponsor\" className='checkbox-inline'>\n                                            <input type=\"checkbox\"  className='roles' id=\"sponsor\" name=\"roles\" value=\"sponsor\" disabled />\n                                            Sponsor</label>\n                                        <br />\n                                        <label for=\"admin\">\n                                            <input type=\"checkbox\" id=\"admin\" className='roles' name=\"roles\" value=\"admin\" disabled />\n                                            Admin</label>\n                                        <br />\n                                        <label for=\"expert\">\n                                            <input type=\"checkbox\" id=\"expert\" name=\"roles\" className='roles' value=\"expert\" disabled />\n                                            Expert</label>\n                                    </div>\n\n                                    <div className='col-3'>\n                                        <Button className={`${profileCSS.edit_btn} btn btn-outline-danger`} variant=\"outline-danger\" onClick={(e) => {\n                                            document.getElementById('manager_ceo').disabled = false;\n                                            document.getElementById('warehouse_boss').disabled = false;\n                                            document.getElementById('volunteer').disabled = false;\n                                            document.getElementById('sponsor').disabled = false;\n                                            document.getElementById('admin').disabled = false;\n                                            document.getElementById('expert').disabled = false;\n\n                                            document.getElementById('manager_ceo').checked = false;\n                                            document.getElementById('warehouse_boss').checked = false;\n                                            document.getElementById('volunteer').checked = false;\n                                            document.getElementById('sponsor').checked = false;\n                                            document.getElementById('admin').checked = false;\n                                            document.getElementById('expert').checked= false;\n                                            \n\n\n                                        }}>\n                                            Edit <FontAwesomeIcon icon={faPenToSquare} style={{ color: \"#DC143C\t\" }} />\n                                        </Button>\n                                    </div>\n                                </div>\n\n                                <br />\n\n                                <div className='row'>\n                                    <div className=\"col-3\">\n                                        <b>Consent: </b>\n                                    </div>\n\n                                    <div className='col-6' onChange={(e) => {\n                                        localStorage.removeItem('consent');\n                                        if (e.target.checked) {\n                                            localStorage.setItem('consent', e.target.value);\n                                        }\n                                        setAll({ ...all, Consent: localStorage.getItem('consent') });\n                                        prevroles = localStorage.getItem('roles').toString();\n                                    }}>\n                                        <label for=\"consented\">\n                                            <input type=\"radio\" id=\"consented\" name=\"consent\" value=\"consented\" disabled />\n                                            Yes, I consent to sharing my data.</label>\n                                        <label for=\"unconsented\">\n                                            <input type=\"radio\" id=\"unconsented\" name=\"consent\" value=\"unconsented\" onChange={handleShow} disabled />\n                                            No, I want to stop sharing my data.</label>\n                                    </div>\n\n                                    <div className='col-3' >\n                                        <Button className={`${profileCSS.edit_btn} btn btn-outline-danger`} variant=\"outline-danger\" onClick={() => {\n                                            document.getElementById('consented').disabled = false;\n                                            document.getElementById('unconsented').disabled = false;\n                                        }}>\n                                            Edit <FontAwesomeIcon icon={faPenToSquare} style={{ color: \"#DC143C\t\" }} />\n                                        </Button>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div className='row'>\n                                <Button className={`${profileCSS.save_btn} btn btn-outline-success`} id=\"saveBtn\" variant=\"outline-sucess\" onClick={() => {\n                                     \n                                    if(role_str != \"\" || role_str != null){\n                                       if(localStorage.getItem(\"roles\")){\n                                        localStorage.setItem(\"roles\",role_str.toString());\n                                       }else{\n                                        localStorage.setItem(\"roles\",role_str.toString());\n                                       }\n                                   \n                                    }else{\n                                        \n                                    \n                                        localStorage.roles.setItem(prevroles);\n                                    }\n\n                                  \n                                    console.log(role_str);\n                                    axios.put(\n                                        `http://127.0.0.1:8000/api/profileUpdate/${userId}`,\n                                        {\n                                            FirstName: all.FirstName,\n                                            LastName: all.LastName,\n                                            Roles: all.Roles,\n                                            Consent: all.Consent,\n                                            Organization: all.Organization\n                                        },\n                                        {\n                                            headers: {\n                                                \"Content-type\": \"application/json\",\n                                            }\n                                        }\n                                    )\n                                        .then(response => {\n                                            if (response.status == 201) {\n                                                if (response.data[\"deleted\"] == \"deleted\") {\n                                                    localStorage.clear();\n\n                                                    localStorage.removeItem('expiry');\n                                                    const date = new Date().setHours(new Date().getHours());\n                                                    localStorage.setItem('expiry', date);\n\n                                                    window.location.replace(\"http://localhost:3000/\");\n                                                }\n                                                 \n                                                if(role_str != \"\" || role_str != null){\n                                                    if(localStorage.getItem(\"roles\")){\n                                                     localStorage.roles.setItem(role_str.toString());\n                                                    }else{\n                                                     localStorage.setItem(\"roles\",role_str.toString());\n                                                    }\n                                                \n                                                 }else{\n                                                     \n                                                 \n                                                     localStorage.roles.setItem(prevroles);\n                                                 }\n                                               \n                                                // window.location.replace(\"http://localhost:3000/profile/\");\n\n                                            }\n                                        })\n                                        .catch(err => console.warn(err));\n                                }}>\n                                    Save\n                                </Button>\n\n                                <Modal show={showModal} onHide={handleClose}>\n                                    <Modal.Header closeButton>\n                                        <Modal.Title>Consent Withdrawal Confirmation</Modal.Title>\n                                    </Modal.Header>\n                                    <Modal.Body>\n                                        <p>Are you sure you want to withdraw your consent?</p>\n\n                                        If this was a mistake, please change the consent option back to 'Yes, I consent to sharing my data'. <br /><br />\n                                        If this was not a mistake, please ensure you have taken the time to download your data before you confirm the withdrawal as your account will be deactivated <b>immediately</b> after you click 'Save'.\n                                    </Modal.Body>\n                                </Modal>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </section >\n        );\n    }\n    else if (new Date().getTime() > localStorage.getItem('expiry') && !(localStorage.roles)) {\n\n        return (\n            <section>\n                <div className=\"flex-container\">\n                    <div className=\"text-center\">\n                        <h1 className=\"heading1\">\n                            <span className=\"fade-in\" id=\"digit1\">4</span>\n                            <span className=\"fade-in\" id=\"digit2\">0</span>\n                            <span className=\"fade-in\" id=\"digit3\">4</span>\n                        </h1>\n                        <h3 className=\" heading3 fadeIn\">YOU MUST LOGIN TO VIEW THIS PAGE</h3>\n                        <a href='/login'><Button type=\"button\" class='btn btn-primary ' name=\"button\">Login</Button></a>\n                    </div>\n                </div>\n            </section >\n        );\n    }\n}\n\nexport default Profile;","/Users/harmansahota/Desktop/Multiple-days-Non-Profits-and-Health-Wellness-Group-B/frontend/src/pages/comment.js",[],[],"/Users/harmansahota/Desktop/Multiple-days-Non-Profits-and-Health-Wellness-Group-B/frontend/src/pages/admin.js",["219","220","221"],[],"import 'bootstrap/dist/css/bootstrap.min.css';\nimport './admin.css'\nimport axios from 'axios'\nimport React, { useReducer } from 'react';\nimport { useState, useEffect } from 'react';\nimport Button from \"react-bootstrap/Button\";\nimport fourcss from './fourcss.css';\n\nlet temp = [];\nlet temp_warehouse = [];\nlet temp_admin = [];\nlet temp_volunteer = [];\nlet temp_Sponsor = [];\nlet temp_Expert = [];\n\nfunction Admin() {\n\n    const [user, setUser] = useState([]);\n    const [approvedUser, setApprovedUser] = useState([]);\n    const [declinedUser, setDeclinedUser] = useState([]);\n\n\n    const fetchData = async () => {\n        const response = await fetch(\"http://localhost:8000/api/adminPull/\");\n        const data = await response.json();\n        return setUser(data);\n    }\n\n    useEffect(() => {\n        fetchData();\n    }, [])\n\n    const fetchApprovedData = async () => {\n        const response = await fetch(\"http://localhost:8000/api/adminPullApprove/\");\n        const data = await response.json();\n        return setApprovedUser(data);\n    }\n\n    useEffect(() => {\n        fetchApprovedData();\n    }, [])\n\n    const fetchDeclinedData = async () => {\n        const response = await fetch(\"http://localhost:8000/api/adminPullDecline/\");\n        const data = await response.json();\n        return setDeclinedUser(data);\n    }\n\n    useEffect(() => {\n        fetchDeclinedData();\n    }, [])\n\n\n\n\n\n    const [CEO, setCEO] = useState({\n\n        role: 'User non-profit managers/CEO',\n        metrics: [],\n        network: '',\n        readwrite: ''\n\n    });\n    const [warehouse, setwarehouse] = useState({\n\n        role: 'User non-profit warehouse boss',\n        metrics: [],\n        network: '',\n        readwrite: ''\n\n    });\n    const [admin, setAdmin] = useState({\n\n        role: 'Admin',\n        metrics: [],\n        network: '',\n        readwrite: ''\n\n    });\n\n    const [volunteer, setVolunteer] = useState({\n\n        role: 'User non-profit volunteer',\n        metrics: [],\n        network: '',\n        readwrite: ''\n\n    });\n\n\n    const [Sponsors, setSponsors] = useState({\n\n        role: 'Sponsors',\n        metrics: [],\n        network: '',\n        readwrite: ''\n\n    });\n\n    const [Experts, setExperts] = useState({\n\n        role: 'Experts',\n        metrics: [],\n        network: '',\n        readwrite: ''\n\n    });\n\n    CEO.metrics = CEO.metrics.toString();\n    warehouse.metrics = warehouse.metrics.toString();\n    admin.metrics = admin.metrics.toString();\n    volunteer.metrics = volunteer.metrics.toString();\n    Sponsors.metrics = Sponsors.metrics.toString();\n    Experts.metrics = Experts.metrics.toString();\n\n    if (new Date().getTime() > localStorage.getItem('expiry')  && localStorage.roles){\n        const response = window.confirm(\"Your session has expired. Do you still want to be logged in?\");\n      \n        if(response){\n          localStorage.removeItem('expiry');\n          const date = new Date().setHours(new Date().getHours()+1);\n          localStorage.setItem('expiry',date) \n        }\n      }\n\n\n\n    {\n        if (new Date().getTime() < localStorage.getItem('expiry')  && localStorage.roles) {\n\n\n            return (\n\n                <><div id=\"role-settings-container\" className=\"container-lg col-md-auto\">\n\n                    <h3 className=\"h3\">Data Permissions:</h3>\n                    <h5 className=\"h5\">Inside Organization: </h5>\n                    <table className=\"table\">\n                        <thead>\n                            <tr>\n                                <th scope=\"col\">#</th>\n                                <th scope=\"col\">Role</th>\n                                <th scope=\"col\">Metric Access</th>\n                                <th scope=\"col\">Network Access</th>\n                                <th scope=\"col\">Tracker Data Access</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n\n                            <tr>\n                                <th scope=\"row\">1</th>\n                                <td> User non-profit managers/CEO</td>\n                                <td>\n                                    <div\n\n                                        onChange={(e) => {\n                                            if (e.target.checked) {\n                                                temp.push(e.target.value);\n                                                setCEO({ ...CEO, metrics: temp });\n\n                                            } else {\n                                                temp.pop(e.target.value);\n                                                setCEO({ ...CEO, metrics: temp });\n\n                                            }\n                                        }}\n                                    >\n                                        <div className=\"form-check\">\n                                            <input\n\n                                                className=\"form-check-input flexCheckDefault\"\n                                                type=\"checkbox\"\n                                                id=\"flexCheckDefault1\"\n                                                name=\"metrics[]\"\n                                                value=\"Fresh Produce\"\n                                            />\n                                            <label className=\"form-check-label\" for=\"flexCheckDefault1\">\n                                                Fresh Produce\n                                            </label>\n                                        </div>\n                                        <div className=\"form-check\">\n                                            <input\n                                                className=\"form-check-input flexCheckDefault\"\n                                                type=\"checkbox\"\n                                                id=\"flexCheckDefault2\"\n                                                name=\"metrics[]\"\n                                                value=\"metric#2\"\n\n                                            />\n                                            <label className=\"form-check-label\" for=\"flexCheckDefault2\">\n                                                Metric #2\n                                            </label>\n                                        </div>\n                                        <div className=\"form-check\">\n                                            <input\n                                                className=\"form-check-input flexCheckDefault\"\n                                                type=\"checkbox\"\n                                                id=\"flexCheckDefault3\"\n                                                name=\"metrics[]\"\n                                                value=\"Metric#3\"\n\n                                            />\n                                            <label className=\"form-check-label\" for=\"flexCheckDefault3\">\n                                                Metric #3\n                                            </label>\n                                        </div>\n                                        <div className=\"form-check\">\n                                            <input\n                                                className=\"form-check-input flexCheckDefault\"\n                                                type=\"checkbox\"\n                                                id=\"flexCheckDefault4\"\n                                                name=\"metrics[]\"\n                                                value=\"Metric#4\"\n\n                                            />\n                                            <label className=\"form-check-label\" for=\"flexCheckDefault4\">\n                                                Metric #4\n                                            </label>\n                                        </div>\n                                        <div className=\"form-check\">\n                                            <input\n                                                className=\"form-check-input flexCheckDefault\"\n                                                type=\"checkbox\"\n                                                id=\"flexCheckDefault5\"\n                                                name=\"metrics[]\"\n                                                value=\"Metric#5\"\n\n                                            />\n                                            <label className=\"form-check-label\" for=\"flexCheckDefault5\">\n                                                Metric #5\n                                            </label>\n                                        </div>\n                                    </div>\n                                </td>\n                                <td>\n                                    <div className=\"form-check \">\n                                        <div className=\"col-md-auto\">\n                                            <select className=\"form-select\" id=\"network\" name=\"network-CEO\" onChange={(event) =>\n                                                setCEO({ ...CEO, network: event.target.value })\n\n                                            }>\n                                                <option value=\"allow\">Allow</option>\n                                                <option value=\"dont allow\">Dont Allow</option>\n                                            </select>\n                                        </div>\n                                    </div>\n                                </td>\n                                <td>\n                                    <div className=\"form-check\">\n                                        <div className=\"col-md-auto\">\n                                            <select className=\"form-select\" id=\"readwrite\" name=\"readwrite-CEO\" onChange={(event) =>\n                                                setCEO({ ...CEO, readwrite: event.target.value })\n\n                                            }>\n                                                <option value=\"read\">Read</option>\n                                                <option value=\"write\">Write</option>\n                                                <option value=\"both\">Both</option>\n                                                <option value=\"none\">None</option>\n                                            </select>\n                                        </div>\n                                    </div>\n                                </td>\n                            </tr>\n\n                            <tr>\n                                <th scope=\"row\">2</th>\n                                <td>User non-profit warehouse boss</td>\n                                <td>\n                                    <div\n\n                                        onChange={(e) => {\n                                            if (e.target.checked) {\n                                                temp_warehouse.push(e.target.value);\n                                                setwarehouse({ ...warehouse, metrics: temp_warehouse });\n\n\n                                            } else {\n                                                temp_warehouse.pop(e.target.value);\n                                                setwarehouse({ ...warehouse, metrics: temp_warehouse });\n\n                                            }\n\n\n\n                                        }}\n\n\n                                    >\n                                        <div className=\"form-check\">\n                                            <input\n\n                                                className=\"form-check-input flexCheckDefault\"\n                                                type=\"checkbox\"\n                                                id=\"flexCheckDefault1\"\n                                                name=\"metrics[]\"\n                                                value=\"Fresh Produce\"\n                                            />\n                                            <label className=\"form-check-label\" for=\"flexCheckDefault1\">\n                                                Fresh Produce\n                                            </label>\n                                        </div>\n                                        <div className=\"form-check\">\n                                            <input\n                                                className=\"form-check-input flexCheckDefault\"\n                                                type=\"checkbox\"\n                                                id=\"flexCheckDefault2\"\n                                                name=\"metrics[]\"\n                                                value=\"metric#2\"\n\n                                            />\n                                            <label className=\"form-check-label\" for=\"flexCheckDefault2\">\n                                                Metric #2\n                                            </label>\n                                        </div>\n                                        <div className=\"form-check\">\n                                            <input\n                                                className=\"form-check-input flexCheckDefault\"\n                                                type=\"checkbox\"\n                                                id=\"flexCheckDefault3\"\n                                                name=\"metrics[]\"\n                                                value=\"Metric#3\"\n\n                                            />\n                                            <label className=\"form-check-label\" for=\"flexCheckDefault3\">\n                                                Metric #3\n                                            </label>\n                                        </div>\n                                        <div className=\"form-check\">\n                                            <input\n                                                className=\"form-check-input flexCheckDefault\"\n                                                type=\"checkbox\"\n                                                id=\"flexCheckDefault4\"\n                                                name=\"metrics[]\"\n                                                value=\"Metric#4\"\n\n                                            />\n                                            <label className=\"form-check-label\" for=\"flexCheckDefault4\">\n                                                Metric #4\n                                            </label>\n                                        </div>\n                                        <div className=\"form-check\">\n                                            <input\n                                                className=\"form-check-input flexCheckDefault\"\n                                                type=\"checkbox\"\n                                                id=\"flexCheckDefault5\"\n                                                name=\"metrics[]\"\n                                                value=\"Metric#5\"\n\n                                            />\n                                            <label className=\"form-check-label\" for=\"flexCheckDefault5\">\n                                                Metric #5\n                                            </label>\n                                        </div>\n                                    </div>\n                                </td>\n                                <td>\n                                    <div className=\"form-check \">\n                                        <div className=\"col-md-auto\">\n                                            <select className=\"form-select\" id=\"network\" name=\"network-warehouse\"\n\n                                                onChange={(event) =>\n                                                    setwarehouse({ ...warehouse, network: event.target.value })\n\n                                                }\n\n                                            >\n                                                <option value=\"allow\">Allow</option>\n                                                <option value=\"dont allow\">Dont Allow</option>\n                                            </select>\n                                        </div>\n                                    </div>\n                                </td>\n                                <td>\n                                    <div className=\"form-check\">\n                                        <div className=\"col-md-auto\">\n                                            <select className=\"form-select\" id=\"readwrite\" name=\"readwrite-warehouse\"\n                                                onChange={(event) =>\n                                                    setwarehouse({ ...warehouse, network: event.target.value })\n\n                                                }\n                                            >\n                                                <option value=\"read\">Read</option>\n                                                <option value=\"write\">Write</option>\n                                                <option value=\"both\">Both</option>\n                                                <option value=\"none\">None</option>\n                                            </select>\n                                        </div>\n                                    </div>\n                                </td>\n                            </tr>\n\n                            <tr>\n                                <th scope=\"row\">3</th>\n                                <td>Admin</td>\n                                <td>\n                                    <div\n\n                                        onChange={(e) => {\n                                            if (e.target.checked) {\n                                                temp_admin.push(e.target.value);\n                                                setAdmin({ ...admin, metrics: temp_admin });\n\n\n                                            } else {\n                                                temp_admin.pop(e.target.value);\n                                                setAdmin({ ...admin, metrics: temp_admin });\n\n                                            }\n\n\n\n                                        }}\n\n\n                                    >\n                                        <div className=\"form-check\">\n                                            <input\n\n                                                className=\"form-check-input flexCheckDefault\"\n                                                type=\"checkbox\"\n                                                id=\"flexCheckDefault1\"\n                                                name=\"metrics[]\"\n                                                value=\"Fresh Produce\"\n                                            />\n                                            <label className=\"form-check-label\" for=\"flexCheckDefault1\">\n                                                Fresh Produce\n                                            </label>\n                                        </div>\n                                        <div className=\"form-check\">\n                                            <input\n                                                className=\"form-check-input flexCheckDefault\"\n                                                type=\"checkbox\"\n                                                id=\"flexCheckDefault2\"\n                                                name=\"metrics[]\"\n                                                value=\"metric#2\"\n\n                                            />\n                                            <label className=\"form-check-label\" for=\"flexCheckDefault2\">\n                                                Metric #2\n                                            </label>\n                                        </div>\n                                        <div className=\"form-check\">\n                                            <input\n                                                className=\"form-check-input flexCheckDefault\"\n                                                type=\"checkbox\"\n                                                id=\"flexCheckDefault3\"\n                                                name=\"metrics[]\"\n                                                value=\"Metric#3\"\n\n                                            />\n                                            <label className=\"form-check-label\" for=\"flexCheckDefault3\">\n                                                Metric #3\n                                            </label>\n                                        </div>\n                                        <div className=\"form-check\">\n                                            <input\n                                                className=\"form-check-input flexCheckDefault\"\n                                                type=\"checkbox\"\n                                                id=\"flexCheckDefault4\"\n                                                name=\"metrics[]\"\n                                                value=\"Metric#4\"\n\n                                            />\n                                            <label className=\"form-check-label\" for=\"flexCheckDefault4\">\n                                                Metric #4\n                                            </label>\n                                        </div>\n                                        <div className=\"form-check\">\n                                            <input\n                                                className=\"form-check-input flexCheckDefault\"\n                                                type=\"checkbox\"\n                                                id=\"flexCheckDefault5\"\n                                                name=\"metrics[]\"\n                                                value=\"Metric#5\"\n\n                                            />\n                                            <label className=\"form-check-label\" for=\"flexCheckDefault5\">\n                                                Metric #5\n                                            </label>\n                                        </div>\n                                    </div>\n                                </td>\n                                <td>\n                                    <div className=\"form-check \">\n                                        <div className=\"col-md-auto\">\n                                            <select className=\"form-select\" id=\"network\" name=\"network-Admin\"\n\n                                                onChange={(event) =>\n                                                    setAdmin({ ...admin, network: event.target.value })\n\n                                                }\n\n                                            >\n                                                <option value=\"allow\">Allow</option>\n                                                <option value=\"dont allow\">Dont Allow</option>\n                                            </select>\n                                        </div>\n                                    </div>\n                                </td>\n                                <td>\n                                    <div className=\"form-check\">\n                                        <div className=\"col-md-auto\">\n                                            <select className=\"form-select\" id=\"readwrite\" name=\"readwrite-Admin\"\n\n                                                onChange={(event) =>\n                                                    setAdmin({ ...admin, readwrite: event.target.value })\n\n                                                }\n                                            >\n                                                <option value=\"read\">Read</option>\n                                                <option value=\"write\">Write</option>\n                                                <option value=\"both\">Both</option>\n                                                <option value=\"none\">None</option>\n                                            </select>\n                                        </div>\n                                    </div>\n                                </td>\n                            </tr>\n\n                            <tr>\n                                <th scope=\"row\">4</th>\n                                <td>User non-profit volunteer</td>\n                                <td>\n\n                                    <div\n\n                                        onChange={(e) => {\n                                            if (e.target.checked) {\n                                                temp_volunteer.push(e.target.value);\n                                                setVolunteer({ ...volunteer, metrics: temp_volunteer });\n\n\n                                            } else {\n                                                temp_volunteer.pop(e.target.value);\n                                                setVolunteer({ ...volunteer, metrics: temp_volunteer });\n\n                                            }\n                                        }}\n                                    >\n                                        <div className=\"form-check\">\n                                            <input\n\n                                                className=\"form-check-input flexCheckDefault\"\n                                                type=\"checkbox\"\n                                                id=\"flexCheckDefault1\"\n                                                name=\"metrics[]\"\n                                                value=\"Fresh Produce\"\n                                            />\n                                            <label className=\"form-check-label\" for=\"flexCheckDefault1\">\n                                                Fresh Produce\n                                            </label>\n                                        </div>\n                                        <div className=\"form-check\">\n                                            <input\n                                                className=\"form-check-input flexCheckDefault\"\n                                                type=\"checkbox\"\n                                                id=\"flexCheckDefault2\"\n                                                name=\"metrics[]\"\n                                                value=\"metric#2\"\n\n                                            />\n                                            <label className=\"form-check-label\" for=\"flexCheckDefault2\">\n                                                Metric #2\n                                            </label>\n                                        </div>\n                                        <div className=\"form-check\">\n                                            <input\n                                                className=\"form-check-input flexCheckDefault\"\n                                                type=\"checkbox\"\n                                                id=\"flexCheckDefault3\"\n                                                name=\"metrics[]\"\n                                                value=\"Metric#3\"\n\n                                            />\n                                            <label className=\"form-check-label\" for=\"flexCheckDefault3\">\n                                                Metric #3\n                                            </label>\n                                        </div>\n                                        <div className=\"form-check\">\n                                            <input\n                                                className=\"form-check-input flexCheckDefault\"\n                                                type=\"checkbox\"\n                                                id=\"flexCheckDefault4\"\n                                                name=\"metrics[]\"\n                                                value=\"Metric#4\"\n\n                                            />\n                                            <label className=\"form-check-label\" for=\"flexCheckDefault4\">\n                                                Metric #4\n                                            </label>\n                                        </div>\n                                        <div className=\"form-check\">\n                                            <input\n                                                className=\"form-check-input flexCheckDefault\"\n                                                type=\"checkbox\"\n                                                id=\"flexCheckDefault5\"\n                                                name=\"metrics[]\"\n                                                value=\"Metric#5\"\n\n                                            />\n                                            <label className=\"form-check-label\" for=\"flexCheckDefault5\">\n                                                Metric #5\n                                            </label>\n                                        </div>\n                                    </div>\n                                </td>\n                                <td>\n                                    <div className=\"form-check \">\n                                        <div className=\"col-md-auto\">\n                                            <select className=\"form-select\" id=\"network\" name=\"network-CEO\" onChange={(event) =>\n                                                setVolunteer({ ...volunteer, network: event.target.value })\n                                            }>\n                                                <option value=\"allow\">Allow</option>\n                                                <option value=\"dont allow\">Dont Allow</option>\n                                            </select>\n                                        </div>\n                                    </div>\n                                </td>\n                                <td>\n                                    <div className=\"form-check\">\n                                        <div className=\"col-md-auto\">\n                                            <select className=\"form-select\" id=\"readwrite\" name=\"readwrite-CEO\" onChange={(event) =>\n                                                setVolunteer({ ...volunteer, readwrite: event.target.value })\n\n                                            }>\n                                                <option value=\"read\">Read</option>\n                                                <option value=\"write\">Write</option>\n                                                <option value=\"both\">Both</option>\n                                                <option value=\"none\">None</option>\n                                            </select>\n                                        </div>\n                                    </div>\n\n                                </td>\n\n\n\n                            </tr>\n                        </tbody>\n                    </table>\n\n                    <h5 className=\"h5\">Outside Organization: </h5>\n                    <table className=\"table\">\n                        <thead>\n                            <tr>\n                                <th scope=\"col\">#</th>\n                                <th scope=\"col\">Role</th>\n                                <th scope=\"col\">Metric Access</th>\n                                <th scope=\"col\">Network Access</th>\n                                <th scope=\"col\">Read/Write Access</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <th scope=\"row\">1</th>\n                                <td>Sponsors</td>\n                                <td>\n                                    <div\n\n                                        onChange={(e) => {\n                                            if (e.target.checked) {\n                                                temp_Sponsor.push(e.target.value);\n                                                setSponsors({ ...Sponsors, metrics: temp_Sponsor });\n\n\n                                            } else {\n                                                temp_Sponsor.pop(e.target.value);\n                                                setSponsors({ ...Sponsors, metrics: temp_Sponsor });\n\n                                            }\n\n                                        }}>\n                                        <div className=\"form-check\">\n                                            <input\n\n                                                className=\"form-check-input flexCheckDefault\"\n                                                type=\"checkbox\"\n                                                id=\"flexCheckDefault1\"\n                                                name=\"metrics[]\"\n                                                value=\"Fresh Produce\"\n                                            />\n                                            <label className=\"form-check-label\" for=\"flexCheckDefault1\">\n                                                Fresh Produce\n                                            </label>\n                                        </div>\n                                        <div className=\"form-check\">\n                                            <input\n                                                className=\"form-check-input flexCheckDefault\"\n                                                type=\"checkbox\"\n                                                id=\"flexCheckDefault2\"\n                                                name=\"metrics[]\"\n                                                value=\"metric#2\"\n\n                                            />\n                                            <label className=\"form-check-label\" for=\"flexCheckDefault2\">\n                                                Metric #2\n                                            </label>\n                                        </div>\n                                        <div className=\"form-check\">\n                                            <input\n                                                className=\"form-check-input flexCheckDefault\"\n                                                type=\"checkbox\"\n                                                id=\"flexCheckDefault3\"\n                                                name=\"metrics[]\"\n                                                value=\"Metric#3\"\n\n                                            />\n                                            <label className=\"form-check-label\" for=\"flexCheckDefault3\">\n                                                Metric #3\n                                            </label>\n                                        </div>\n                                        <div className=\"form-check\">\n                                            <input\n                                                className=\"form-check-input flexCheckDefault\"\n                                                type=\"checkbox\"\n                                                id=\"flexCheckDefault4\"\n                                                name=\"metrics[]\"\n                                                value=\"Metric#4\"\n\n                                            />\n                                            <label className=\"form-check-label\" for=\"flexCheckDefault4\">\n                                                Metric #4\n                                            </label>\n                                        </div>\n                                        <div className=\"form-check\">\n                                            <input\n                                                className=\"form-check-input flexCheckDefault\"\n                                                type=\"checkbox\"\n                                                id=\"flexCheckDefault5\"\n                                                name=\"metrics[]\"\n                                                value=\"Metric#5\"\n\n                                            />\n                                            <label className=\"form-check-label\" for=\"flexCheckDefault5\">\n                                                Metric #5\n                                            </label>\n                                        </div>\n                                    </div>\n                                </td>\n                                <td>\n                                    <div className=\"form-check \">\n                                        <div className=\"col-md-auto\">\n                                            <select className=\"form-select\" id=\"network\" name=\"network-Sponsors\" onChange={(event) =>\n                                                setSponsors({ ...Sponsors, network: event.target.value })\n\n                                            }>\n                                                <option value=\"allow\">Allow</option>\n                                                <option value=\"dont allow\">Dont Allow</option>\n                                            </select>\n                                        </div>\n                                    </div>\n                                </td>\n                                <td>\n                                    <div className=\"form-check\">\n                                        <div className=\"col-md-auto\">\n                                            <select className=\"form-select\" id=\"readwrite\" name=\"readwrite-Sponsors\" onChange={(event) =>\n                                                setSponsors({ ...Sponsors, readwrite: event.target.value })\n\n                                            }>\n                                                <option value=\"read\">Read</option>\n                                                <option value=\"write\">Write</option>\n                                                <option value=\"both\">Both</option>\n                                                <option value=\"none\">None</option>\n                                            </select>\n                                        </div>\n                                    </div>\n                                </td>\n                            </tr>\n\n                            <tr>\n                                <th scope=\"row\">2</th>\n                                <td>Experts</td>\n                                <td>\n                                    <div\n\n                                        onChange={(e) => {\n                                            if (e.target.checked) {\n                                                temp_Expert.push(e.target.value);\n                                                setExperts({ ...Experts, metrics: temp_Expert });\n\n\n                                            } else {\n                                                temp_Expert.pop(e.target.value);\n                                                setExperts({ ...Experts, metrics: temp_Expert });\n\n                                            }\n\n                                        }}>\n                                        <div className=\"form-check\">\n                                            <input\n\n                                                className=\"form-check-input flexCheckDefault\"\n                                                type=\"checkbox\"\n                                                id=\"flexCheckDefault1\"\n                                                name=\"metrics[]\"\n                                                value=\"Fresh Produce\"\n                                            />\n                                            <label className=\"form-check-label\" for=\"flexCheckDefault1\">\n                                                Fresh Produce\n                                            </label>\n                                        </div>\n                                        <div className=\"form-check\">\n                                            <input\n                                                className=\"form-check-input flexCheckDefault\"\n                                                type=\"checkbox\"\n                                                id=\"flexCheckDefault2\"\n                                                name=\"metrics[]\"\n                                                value=\"metric#2\"\n\n                                            />\n                                            <label className=\"form-check-label\" for=\"flexCheckDefault2\">\n                                                Metric #2\n                                            </label>\n                                        </div>\n                                        <div className=\"form-check\">\n                                            <input\n                                                className=\"form-check-input flexCheckDefault\"\n                                                type=\"checkbox\"\n                                                id=\"flexCheckDefault3\"\n                                                name=\"metrics[]\"\n                                                value=\"Metric#3\"\n\n                                            />\n                                            <label className=\"form-check-label\" for=\"flexCheckDefault3\">\n                                                Metric #3\n                                            </label>\n                                        </div>\n                                        <div className=\"form-check\">\n                                            <input\n                                                className=\"form-check-input flexCheckDefault\"\n                                                type=\"checkbox\"\n                                                id=\"flexCheckDefault4\"\n                                                name=\"metrics[]\"\n                                                value=\"Metric#4\"\n\n                                            />\n                                            <label className=\"form-check-label\" for=\"flexCheckDefault4\">\n                                                Metric #4\n                                            </label>\n                                        </div>\n                                        <div className=\"form-check\">\n                                            <input\n                                                className=\"form-check-input flexCheckDefault\"\n                                                type=\"checkbox\"\n                                                id=\"flexCheckDefault5\"\n                                                name=\"metrics[]\"\n                                                value=\"Metric#5\"\n\n                                            />\n                                            <label className=\"form-check-label\" for=\"flexCheckDefault5\">\n                                                Metric #5\n                                            </label>\n                                        </div>\n                                    </div>\n                                </td>\n                                <td>\n                                    <div className=\"form-check \">\n                                        <div className=\"col-md-auto\">\n                                            <select className=\"form-select\" id=\"network\" name=\"network-Experts\" onChange={(event) =>\n                                                setExperts({ ...Experts, network: event.target.value })\n\n                                            }>\n                                                <option value=\"allow\">Allow</option>\n                                                <option value=\"dont allow\">Dont Allow</option>\n                                            </select>\n                                        </div>\n                                    </div>\n                                </td>\n                                <td>\n                                    <div className=\"form-check\">\n                                        <div className=\"col-md-auto\">\n                                            <select className=\"form-select\" id=\"readwrite\" name=\"readwrite-Experts\" onChange={(event) =>\n                                                setExperts({ ...Experts, readwrite: event.target.value })\n\n                                            }>\n                                                <option value=\"read\">Read</option>\n                                                <option value=\"write\">Write</option>\n                                                <option value=\"both\">Both</option>\n                                                <option value=\"none\">None</option>\n                                            </select>\n                                        </div>\n                                    </div>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                    <button type=\"submit\" for=\"perms\" id='sub' className=\"btn btn-outline-success\"\n\n                        onClick={(e) => {\n\n                            axios.post(\n                                \"http://127.0.0.1:8000/api/adminInsert/\",\n\n                                [\n                                    {\n                                        role: CEO.role,\n                                        metrics: CEO.metrics,\n                                        network: CEO.network,\n                                        readwrite: CEO.readwrite\n                                    },\n                                    {\n                                        role: warehouse.role,\n                                        metrics: warehouse.metrics,\n                                        network: warehouse.network,\n                                        readwrite: warehouse.readwrite\n                                    },\n                                    {\n                                        role: admin.role,\n                                        metrics: admin.metrics,\n                                        network: admin.network,\n                                        readwrite: admin.readwrite\n                                    },\n                                    {\n                                        role: volunteer.role,\n                                        metrics: volunteer.metrics,\n                                        network: volunteer.network,\n                                        readwrite: volunteer.readwrite\n                                    },\n                                    {\n                                        role: Sponsors.role,\n                                        metrics: Sponsors.metrics,\n                                        network: Sponsors.network,\n                                        readwrite: Sponsors.readwrite\n                                    },\n                                    {\n                                        role: Experts.role,\n                                        metrics: Experts.metrics,\n                                        network: Experts.network,\n                                        readwrite: Experts.readwrite\n                                    }\n                                ],\n                                {\n                                    headers: {\n                                        \"Content-type\": \"application/json\",\n                                    }\n                                }\n\n                            )\n                        }}\n                    >Save</button>\n\n                </div>\n                    <div id=\"role-settings-container\" className=\"container-lg col-md-auto\">\n                        <h3 className=\"h3\"> Pending Accounts:</h3>\n                        <table className=\"table\">\n                            <thead>\n                                <tr>\n\n                                    <th scope=\"col\">Name</th>\n                                    <th scope=\"col\">Email</th>\n                                    <th scope=\"col\">Roles</th>\n                                    <th scope=\"col\">Agree to Share Data</th>\n                                </tr>\n                            </thead>\n\n                            <tbody>\n\n\n                                {user && user.length > 0 && user.map((userObj, index) => (\n\n                                    <tr>\n\n                                        <td>{userObj.FirstName}  {userObj.LastName} </td>\n                                        <td>{userObj.Email}</td>\n                                        <td id='roles'>{userObj.Roles}</td>\n                                        <td>\n                                            <div className=\"form-check \">\n                                                <div className=\"col-md-auto\">\n                                                    <select className=\"form-select\" id=\"approve_user\" name=\"approve[]\"\n\n\n                                                        onChange={async (e) => {\n\n                                                            axios.put(\n                                                                `http://127.0.0.1:8000/api/adminUpdate/${userObj.id}`,\n\n\n                                                                { \"Approve\": e.target.value },\n                                                                {\n                                                                    headers: {\n                                                                        \"Content-type\": \"application/json\",\n                                                                    }\n                                                                }\n                                                            )\n\n                                                            const response = await fetch(\"http://localhost:8000/api/adminPull/\");\n                                                            const data = await response.json();\n                                                            setUser(data);\n                                                            fetchData();\n\n                                                            const response2 = await fetch(\"http://localhost:8000/api/adminPullApprove/\");\n                                                            const data2 = await response2.json();\n                                                            setApprovedUser(data2);\n                                                            fetchApprovedData();\n\n                                                            const response3 = await fetch(\"http://localhost:8000/api/adminPullDecline/\");\n                                                            const data3 = await response3.json();\n                                                            setDeclinedUser(data3);\n                                                            fetchDeclinedData();\n                                                        }}\n                                                    >\n                                                        <option name='empty' value=\"empty\">Choose an option</option>\n                                                        <option name='approve' value=\"approve\">Accept</option>\n                                                        <option name='decline' value=\"decline\">Decline</option>\n                                                    </select>\n                                                </div>\n                                            </div>\n                                        </td></tr>\n                                ))}\n\n                            </tbody>\n                        </table>\n                    </div >\n\n\n\n                    <div id=\"role-settings-container\" className=\"container-lg col-md-auto\">\n                        <h3 className=\"h3\">Approved Accounts:</h3>\n                        <table className=\"table\">\n                            <thead>\n                                <tr>\n\n                                    <th scope=\"col\">Name</th>\n                                    <th scope=\"col\">Email</th>\n                                    <th scope=\"col\">Roles</th>\n                                    <th scope='col'></th>\n                                </tr>\n                            </thead>\n\n                            <tbody>\n\n                                {approvedUser && approvedUser.length > 0 && approvedUser.map((userObj, index) => (\n\n                                    <tr>\n\n                                        <td>{userObj.FirstName}  {userObj.LastName} </td>\n                                        <td>{userObj.Email}</td>\n                                        <td id='roles'>{userObj.Roles}</td>\n                                        <td><Button className='btn btn-outline-success' variant='btn-outline-sucess' \n\n                                         onClick={async (e) => {\n\n                                    axios.put(\n                                        `http://127.0.0.1:8000/api/adminUpdate/${userObj.id}`,\n\n\n                                        { \"Approve\": null },\n                                        {\n                                            headers: {\n                                                \"Content-type\": \"application/json\",\n                                            }\n                                        }\n                                    )\n\n                                    const response = await fetch(\"http://localhost:8000/api/adminPull/\");\n                                    const data = await response.json();\n                                    setUser(data);\n                                    fetchData();\n\n                                    const response2 = await fetch(\"http://localhost:8000/api/adminPullApprove/\");\n                                    const data2 = await response2.json();\n                                    setApprovedUser(data2);\n                                    fetchApprovedData();\n\n                                    const response3 = await fetch(\"http://localhost:8000/api/adminPullDecline/\");\n                                    const data3 = await response3.json();\n                                    setDeclinedUser(data3);\n                                    fetchDeclinedData();\n                                }}\n                                        \n                                        \n                                        \n                                        > Revert </Button></td>\n                                    </tr>\n                                ))}\n\n                            </tbody>\n                        </table>\n                    </div >\n\n\n                    <div id=\"role-settings-container\" className=\"container-lg col-md-auto\">\n                        <h3 className=\"h3\">Declined Accounts:</h3>\n                        <table className=\"table\">\n                            <thead>\n                                <tr>\n                                    <th scope=\"col\">Name</th>\n                                    <th scope=\"col\">Email</th>\n                                    <th scope=\"col\">Roles</th>\n                                    <th scope='col'></th>\n                                </tr>\n                            </thead>\n\n                            <tbody>\n\n                                {declinedUser && declinedUser.length > 0 && declinedUser.map((userObj, index) => (\n\n                                    <tr>\n\n                                        <td>{userObj.FirstName}  {userObj.LastName} </td>\n                                        <td>{userObj.Email}</td>\n                                        <td id='roles'>{userObj.Roles}</td>\n                                        <td><Button className='btn btn-outline-success' variant='btn-outline-sucess' \n                                        \n                                onClick={async (e) => {\n\n                                    axios.put(\n                                        `http://127.0.0.1:8000/api/adminUpdate/${userObj.id}`,\n\n\n                                        { \"Approve\": null },\n                                        {\n                                            headers: {\n                                                \"Content-type\": \"application/json\",\n                                            }\n                                        }\n                                    )\n\n                                    const response = await fetch(\"http://localhost:8000/api/adminPull/\");\n                                    const data = await response.json();\n                                    setUser(data);\n                                    fetchData();\n\n                                    const response2 = await fetch(\"http://localhost:8000/api/adminPullApprove/\");\n                                    const data2 = await response2.json();\n                                    setApprovedUser(data2);\n                                    fetchApprovedData();\n\n                                    const response3 = await fetch(\"http://localhost:8000/api/adminPullDecline/\");\n                                    const data3 = await response3.json();\n                                    setDeclinedUser(data3);\n                                    fetchDeclinedData();\n                                }}\n                                        \n                                        > Revert </Button></td>\n                                    </tr>\n                                ))}\n\n                            </tbody>\n                        </table>\n                    </div >\n\n\n\n                </>\n\n            );\n        }\n\n        else if (new Date().getTime() > localStorage.getItem('expiry')  && !(localStorage.roles)) {\n\n            return (\n                <section>\n                    <div className=\"flex-container\">\n                        <div className=\"text-center\">\n                            <h1 className=\"heading1\">\n                                <span className=\"fade-in\" id=\"digit1\">4</span>\n                                <span className=\"fade-in\" id=\"digit2\">0</span>\n                                <span className=\"fade-in\" id=\"digit3\">4</span>\n                            </h1>\n                            <h3 className=\" heading3 fadeIn\">YOU MUST LOGIN TO VIEW THIS PAGE</h3>\n                            <a href='/login'><Button type=\"button\" class='btn btn-primary ' name=\"button\"> Login</Button ></a >\n          </div >\n      </div >\n  </section >\n        );\n\n    }\n}\n\n}\n\nexport default Admin;","/Users/harmansahota/Desktop/Multiple-days-Non-Profits-and-Health-Wellness-Group-B/frontend/src/components/Step1.js",[],[],"/Users/harmansahota/Desktop/Multiple-days-Non-Profits-and-Health-Wellness-Group-B/frontend/src/components/Step4.js",[],[],"/Users/harmansahota/Desktop/Multiple-days-Non-Profits-and-Health-Wellness-Group-B/frontend/src/components/Step2.js",[],[],"/Users/harmansahota/Desktop/Multiple-days-Non-Profits-and-Health-Wellness-Group-B/frontend/src/components/Step3.js",["222"],[],"\nimport React from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction Step3({ formData, setFormData }) {\n  return (\n    <div className=\"other-info-container\">\n      <textarea readonly rows=\"5\" cols=\"auto\">\n        The information you enter will be stored in a secure database\n        that meets Canadian privacy regulations. If you have any\n        concerns, please contact UBC Behavioural Research Ethics Council\n        (BREB) about Barb Marcolin's study or call Dr. Marcolin at\n        (250)807-9637 to ask any questions.\n      </textarea>\n      <div className=\"consent form-check \">\n        <input\n          className=\"form-check-input\"\n          type=\"radio\"\n          id=\"consent-check1\"\n          name=\"consent\"\n          value=\"consented\"\n          onChange={(e) => {\n            if(e.target.checked){\n            setFormData({ ...formData, Consent: e.target.value });\n            }\n            \n          }}\n        />\n        <label\n          className=\"form-check-label consent-text\"\n          for=\"consent-check1\"\n        >\n          I accept\n        </label>\n      </div>\n      <div className=\"consent form-check\">\n        <input\n          className=\"form-check-input\"\n          type=\"radio\"\n          id=\"consent-check2\"\n          name=\"consent\"\n          value=\"not-consented\"\n          onChange={(e) => {\n            if(e.target.checked){\n            setFormData({ ...formData, Consent: e.target.value });\n            }\n          }}\n        />\n        <label\n          className=\"form-check-label consent-text\"\n          for=\"consent-check2\"\n        >\n          I refuse\n        </label>\n      </div>\n      <div className=\"consent form-check\">\n        \n        <a href=\"#\"> More info</a>\n       \n         \n        \n      </div>\n    </div>\n  );\n}\n\nexport default Step3;",{"ruleId":"223","severity":1,"message":"224","line":7,"column":8,"nodeType":"225","messageId":"226","endLine":7,"endColumn":15},{"ruleId":"223","severity":1,"message":"227","line":8,"column":17,"nodeType":"225","messageId":"226","endLine":8,"endColumn":20},{"ruleId":"223","severity":1,"message":"228","line":9,"column":10,"nodeType":"225","messageId":"226","endLine":9,"endColumn":15},{"ruleId":"223","severity":1,"message":"229","line":16,"column":10,"nodeType":"225","messageId":"226","endLine":16,"endColumn":22},{"ruleId":"230","severity":1,"message":"231","line":31,"column":29,"nodeType":"232","messageId":"233","endLine":31,"endColumn":31},{"ruleId":"230","severity":1,"message":"231","line":70,"column":29,"nodeType":"232","messageId":"233","endLine":70,"endColumn":31},{"ruleId":"234","severity":1,"message":"235","line":107,"column":3,"nodeType":"236","messageId":"237","endLine":405,"endColumn":4},{"ruleId":"230","severity":1,"message":"231","line":135,"column":45,"nodeType":"232","messageId":"233","endLine":135,"endColumn":47},{"ruleId":"230","severity":1,"message":"231","line":163,"column":45,"nodeType":"232","messageId":"233","endLine":163,"endColumn":47},{"ruleId":"234","severity":1,"message":"235","line":202,"column":78,"nodeType":"236","messageId":"237","endLine":202,"endColumn":93},{"ruleId":"234","severity":1,"message":"235","line":204,"column":78,"nodeType":"236","messageId":"237","endLine":204,"endColumn":100},{"ruleId":"234","severity":1,"message":"235","line":205,"column":78,"nodeType":"236","messageId":"237","endLine":205,"endColumn":102},{"ruleId":"234","severity":1,"message":"235","line":206,"column":78,"nodeType":"236","messageId":"237","endLine":206,"endColumn":100},{"ruleId":"230","severity":1,"message":"231","line":216,"column":41,"nodeType":"232","messageId":"233","endLine":216,"endColumn":43},{"ruleId":"230","severity":1,"message":"231","line":216,"column":90,"nodeType":"232","messageId":"233","endLine":216,"endColumn":92},{"ruleId":"230","severity":1,"message":"231","line":221,"column":54,"nodeType":"232","messageId":"233","endLine":221,"endColumn":56},{"ruleId":"230","severity":1,"message":"231","line":246,"column":59,"nodeType":"232","messageId":"233","endLine":246,"endColumn":61},{"ruleId":"230","severity":1,"message":"231","line":265,"column":49,"nodeType":"232","messageId":"233","endLine":265,"endColumn":51},{"ruleId":"230","severity":1,"message":"231","line":370,"column":47,"nodeType":"232","messageId":"233","endLine":370,"endColumn":49},{"ruleId":"223","severity":1,"message":"224","line":5,"column":8,"nodeType":"225","messageId":"226","endLine":5,"endColumn":15},{"ruleId":"223","severity":1,"message":"238","line":12,"column":13,"nodeType":"225","messageId":"226","endLine":12,"endColumn":20},{"ruleId":"223","severity":1,"message":"239","line":16,"column":13,"nodeType":"225","messageId":"226","endLine":16,"endColumn":19},{"ruleId":"223","severity":1,"message":"240","line":21,"column":10,"nodeType":"225","messageId":"226","endLine":21,"endColumn":27},{"ruleId":"223","severity":1,"message":"241","line":22,"column":10,"nodeType":"225","messageId":"226","endLine":22,"endColumn":25},{"ruleId":"242","severity":1,"message":"243","line":85,"column":6,"nodeType":"244","endLine":85,"endColumn":8,"suggestions":"245"},{"ruleId":"223","severity":1,"message":"246","line":167,"column":7,"nodeType":"225","messageId":"226","endLine":167,"endColumn":18},{"ruleId":"234","severity":1,"message":"235","line":183,"column":3,"nodeType":"236","messageId":"237","endLine":719,"endColumn":4},{"ruleId":"230","severity":1,"message":"231","line":577,"column":53,"nodeType":"232","messageId":"233","endLine":577,"endColumn":55},{"ruleId":"223","severity":1,"message":"247","line":755,"column":9,"nodeType":"225","messageId":"226","endLine":755,"endColumn":19},{"ruleId":"223","severity":1,"message":"248","line":4,"column":10,"nodeType":"225","messageId":"226","endLine":4,"endColumn":18},{"ruleId":"223","severity":1,"message":"249","line":4,"column":20,"nodeType":"225","messageId":"226","endLine":4,"endColumn":29},{"ruleId":"250","severity":1,"message":"251","line":13,"column":11,"nodeType":"252","endLine":13,"endColumn":22},{"ruleId":"250","severity":1,"message":"251","line":15,"column":21,"nodeType":"252","endLine":15,"endColumn":32},{"ruleId":"223","severity":1,"message":"228","line":6,"column":10,"nodeType":"225","messageId":"226","endLine":6,"endColumn":15},{"ruleId":"253","severity":1,"message":"254","line":27,"column":56,"nodeType":"252","endLine":28,"endColumn":62},{"ruleId":"253","severity":1,"message":"254","line":32,"column":48,"nodeType":"252","endLine":33,"endColumn":67},{"ruleId":"253","severity":1,"message":"254","line":37,"column":51,"nodeType":"252","endLine":38,"endColumn":68},{"ruleId":"253","severity":1,"message":"254","line":44,"column":15,"nodeType":"252","endLine":44,"endColumn":63},{"ruleId":"223","severity":1,"message":"255","line":2,"column":10,"nodeType":"225","messageId":"226","endLine":2,"endColumn":18},{"ruleId":"223","severity":1,"message":"228","line":11,"column":10,"nodeType":"225","messageId":"226","endLine":11,"endColumn":15},{"ruleId":"230","severity":1,"message":"231","line":55,"column":28,"nodeType":"232","messageId":"233","endLine":55,"endColumn":30},{"ruleId":"230","severity":1,"message":"231","line":57,"column":30,"nodeType":"232","messageId":"233","endLine":57,"endColumn":32},{"ruleId":"230","severity":1,"message":"231","line":67,"column":30,"nodeType":"232","messageId":"233","endLine":67,"endColumn":32},{"ruleId":"230","severity":1,"message":"231","line":104,"column":43,"nodeType":"232","messageId":"233","endLine":104,"endColumn":45},{"ruleId":"256","severity":1,"message":"257","line":126,"column":29,"nodeType":"258","messageId":"259","endLine":126,"endColumn":45},{"ruleId":"230","severity":1,"message":"260","line":143,"column":42,"nodeType":"232","messageId":"233","endLine":143,"endColumn":44},{"ruleId":"230","severity":1,"message":"260","line":144,"column":41,"nodeType":"232","messageId":"233","endLine":144,"endColumn":43},{"ruleId":"230","severity":1,"message":"260","line":147,"column":38,"nodeType":"232","messageId":"233","endLine":147,"endColumn":40},{"ruleId":"230","severity":1,"message":"260","line":149,"column":41,"nodeType":"232","messageId":"233","endLine":149,"endColumn":43},{"ruleId":"230","severity":1,"message":"231","line":151,"column":64,"nodeType":"232","messageId":"233","endLine":151,"endColumn":66},{"ruleId":"230","severity":1,"message":"260","line":152,"column":44,"nodeType":"232","messageId":"233","endLine":152,"endColumn":46},{"ruleId":"230","severity":1,"message":"231","line":158,"column":42,"nodeType":"232","messageId":"233","endLine":158,"endColumn":44},{"ruleId":"230","severity":1,"message":"231","line":159,"column":41,"nodeType":"232","messageId":"233","endLine":159,"endColumn":43},{"ruleId":"230","severity":1,"message":"231","line":160,"column":38,"nodeType":"232","messageId":"233","endLine":160,"endColumn":40},{"ruleId":"230","severity":1,"message":"231","line":161,"column":41,"nodeType":"232","messageId":"233","endLine":161,"endColumn":43},{"ruleId":"230","severity":1,"message":"231","line":162,"column":45,"nodeType":"232","messageId":"233","endLine":162,"endColumn":47},{"ruleId":"230","severity":1,"message":"231","line":163,"column":64,"nodeType":"232","messageId":"233","endLine":163,"endColumn":66},{"ruleId":"230","severity":1,"message":"231","line":178,"column":42,"nodeType":"232","messageId":"233","endLine":178,"endColumn":44},{"ruleId":"230","severity":1,"message":"231","line":207,"column":41,"nodeType":"232","messageId":"233","endLine":207,"endColumn":43},{"ruleId":"230","severity":1,"message":"231","line":236,"column":38,"nodeType":"232","messageId":"233","endLine":236,"endColumn":40},{"ruleId":"230","severity":1,"message":"260","line":248,"column":40,"nodeType":"232","messageId":"233","endLine":248,"endColumn":42},{"ruleId":"230","severity":1,"message":"231","line":261,"column":41,"nodeType":"232","messageId":"233","endLine":261,"endColumn":43},{"ruleId":"230","severity":1,"message":"260","line":277,"column":43,"nodeType":"232","messageId":"233","endLine":277,"endColumn":45},{"ruleId":"230","severity":1,"message":"231","line":298,"column":66,"nodeType":"232","messageId":"233","endLine":298,"endColumn":68},{"ruleId":"230","severity":1,"message":"231","line":299,"column":64,"nodeType":"232","messageId":"233","endLine":299,"endColumn":66},{"ruleId":"230","severity":1,"message":"260","line":310,"column":68,"nodeType":"232","messageId":"233","endLine":310,"endColumn":70},{"ruleId":"230","severity":1,"message":"231","line":324,"column":46,"nodeType":"232","messageId":"233","endLine":324,"endColumn":48},{"ruleId":"230","severity":1,"message":"231","line":342,"column":47,"nodeType":"232","messageId":"233","endLine":342,"endColumn":49},{"ruleId":"230","severity":1,"message":"231","line":368,"column":42,"nodeType":"232","messageId":"233","endLine":368,"endColumn":44},{"ruleId":"223","severity":1,"message":"249","line":5,"column":17,"nodeType":"225","messageId":"226","endLine":5,"endColumn":26},{"ruleId":"223","severity":1,"message":"261","line":6,"column":10,"nodeType":"225","messageId":"226","endLine":6,"endColumn":18},{"ruleId":"230","severity":1,"message":"231","line":60,"column":41,"nodeType":"232","messageId":"233","endLine":60,"endColumn":43},{"ruleId":"256","severity":1,"message":"257","line":80,"column":23,"nodeType":"258","messageId":"259","endLine":80,"endColumn":164},{"ruleId":"230","severity":1,"message":"260","line":80,"column":95,"nodeType":"232","messageId":"233","endLine":80,"endColumn":97},{"ruleId":"230","severity":1,"message":"260","line":80,"column":159,"nodeType":"232","messageId":"233","endLine":80,"endColumn":161},{"ruleId":"230","severity":1,"message":"231","line":16,"column":85,"nodeType":"232","messageId":"233","endLine":16,"endColumn":87},{"ruleId":"223","severity":1,"message":"227","line":8,"column":17,"nodeType":"225","messageId":"226","endLine":8,"endColumn":20},{"ruleId":"230","severity":1,"message":"231","line":74,"column":45,"nodeType":"232","messageId":"233","endLine":74,"endColumn":47},{"ruleId":"234","severity":1,"message":"235","line":113,"column":78,"nodeType":"236","messageId":"237","endLine":113,"endColumn":93},{"ruleId":"234","severity":1,"message":"235","line":115,"column":78,"nodeType":"236","messageId":"237","endLine":115,"endColumn":100},{"ruleId":"234","severity":1,"message":"235","line":116,"column":78,"nodeType":"236","messageId":"237","endLine":116,"endColumn":102},{"ruleId":"230","severity":1,"message":"231","line":223,"column":47,"nodeType":"232","messageId":"233","endLine":223,"endColumn":49},{"ruleId":"223","severity":1,"message":"262","line":2,"column":8,"nodeType":"225","messageId":"226","endLine":2,"endColumn":20},{"ruleId":"223","severity":1,"message":"263","line":3,"column":8,"nodeType":"225","messageId":"226","endLine":3,"endColumn":14},{"ruleId":"223","severity":1,"message":"264","line":2,"column":8,"nodeType":"225","messageId":"226","endLine":2,"endColumn":18},{"ruleId":"223","severity":1,"message":"263","line":3,"column":8,"nodeType":"225","messageId":"226","endLine":3,"endColumn":14},{"ruleId":"223","severity":1,"message":"224","line":7,"column":8,"nodeType":"225","messageId":"226","endLine":7,"endColumn":15},{"ruleId":"230","severity":1,"message":"231","line":45,"column":45,"nodeType":"232","messageId":"233","endLine":45,"endColumn":47},{"ruleId":"230","severity":1,"message":"231","line":48,"column":45,"nodeType":"232","messageId":"233","endLine":48,"endColumn":47},{"ruleId":"230","severity":1,"message":"260","line":255,"column":49,"nodeType":"232","messageId":"233","endLine":255,"endColumn":51},{"ruleId":"230","severity":1,"message":"231","line":286,"column":65,"nodeType":"232","messageId":"233","endLine":286,"endColumn":67},{"ruleId":"230","severity":1,"message":"231","line":287,"column":78,"nodeType":"232","messageId":"233","endLine":287,"endColumn":80},{"ruleId":"230","severity":1,"message":"260","line":297,"column":61,"nodeType":"232","messageId":"233","endLine":297,"endColumn":63},{"ruleId":"223","severity":1,"message":"265","line":4,"column":17,"nodeType":"225","messageId":"226","endLine":4,"endColumn":27},{"ruleId":"223","severity":1,"message":"224","line":7,"column":8,"nodeType":"225","messageId":"226","endLine":7,"endColumn":15},{"ruleId":"234","severity":1,"message":"235","line":129,"column":5,"nodeType":"236","messageId":"237","endLine":1170,"endColumn":2},{"ruleId":"250","severity":1,"message":"251","line":58,"column":9,"nodeType":"252","endLine":58,"endColumn":21},"no-unused-vars","'fourcss' is defined but never used.","Identifier","unusedVar","'all' is defined but never used.","'local' is defined but never used.","'getGraphData' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'d3Fetch' is defined but never used.","'d3Axis' is defined but never used.","'getPercentageData' is assigned a value but never used.","'getCategoryData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'calculateLandFillAndPercentsWrapper'. Either include it or remove the dependency array.","ArrayExpression",["266"],"'trackerData' is assigned a value but never used.","'mycategory' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'redirect' is defined but never used.","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","Expected '!==' and instead saw '!='.","'Navigate' is defined but never used.","'directoryCSS' is defined but never used.","'Button' is defined but never used.","'startedCSS' is defined but never used.","'useReducer' is defined but never used.",{"desc":"267","fix":"268"},"Update the dependencies array to be: [calculateLandFillAndPercentsWrapper]",{"range":"269","text":"270"},[2379,2381],"[calculateLandFillAndPercentsWrapper]"]