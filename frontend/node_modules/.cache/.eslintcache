[{"C:\\Users\\almut\\Desktop\\cston1\\Multiple-days-Non-Profits-and-Health-Wellness-Group-B\\frontend\\src\\index.js":"1","C:\\Users\\almut\\Desktop\\cston1\\Multiple-days-Non-Profits-and-Health-Wellness-Group-B\\frontend\\src\\App.js":"2","C:\\Users\\almut\\Desktop\\cston1\\Multiple-days-Non-Profits-and-Health-Wellness-Group-B\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\almut\\Desktop\\cston1\\Multiple-days-Non-Profits-and-Health-Wellness-Group-B\\frontend\\src\\components\\footer.js":"4","C:\\Users\\almut\\Desktop\\cston1\\Multiple-days-Non-Profits-and-Health-Wellness-Group-B\\frontend\\src\\components\\NavBarOut.js":"5","C:\\Users\\almut\\Desktop\\cston1\\Multiple-days-Non-Profits-and-Health-Wellness-Group-B\\frontend\\src\\pages\\resetPassword.js":"6","C:\\Users\\almut\\Desktop\\cston1\\Multiple-days-Non-Profits-and-Health-Wellness-Group-B\\frontend\\src\\pages\\Home.js":"7","C:\\Users\\almut\\Desktop\\cston1\\Multiple-days-Non-Profits-and-Health-Wellness-Group-B\\frontend\\src\\components\\NavBarIn.js":"8","C:\\Users\\almut\\Desktop\\cston1\\Multiple-days-Non-Profits-and-Health-Wellness-Group-B\\frontend\\src\\pages\\register.js":"9","C:\\Users\\almut\\Desktop\\cston1\\Multiple-days-Non-Profits-and-Health-Wellness-Group-B\\frontend\\src\\pages\\login.js":"10","C:\\Users\\almut\\Desktop\\cston1\\Multiple-days-Non-Profits-and-Health-Wellness-Group-B\\frontend\\src\\pages\\faq.js":"11","C:\\Users\\almut\\Desktop\\cston1\\Multiple-days-Non-Profits-and-Health-Wellness-Group-B\\frontend\\src\\pages\\profile.js":"12","C:\\Users\\almut\\Desktop\\cston1\\Multiple-days-Non-Profits-and-Health-Wellness-Group-B\\frontend\\src\\pages\\publicSharing.js":"13","C:\\Users\\almut\\Desktop\\cston1\\Multiple-days-Non-Profits-and-Health-Wellness-Group-B\\frontend\\src\\pages\\directory.js":"14","C:\\Users\\almut\\Desktop\\cston1\\Multiple-days-Non-Profits-and-Health-Wellness-Group-B\\frontend\\src\\pages\\network.js":"15","C:\\Users\\almut\\Desktop\\cston1\\Multiple-days-Non-Profits-and-Health-Wellness-Group-B\\frontend\\src\\pages\\admin.js":"16","C:\\Users\\almut\\Desktop\\cston1\\Multiple-days-Non-Profits-and-Health-Wellness-Group-B\\frontend\\src\\pages\\comment.js":"17","C:\\Users\\almut\\Desktop\\cston1\\Multiple-days-Non-Profits-and-Health-Wellness-Group-B\\frontend\\src\\pages\\tracker.js":"18","C:\\Users\\almut\\Desktop\\cston1\\Multiple-days-Non-Profits-and-Health-Wellness-Group-B\\frontend\\src\\components\\Step4.js":"19","C:\\Users\\almut\\Desktop\\cston1\\Multiple-days-Non-Profits-and-Health-Wellness-Group-B\\frontend\\src\\components\\Step2.js":"20","C:\\Users\\almut\\Desktop\\cston1\\Multiple-days-Non-Profits-and-Health-Wellness-Group-B\\frontend\\src\\components\\Step3.js":"21","C:\\Users\\almut\\Desktop\\cston1\\Multiple-days-Non-Profits-and-Health-Wellness-Group-B\\frontend\\src\\components\\Step1.js":"22"},{"size":552,"mtime":1678485924430,"results":"23","hashOfConfig":"24"},{"size":4702,"mtime":1678485924383,"results":"25","hashOfConfig":"24"},{"size":375,"mtime":1678485924471,"results":"26","hashOfConfig":"24"},{"size":558,"mtime":1678485924398,"results":"27","hashOfConfig":"24"},{"size":2151,"mtime":1678485924390,"results":"28","hashOfConfig":"24"},{"size":2385,"mtime":1678485924463,"results":"29","hashOfConfig":"24"},{"size":2000,"mtime":1678485924430,"results":"30","hashOfConfig":"24"},{"size":4299,"mtime":1678485924383,"results":"31","hashOfConfig":"24"},{"size":15477,"mtime":1678485924463,"results":"32","hashOfConfig":"24"},{"size":5312,"mtime":1678485924447,"results":"33","hashOfConfig":"24"},{"size":3181,"mtime":1678485924447,"results":"34","hashOfConfig":"24"},{"size":21192,"mtime":1678485924455,"results":"35","hashOfConfig":"24"},{"size":9803,"mtime":1678485924455,"results":"36","hashOfConfig":"24"},{"size":566,"mtime":1678485924438,"results":"37","hashOfConfig":"24"},{"size":17420,"mtime":1678491115527,"results":"38","hashOfConfig":"24"},{"size":60510,"mtime":1678485924438,"results":"39","hashOfConfig":"24"},{"size":5492,"mtime":1678485924438,"results":"40","hashOfConfig":"24"},{"size":33463,"mtime":1678485924463,"results":"41","hashOfConfig":"24"},{"size":499,"mtime":1678485924390,"results":"42","hashOfConfig":"24"},{"size":3048,"mtime":1678485924390,"results":"43","hashOfConfig":"24"},{"size":1865,"mtime":1678485924390,"results":"44","hashOfConfig":"24"},{"size":1794,"mtime":1678485924390,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"164j3x9",{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"49"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"49"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"49"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"49"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"49"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"49"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"49"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"49"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"49"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"49"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"49"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"49"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"49"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"49"},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"C:\\Users\\almut\\Desktop\\cston1\\Multiple-days-Non-Profits-and-Health-Wellness-Group-B\\frontend\\src\\index.js",[],[],[],"C:\\Users\\almut\\Desktop\\cston1\\Multiple-days-Non-Profits-and-Health-Wellness-Group-B\\frontend\\src\\App.js",["127","128"],[],"import NavbarOut from \"./components/NavBarOut\";\r\nimport NavbarIn from \"./components/NavBarIn\";\r\nimport Footer from \"./components/footer\";\r\nimport { useState, useEffect } from 'react';\r\nimport Home from \"./pages/Home\";\r\nimport Login from \"./pages/login\";\r\nimport ResetPassword from \"./pages/resetPassword\";\r\nimport Register from \"./pages/register\";\r\nimport FAQ from \"./pages/faq\";\r\nimport Directory from \"./pages/directory\";\r\nimport PublicSharing from \"./pages/publicSharing\";\r\n\r\nimport Profile from \"./pages/profile\";\r\nimport SearchBar from \"./pages/network\";\r\nimport Comment from \"./pages/comment\";\r\nimport Tracker from \"./pages/tracker\";\r\nimport Admin from \"./pages/admin\";\r\n\r\nimport \"./App.css\";\r\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Router>\r\n        <Routes>\r\n          <Route\r\n            exact\r\n            path=\"/\"\r\n            element={\r\n              <>\r\n                <NavbarOut />\r\n                <Home title=\"Home\" />\r\n                <Footer />\r\n              </>\r\n            }\r\n          />\r\n        </Routes>\r\n      </Router>\r\n\r\n      <Router>\r\n        <Routes>\r\n          <Route\r\n            exact\r\n            path=\"/login\"\r\n            element={\r\n              <>\r\n                <NavbarOut />\r\n                <Login />\r\n                <Footer />\r\n              </>\r\n            }\r\n          />\r\n        </Routes>\r\n      </Router>\r\n\r\n      <Router>\r\n        <Routes>\r\n          <Route\r\n            exact\r\n            path=\"/register\"\r\n            element={\r\n              <>\r\n                <NavbarOut />\r\n                <Register />\r\n                <Footer />\r\n              </>\r\n            }\r\n          />\r\n        </Routes>\r\n      </Router>\r\n\r\n      <Router>\r\n        <Routes>\r\n          <Route\r\n            exact\r\n            path=\"/faq\"\r\n            element={\r\n              <>\r\n                <NavbarOut />\r\n                <FAQ />\r\n                <Footer />\r\n              </>\r\n            }\r\n          />\r\n        </Routes>\r\n      </Router>\r\n\r\n      <Router>\r\n        <Routes>\r\n          <Route\r\n            exact\r\n            path=\"/directory\"\r\n            element={\r\n              <>\r\n                <NavbarOut />\r\n                <Directory />\r\n                <Footer />\r\n              </>\r\n            }\r\n          />\r\n        </Routes>\r\n      </Router>\r\n\r\n      <Router>\r\n        <Routes>\r\n          <Route\r\n            exact\r\n            path=\"/publicSharing\"\r\n            element={\r\n              <>\r\n                <NavbarOut />\r\n                <PublicSharing />\r\n                <Footer />\r\n              </>\r\n            }\r\n          />\r\n        </Routes>\r\n      </Router>\r\n\r\n      <Router>\r\n        <Routes>\r\n          <Route\r\n            exact\r\n            path=\"/resetPassword\"\r\n            element={\r\n              <>\r\n                <NavbarOut />\r\n                <ResetPassword />\r\n                <Footer />\r\n              </>\r\n            }\r\n          />\r\n        </Routes>\r\n      </Router>\r\n\r\n      <Router>\r\n        <Routes>\r\n          <Route\r\n            exact\r\n            path=\"/profile\"\r\n            element={\r\n              <>\r\n                <NavbarIn />\r\n                <Profile />\r\n                <Footer />\r\n              </>\r\n            }\r\n          />\r\n        </Routes>\r\n      </Router>\r\n\r\n      <Router>\r\n        <Routes>\r\n          <Route\r\n            exact\r\n            path=\"/network\"\r\n            element={\r\n              <>\r\n                <NavbarIn />\r\n                <SearchBar />\r\n                <Footer />\r\n              </>\r\n            }\r\n          />\r\n        </Routes>\r\n      </Router>\r\n\r\n      <Router>\r\n        <Routes>\r\n          <Route\r\n            exact\r\n            path=\"/comments\"\r\n            element={\r\n              <>\r\n                <NavbarIn />\r\n                <Comment />\r\n                <Footer />\r\n              </>\r\n            }\r\n          />\r\n        </Routes>\r\n      </Router>\r\n\r\n      <Router>\r\n        <Routes>\r\n          <Route\r\n            exact\r\n            path=\"/tracker\"\r\n            element={\r\n              <>\r\n                <NavbarIn />\r\n                <Tracker />\r\n                <Footer />\r\n              </>\r\n            }\r\n          />\r\n        </Routes>\r\n      </Router>\r\n\r\n      <Router>\r\n        <Routes>\r\n          <Route\r\n            exact\r\n            path=\"/admin\"\r\n            element={\r\n             \r\n          \r\n                <>\r\n                <NavbarIn />\r\n                <Admin />\r\n                <Footer />\r\n                </>\r\n     \r\n            \r\n            }\r\n          />\r\n        </Routes>\r\n      </Router>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\almut\\Desktop\\cston1\\Multiple-days-Non-Profits-and-Health-Wellness-Group-B\\frontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\almut\\Desktop\\cston1\\Multiple-days-Non-Profits-and-Health-Wellness-Group-B\\frontend\\src\\components\\footer.js",[],[],"C:\\Users\\almut\\Desktop\\cston1\\Multiple-days-Non-Profits-and-Health-Wellness-Group-B\\frontend\\src\\components\\NavBarOut.js",["129"],[],"import React from \"react\";\r\nimport \"./base.css\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faLeaf } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction NavbarOut() {\r\n  return (\r\n    <>\r\n      <header>\r\n        <div id=\"brand\">\r\n          <a href=\"\">\r\n            <FontAwesomeIcon icon={faLeaf} style={{ color: \"#A1C298\" }} />\r\n            <b> &nbsp; FoodSaviour</b>\r\n          </a>\r\n        </div>\r\n        <div className=\"nav\" id=\"desktop-menu\">\r\n          <ul>\r\n            <li>\r\n              <a href=\"/\">Home</a>\r\n            </li>\r\n            <li id=\"gettingStarted\">\r\n              <a href=\"/faq\">FAQ</a>\r\n            </li>\r\n            <li>\r\n              <a href=\"/directory\">Directory</a>\r\n            </li>\r\n            <li>\r\n              <a href=\"/publicSharing\">Public Sharing</a>\r\n            </li>\r\n            <li id=\"login\">\r\n              <a href=\"/login\">Login</a>\r\n            </li>\r\n            <li id=\"signup\">\r\n              <a href=\"/register\">\r\n                <Button\r\n                  className=\"register btn btn-outline-success\"\r\n                  variant=\"outline-success\"\r\n                >\r\n                  Register\r\n                </Button>\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </header>\r\n\r\n      <div id=\"hamburger-icon\">\r\n        <div className=\"bar1\"></div>\r\n        <div className=\"bar2\"></div>\r\n        <div className=\"bar3\"></div>\r\n        <div className=\"nav\">\r\n          <ul className=\"mobile-menu\">\r\n            <li>\r\n              <a href=\"{% url 'home' %}\">Home</a>\r\n            </li>\r\n            <li>\r\n              <a href=\"faq/\">FAQ</a>\r\n            </li>\r\n            <li>\r\n              <a href=\"directory/\">Directory</a>\r\n            </li>\r\n            <li id=\"login\">\r\n              <a href=\"login/\">Login</a>\r\n            </li>\r\n            <li id=\"signup\">\r\n              <a href=\"register/\">Register</a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NavbarOut;\r\n","C:\\Users\\almut\\Desktop\\cston1\\Multiple-days-Non-Profits-and-Health-Wellness-Group-B\\frontend\\src\\pages\\resetPassword.js",["130"],[],"import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport resetCSS from './resetPassword.module.css';\r\nimport Button from 'react-bootstrap/Button';\r\n//import { Form } from 'react-router-dom';\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nfunction resetPassword() {\r\n\r\n    return (\r\n        <>\r\n            <section>\r\n                <div className={resetCSS.body}>\r\n                    <div className={resetCSS.form_container}>\r\n                        <Form className={`form mx-auto bg-white ${resetCSS.form}`} action=\"\" method=\"POST\" onSubmit={(e) => {\r\n\r\n                            if (document.getElementById('exampleInputEmail1').value == \"\") {\r\n\r\n                                e.preventDefault();\r\n                                window.alert('fields cannot be blank');\r\n\r\n                                document.getElementById('exampleInputEmail1').classList.add('error');\r\n\r\n                            }else{\r\n                                document.getElementById('exampleInputEmail1').classList.add('success');\r\n                            }\r\n\r\n                        }}>\r\n                            <h5 className={`form-title ${resetCSS.form_title}`}>Reset Password</h5>\r\n                            <div>\r\n                                <span>\r\n                                    <p className={`form-title-text mb-0`}>\r\n                                        If the details entered ascribe to an account, your password will be\r\n                                        reset.\r\n                                    </p>\r\n                                </span>\r\n                            </div>\r\n\r\n                            <div className={`form-floating email-form ${resetCSS.email_form}`}>\r\n                                <Form.Control type=\"email\" id=\"exampleInputEmail1\" className=\"form-control input-text\" placeholder=\"jordan@gmail.com\" name=\"email\" />\r\n                                <Form.Label for=\"exampleInputEmail1\" className=\"form-label input-text\">Email:</Form.Label>\r\n                            </div>\r\n\r\n                            <Button classname={`resetPassword btn btn-outline-danger reset-button ${resetCSS.reset_button}`} variant=\"outline-danger\" type=\"submit\">Reset</Button>\r\n                        </Form>\r\n\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </>\r\n    );\r\n}\r\nexport default resetPassword;","C:\\Users\\almut\\Desktop\\cston1\\Multiple-days-Non-Profits-and-Health-Wellness-Group-B\\frontend\\src\\pages\\Home.js",["131","132","133","134","135"],[],"import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport HomeCSS from './home.module.css';\r\nimport ort from '../images/ORT_logo.svg';\r\nimport calender from '../images/calendar.png';\r\nimport user_flat from '../images/abstract-user-flat-4.png';\r\nimport { local } from 'd3-selection';\r\n\r\n\r\nconst b = \"{HomeCSS.card-text.h-200}\";\r\n\r\nfunction Home(){\r\n    \r\n    window.addEventListener(\"beforeunload\", function(e){\r\n        localStorage.clear();\r\n     }, false);\r\n \r\n     window.addEventListener('load', localStorage.clear());\r\n      return (\r\n        \r\n        \r\n       <> \r\n       <section>\r\n              <div className={HomeCSS.container}>\r\n                  <div className=\"row d-flex h-100 align-items-center justify-content-center text-center\">\r\n                      <div className=\"card-group\">\r\n                          <div className={HomeCSS.card}>\r\n                              <a href=\"publicSharing/\"><img className={HomeCSS.normal_img}\r\n                                  src={ort} height=\"100px\" /></a>\r\n                              <p className={b}>View public sharing board</p>\r\n                          </div>\r\n                          <div className={HomeCSS.card}>\r\n                              <a href=\"login/\"><img className={HomeCSS.tracker_img}\r\n                                  src={calender} height=\"100px\" /></a>\r\n                              <p className={b}>Login to access tracker</p>\r\n                          </div>\r\n                          <div className={HomeCSS.card}>\r\n                              <a href=\"register/\"><img className={HomeCSS.tracker_img}\r\n                                  src={user_flat} height=\"100px\" /></a>\r\n                              <p className={b}>Create an account</p>\r\n                          </div>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n              <img className=\"img-baby-g-about for-desktop\" />\r\n          </section></>\r\n    \r\n       \r\n\r\n        );\r\n      }\r\nexport default Home;","C:\\Users\\almut\\Desktop\\cston1\\Multiple-days-Non-Profits-and-Health-Wellness-Group-B\\frontend\\src\\components\\NavBarIn.js",["136"],[],"import React from \"react\";\r\nimport \"./base.css\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faLeaf } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction NavbarIn() {\r\n\r\n    return (\r\n        <>\r\n            <header>\r\n                <div id=\"brand\">\r\n                    <a href=\"\">\r\n                        <FontAwesomeIcon icon={faLeaf} style={{ color: \"#A1C298\" }} />\r\n                        <b> &nbsp; FoodSaviour</b>\r\n                    </a>\r\n                </div>\r\n\r\n                <div className=\"nav\" id=\"desktop-menu\">\r\n                    <ul>\r\n                        <li><a href=\"/tracker\" className=\"nav-link px-3\">Tracker</a></li>\r\n                        {/*{% if 'user non-profit managers/CEO' in request.session.Roles  %}*/}\r\n                        <li><a href=\"/network\" className=\"nav-link px-3\">Sharing</a></li>\r\n                        {/*{% elif 'user non-profit warehouse boss' in request.session.Roles %}*/}\r\n                        {/*<li><a href=\"/network\" className=\"nav-link px-3\">Network</a></li>*/}\r\n                        {/*{% elif 'admin' in request.session.Roles %}*/}\r\n                        {/*<li><a href=\"/network\" className=\"nav-link px-3\">Network</a></li>*/}\r\n                        {/*{% endif %}\r\n\r\n                        {% if 'admin' in request.session.Roles %}*/}\r\n                        <li><a href=\"/admin\" className=\"nav-link px-3\">Permissions</a></li>\r\n                        {/*{% endif %}*/}\r\n\r\n                        <li><a href=\"/profile\" className=\"nav-link px-3\"><FontAwesomeIcon icon={faUser} />\r\n                        &nbsp; Profile</a></li>\r\n                        <li id=\"signup\">\r\n                            <a href=\"/\">\r\n                                <Button className=\"register btn btn-outline-success\" variant=\"outline-success\" onClick={function(){\r\n                                    window.localStorage.clear();\r\n                                }}>\r\n                                    Logout\r\n                                </Button>\r\n                            </a>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n\r\n                <div id=\"hamburger-icon\" onclick=\"toggleMobileMenu(this)\">\r\n                    <div className=\"bar1\"></div>\r\n                    <div className=\"bar2\"></div>\r\n                    <div className=\"bar3\"></div>\r\n                    <div className=\"nav\">\r\n                        <ul className=\"mobile-menu\">\r\n                            <li><a href=\"tracker/\" className=\"nav-link px-3\">Tracker</a></li>\r\n                            {/*{% if 'user non-profit managers/CEO' in request.session.Roles  %}*/}\r\n                            <li><a href=\"network/\" className=\"nav-link px-3\">Network</a></li>\r\n                            {/*{% elif 'user non-profit warehouse boss' in request.session.Roles %}*/}\r\n                            <li><a href=\"network/\" className=\"nav-link px-3\">Network</a></li>\r\n                            {/*{% elif 'admin' in request.session.Roles %}*/}\r\n                            <li><a href=\"network/\" className=\"nav-link px-3\">Network</a></li>\r\n                            {/*{% endif %}\r\n                            \r\n                            {% if 'admin' in request.session.Roles %}*/}\r\n                            <li><a href=\"admin/\" className=\"nav-link px-3\">Admin</a></li>\r\n                            {/*{% endif %}*/}\r\n\r\n                            <li><a href=\"profile\" className=\"nav-link px-3\"><FontAwesomeIcon icon={faUser} />\r\n                                Profile</a></li>\r\n                            <li id=\"signup\">\r\n                                <a href=\"/\">\r\n                                    <Button className=\"register btn btn-outline-success\" variant=\"outline-success\">\r\n                                        Logout\r\n                                    </Button>\r\n                                </a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </header>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default NavbarIn;","C:\\Users\\almut\\Desktop\\cston1\\Multiple-days-Non-Profits-and-Health-Wellness-Group-B\\frontend\\src\\pages\\register.js",["137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167"],[],"import React, { useState } from \"react\";\r\nimport { redirect } from \"react-router-dom\";\r\nimport SignUpInfo from \"../components/Step1\";\r\nimport PersonalInfo from \"../components/Step2\";\r\nimport OtherInfo from \"../components/Step3\";\r\nimport Confirm from \"../components/Step4\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./register.css\";\r\nimport axios from 'axios';\r\nimport { local } from \"d3-selection\";\r\n\r\nfunction Form() {\r\n  const [page, setPage] = useState(0);\r\n\r\n  const [formData, setFormData] = useState({\r\n    FirstName: \"\",\r\n    LastName: \"\",\r\n    Email: \"\",\r\n    Password: \"\",\r\n    Roles: [],\r\n    Consent: \"\",\r\n    Organization: \"\",\r\n  });\r\n\r\n  formData.Roles = formData.Roles.toString();\r\n\r\n  const FormTitles = [\"Personal Info\", \"Pick your Roles\", \"Consent\", \"Confirm\"];\r\n\r\n  const PageDisplay = () => {\r\n    if (page === 0) {\r\n      return <SignUpInfo formData={formData} setFormData={setFormData} />;\r\n    } else if (page === 1) {\r\n      return <PersonalInfo formData={formData} setFormData={setFormData} />;\r\n    } else if (page === 2) {\r\n      return <OtherInfo formData={formData} setFormData={setFormData} />;\r\n    } else {\r\n      return <Confirm formData={formData} setFormData={setFormData} />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"body\">\r\n      <div className=\"form-register\">\r\n        <div className=\"form-container-register\">\r\n          <div className=\"header\">\r\n            <h1>{FormTitles[page]}</h1>\r\n          </div>\r\n          <div className=\"progressbar\">\r\n            <div\r\n              style={{\r\n                width:\r\n                  page === 0\r\n                    ? \"33.3%\"\r\n                    : page == 1\r\n                      ? \"66.6%\"\r\n                      : page == 2\r\n                        ? \"88.8%\"\r\n                        : \"100%\",\r\n              }}\r\n            ></div>\r\n          </div>\r\n          <div className=\"body\">{PageDisplay()}</div>\r\n          <div className=\"footer\">\r\n            <Button\r\n              variant=\"btn btn-success\"\r\n              disabled={page == 0}\r\n              onClick={() => {\r\n                setPage((currPage) => currPage - 1);\r\n              }}\r\n            >\r\n              Back\r\n            </Button>\r\n            <Button\r\n              id=\"submit\"\r\n              variant=\"btn btn-success\"\r\n              onClick={(e) => {\r\n                if (page === FormTitles.length - 1) {\r\n                  console.log(JSON.parse(JSON.stringify(formData)));\r\n                 \r\n\r\n                  axios.post(\r\n                    \"http://127.0.0.1:8000/api/registerInsert/\",\r\n                    {\r\n                      FirstName: formData.FirstName,\r\n                      LastName: formData.LastName,\r\n                      Email: formData.Email,\r\n                      Password: formData.Password,\r\n                      Roles: formData.Roles,\r\n                      Consent: formData.Consent,\r\n                      Organization: formData.Organization\r\n                     \r\n                    },\r\n                    {\r\n                      headers: {\r\n                        \"Content-type\": \"application/json\",\r\n                      }\r\n                    }\r\n\r\n                  )\r\n\r\n                 \r\n                    .then(response => \r\n                      {if(response.status == 201){\r\n                        const date = new Date().setHours(new Date().getHours() + 1 );\r\n                        localStorage.setItem('firstname', formData.FirstName);\r\n                        localStorage.setItem('lastname', formData.LastName);\r\n                        localStorage.setItem('email', formData.Email);\r\n                        localStorage.setItem( 'roles', formData.Roles);\r\n                        localStorage.setItem( 'organization', formData.Organization);\r\n                        localStorage.setItem( 'consent', formData.Consent);\r\n                        localStorage.setItem( 'approve', \"\");\r\n                        localStorage.setItem('id',response.data['data']['id']);\r\n                        localStorage.setItem('token',response.data['token'])\r\n                        localStorage.setItem('expiry',date)\r\n\r\n                        window.location.replace(\"http://localhost:3000/tracker/\");\r\n\r\n\r\n                       \r\n                        }}\r\n                       \r\n                      )\r\n                      .catch(err => \r\n\r\n                        {if(err.status=\"409\" ){\r\n                          window.alert(\"Email already exists, please use a different email\");\r\n                    \r\n                        }}\r\n                        \r\n                        )\r\n                      \r\n\r\n                   \r\n\r\n                } else {\r\n                  var EmailValidRegex =\r\n                    /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\r\n                  var PasswordRegex = /(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}/;\r\n\r\n                  if (page === 0) {\r\n                    if (\r\n                      formData.FirstName != \"\" &&\r\n                      formData.LastName != \"\" &&\r\n                      !/\\d/.test(formData.FirstName) &&\r\n                      !/\\d/.test(formData.LastName) &&\r\n                      formData.Email != \"\" &&\r\n                      formData.Email.match(EmailValidRegex) &&\r\n                      formData.Password != \"\" &&\r\n                      formData.Password.match(PasswordRegex) &&\r\n                      document.getElementById(\"confirm\").value == formData.Password &&\r\n                      formData.Organizatio != \"\"\r\n                    ) {\r\n                      setPage((currPage) => currPage + 1);\r\n                    }\r\n\r\n                    if (\r\n                      formData.FirstName == \"\" ||\r\n                      formData.LastName == \"\" ||\r\n                      formData.Email == \"\" ||\r\n                      formData.Password == \"\" ||\r\n                      formData.Organization == \"\" ||\r\n                      document.getElementById(\"confirm\").value == \"\"\r\n                    ) {\r\n                      window.alert(\"fields cannot be empty\");\r\n                    }\r\n\r\n                    if (\r\n                      /\\d/.test(formData.LastName) ||\r\n                      /\\d/.test(formData.LastName)\r\n                    ) {\r\n                      window.alert(\r\n                        \"First Name and Last Name cannot have numbers, please check if you entered a number in one of these fields\"\r\n                      );\r\n                    }\r\n\r\n                    if (\r\n                      formData.FirstName == \"\" ||\r\n                      /\\d/.test(formData.FirstName)\r\n                    ) {\r\n                      if (\r\n                        document\r\n                          .getElementById(\"firstname\")\r\n                          .hasAttribute(\"success\")\r\n                      )\r\n                        document\r\n                          .getElementById(\"firstname\")\r\n                          .classList.remove(\"success\");\r\n                      document\r\n                        .getElementById(\"firstname\")\r\n                        .classList.add(\"error\");\r\n                    } else {\r\n                      if (\r\n                        document\r\n                          .getElementById(\"firstname\")\r\n                          .hasAttribute(\"error\")\r\n                      )\r\n                        document\r\n                          .getElementById(\"firstname\")\r\n                          .classList.remove(\"error\");\r\n                      document\r\n                        .getElementById(\"firstname\")\r\n                        .classList.add(\"success\");\r\n                    }\r\n\r\n                    if (\r\n                      formData.LastName == \"\" ||\r\n                      /\\d/.test(formData.LastName)\r\n                    ) {\r\n                      if (\r\n                        document\r\n                          .getElementById(\"lastname\")\r\n                          .hasAttribute(\"success\")\r\n                      )\r\n                        document\r\n                          .getElementById(\"lastname\")\r\n                          .classList.remove(\"success\");\r\n                      document\r\n                        .getElementById(\"lastname\")\r\n                        .classList.add(\"error\");\r\n                    } else {\r\n                      if (\r\n                        document\r\n                          .getElementById(\"lastname\")\r\n                          .hasAttribute(\"error\")\r\n                      )\r\n                        document\r\n                          .getElementById(\"lastname\")\r\n                          .classList.remove(\"error\");\r\n                      document\r\n                        .getElementById(\"lastname\")\r\n                        .classList.add(\"success\");\r\n                    }\r\n\r\n                    if (\r\n                      formData.Email == \"\" ||\r\n                      !formData.Email.match(EmailValidRegex)\r\n                    ) {\r\n                      if (\r\n                        document.getElementById(\"email\").hasAttribute(\"success\")\r\n                      )\r\n                        document\r\n                          .getElementById(\"email\")\r\n                          .classList.remove(\"success\");\r\n                      document.getElementById(\"Email\").classList.add(\"error\");\r\n                      if (\r\n                        !formData.Email.match(EmailValidRegex) &&\r\n                        formData.Email != \"\"\r\n                      ) {\r\n                        window.alert(\"Email is not valid\");\r\n                      }\r\n                    } else {\r\n                      if ( document.getElementById(\"email\").hasAttribute(\"error\") )\r\n                        document\r\n                          .getElementById(\"email\")\r\n                          .classList.remove(\"error\");\r\n                      document.getElementById(\"email\").classList.add(\"success\");\r\n                    }\r\n\r\n                    if (\r\n                      formData.Password == \"\" ||\r\n                      !formData.Password.match(PasswordRegex)\r\n                    ) {\r\n                      if (\r\n                        document\r\n                          .getElementById(\"password\")\r\n                          .hasAttribute(\"success\")\r\n                      )\r\n                        document\r\n                          .getElementById(\"password\")\r\n                          .classList.remove(\"success\");\r\n                      document\r\n                        .getElementById(\"password\")\r\n                        .classList.add(\"error\");\r\n                      if (\r\n                        !formData.Email.match(PasswordRegex) &&\r\n                        formData.Password != \"\"\r\n                      ) {\r\n                        window.alert(\r\n                          \"Password Must contain at least one number and one uppercase and lowercase letter, and at least 8 or more characters\"\r\n                        );\r\n                      }\r\n                    } else {\r\n                      if (\r\n                        document\r\n                          .getElementById(\"password\")\r\n                          .hasAttribute(\"error\")\r\n                      )\r\n                        document\r\n                          .getElementById(\"password\")\r\n                          .classList.remove(\"error\");\r\n                      document\r\n                        .getElementById(\"password\")\r\n                        .classList.add(\"success\");\r\n                    }\r\n\r\n                    if (\r\n                      !(document.getElementById(\"confirm\").value == formData.Password) ||\r\n                      document.getElementById(\"confirm\").value == \"\"\r\n                    ) {\r\n                      if (\r\n                        document\r\n                          .getElementById(\"confirm\")\r\n                          .hasAttribute(\"success\")\r\n                      )\r\n                        document\r\n                          .getElementById(\"confirm\")\r\n                          .classList.remove(\"success\");\r\n                      document.getElementById(\"confirm\").classList.add(\"error\");\r\n                      if (document.getElementById(\"confirm\").value != \"\")\r\n                        window.alert(\"confirm Password doesnt match Password\");\r\n                    } else {\r\n                      if (\r\n                        document.getElementById(\"confirm\").hasAttribute(\"error\")\r\n                      )\r\n                        document\r\n                          .getElementById(\"confirm\")\r\n                          .classList.remove(\"error\");\r\n                      document\r\n                        .getElementById(\"confirm\")\r\n                        .classList.add(\"success\");\r\n                    }\r\n\r\n                    if (formData.Organizatio == \"\") {\r\n                      if (\r\n                        document.getElementById(\"org\").hasAttribute(\"success\")\r\n                      )\r\n                        document\r\n                          .getElementById(\"org\")\r\n                          .classList.remove(\"success\");\r\n                      document.getElementById(\"org\").classList.add(\"error\");\r\n                    } else {\r\n                      if (document.getElementById(\"org\").hasAttribute(\"error\"))\r\n                        document\r\n                          .getElementById(\"org\")\r\n                          .classList.remove(\"error\");\r\n                      document.getElementById(\"org\").classList.add(\"success\");\r\n                    }\r\n                  }\r\n\r\n                  if (page === 1) {\r\n                    if (formData.Roles.length == \"0\") {\r\n                      window.alert(\"you must pick atleast one role\");\r\n                      document\r\n                        .getElementById(\"flexCheckDefault1\")\r\n                        .classList.add(\"error\");\r\n                      document\r\n                        .getElementById(\"flexCheckDefault2\")\r\n                        .classList.add(\"error\");\r\n                      document\r\n                        .getElementById(\"flexCheckDefault3\")\r\n                        .classList.add(\"error\");\r\n                      document\r\n                        .getElementById(\"flexCheckDefault4\")\r\n                        .classList.add(\"error\");\r\n                      document\r\n                        .getElementById(\"flexCheckDefault5\")\r\n                        .classList.add(\"error\");\r\n                      document\r\n                        .getElementById(\"flexCheckDefault6\")\r\n                        .classList.add(\"error\");\r\n                    } else {\r\n                      setPage((currPage) => currPage + 1);\r\n                    }\r\n                  }\r\n\r\n                  if (page === 2) {\r\n                    if (formData.Consent == \"not-Consent\") {\r\n                      window.alert(\"you must consent to continue\");\r\n                      document\r\n                        .getElementById(\"flexCheckDefault1\")\r\n                        .classList.add(\"consent-check1\");\r\n                    } else {\r\n                      setPage((currPage) => currPage + 1);\r\n                    }\r\n                  }\r\n                }\r\n              }}\r\n            >\r\n              {page === FormTitles.length - 1 ? \"Submit\" : \"Next\"}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","C:\\Users\\almut\\Desktop\\cston1\\Multiple-days-Non-Profits-and-Health-Wellness-Group-B\\frontend\\src\\pages\\login.js",["168","169","170","171","172","173"],[],"import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport loginCSS from './login.module.css';\r\nimport Button from 'react-bootstrap/Button';\r\nimport axios from 'axios';\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nfunction Login() {\r\n  const [loginData, setLoginData] = useState([]);\r\n  return (\r\n  \r\n    <div className={loginCSS.body}>\r\n      <div className={`form-container ${loginCSS.form_container}`}>\r\n        <div className={`mx-auto bg-white ${loginCSS.form}`} id=\"login\"   >\r\n\r\n          <h5 className={`form-title ${loginCSS.form_title}`}>User Login</h5>\r\n\r\n\r\n          <div className={`form-floating  ${loginCSS.email_form}`}>\r\n            <input type=\"email\" id=\"exampleInputEmail1\" className=\"form-control input-text\" placeholder=\"jordan@gmail.com\" name=\"email\"\r\n\r\n              onChange={(event) =>\r\n                setLoginData({ ...loginData, Email: event.target.value })\r\n\r\n              }\r\n\r\n\r\n            />\r\n            <label for=\"exampleInputEmail1\" className={`form-label  ${loginCSS.input_text}`}>Email:</label>\r\n          </div>\r\n\r\n\r\n          <div className={`form-floating  ${loginCSS.password_form}`}>\r\n            <input type=\"password\" id=\"exampleInputPassword1\" className=\"form-control input-text\" placeholder=\"e.g. Kiwanuka\" name=\"password\"\r\n\r\n              onChange={(event) =>\r\n                setLoginData({ ...loginData, Password: event.target.value })\r\n\r\n              }\r\n            />\r\n            <label for=\"exampleInputPassword1\" className={`form-label  ${loginCSS.input_text}`}>Password:</label>\r\n          </div>\r\n\r\n\r\n          <Button className={`btn btn-outline-success ${loginCSS.sign_in}`} variant=\"outline-success\" id=\"submit\" for=\"login\" type=\"submit\"\r\n\r\n            onClick={(e) => {\r\n              axios.post(\r\n                \"http://127.0.0.1:8000/api/login/\",\r\n                {\r\n                    Email: loginData.Email,\r\n                    Password: loginData.Password\r\n                },\r\n                {\r\n                    headers: {\r\n                        \"Content-type\": \"application/json\",\r\n                    }\r\n                }\r\n            )\r\n                .then(response => {\r\n                    if (response.status == 200) {\r\n                        console.log(response.data);\r\n                        const date = new Date().setHours(new Date().getHours() + 1 );\r\n\r\n                        localStorage.setItem('firstname', response.data['data']['firstname']);\r\n                        localStorage.setItem('lastname', response.data['data']['lastname']);\r\n                        localStorage.setItem('email', response.data['data']['email']);\r\n                        localStorage.setItem( 'roles', response.data['data']['roles']);\r\n                        localStorage.setItem( 'organization', response.data['data']['organization']);\r\n                        localStorage.setItem( 'consent', response.data['data']['consent']);\r\n                        localStorage.setItem( 'approve', response.data['data']['approve']);\r\n                        localStorage.setItem( 'id', response.data['data']['id']);\r\n                       \r\n                        localStorage.setItem('token',response.data['token'])\r\n                        localStorage.setItem('expiry',date)\r\n                          window.location.replace(\"http://localhost:3000/tracker/\");\r\n                    }\r\n                })\r\n                .catch(err => \r\n\r\n                  {if(err.status=\"404\" && document.getElementById('exampleInputEmail1').value != \"\" && document.getElementById('exampleInputPassword1').value != \"\"){\r\n                    window.alert(\"invalid username or password\");\r\n                    document.getElementById('exampleInputEmail1').classList.add('error');\r\n                    document.getElementById('exampleInputPassword1').classList.add('error');\r\n                  }}\r\n                  \r\n                  \r\n                  );\r\n              \r\n              if (document.getElementById('exampleInputEmail1').value === \"\" || document.getElementById('exampleInputPassword1').value === \"\" ) {\r\n\r\n                window.alert('fields cannot be blank');\r\n                document.getElementById('exampleInputEmail1').classList.add('error');\r\n\r\n                document.getElementById('exampleInputPassword1').classList.add('error');\r\n\r\n              } else {\r\n                document.getElementById('exampleInputEmail1').classList.add('success');\r\n                document.getElementById('exampleInputPassword1').classList.add('success');\r\n              }\r\n\r\n\r\n\r\n            }}\r\n\r\n          >\r\n            Sign in\r\n          </Button>\r\n\r\n          <div className={loginCSS.trouble}>\r\n            <span className={`text-muted ${loginCSS.trouble_text}`}>Having trouble signing in?</span>\r\n            <a className={`text-danger ${loginCSS.trouble_reset}`} href=\"resetPassword/\">Reset password</a>\r\n          </div>\r\n\r\n          <div className={loginCSS.new_account}>\r\n            <span className={`text-muted ${loginCSS.new_account_text}`}>Don't have an account?</span>\r\n            <a href=\"/register\" className={`text-success ${loginCSS.new_account_text}`}>Create Now &rarr;</a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n\r\n}\r\n\r\nexport default Login;","C:\\Users\\almut\\Desktop\\cston1\\Multiple-days-Non-Profits-and-Health-Wellness-Group-B\\frontend\\src\\pages\\faq.js",["174","175"],[],"import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport startedCSS from './faq.module.css';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nfunction FAQ() {\r\n   return (\r\n\r\n      <section>\r\n         <div className='container p-2'>\r\n            <div className='card'>\r\n               <div className='card-body'>\r\n                  <h4 className='card-title'>Frequently Asked Questions</h4>\r\n                  <h8 className='card-subtitle mb-2 text-muted'>If you need more support, please contact example@email.com.</h8>\r\n\r\n                  <hr />\r\n\r\n                  <nav>\r\n                     <ul>\r\n                        <li><a href='#register'>How to create an account</a></li>\r\n                        <li><a href='#login'>How to log into your account</a></li>\r\n                        <li><a href='#tracker'>How to use the tracker</a></li>\r\n                     </ul>\r\n                  </nav>\r\n\r\n                  <hr />\r\n\r\n                  <h5 id='register'>How to create an account</h5>\r\n                  <ol>\r\n                     <li>Register for an account by clicking on one of the two icons on the Home page.</li>\r\n                     <li>Enter your credentials, select your role(s), and give consent.</li>\r\n                     <li>Click on the 'Submit' button.</li>\r\n\r\n                     <p>And you're done! You have successfully created an account and can now start tracking how much food you have saved and start connecting with other organizations in the Food Saviour community.</p>\r\n                  </ol>\r\n\r\n                  <h5 id='login'>How to log into your account</h5>\r\n                  <ol>\r\n                     <li>Log into your account by clickon on one of the two icons on the Home page.</li>\r\n                     <li>Enter the email and password you used to create your account.</li>\r\n                     <li>Click on the 'Login' button.</li>\r\n                  </ol>\r\n\r\n                  <h5 id='tracker'>How to use the tracker</h5>\r\n                  <ol>\r\n                     <li>Navigate to the Tracker page by clicking on 'Tracker' in the navigation bar.</li>\r\n                     <li>Select the category your food best falls under.</li>\r\n                     <li>(Optional) Enter a description for your food (i.e. Apples).</li>\r\n                     <li>Select the weight unit.</li>\r\n                     <li>Enter the amount of food according to your selected weight unit.</li>\r\n                     <li>Enter how much food had been diverted to each source according to your selected weight unit. As you enter the numbers, the calculator will automatically convert the data you entered into percentages on the right hand side.</li>\r\n                     <li>Once you are finished entering your data, click on the 'Save' button.</li>\r\n                     <li>Scroll down below and you should see a graph generated based on the data you entered.</li>\r\n                     <li>Below the graph, you can view the data you entered and delete the data entry by click on the 'Delete' button.</li>\r\n                  </ol>\r\n\r\n               </div>\r\n            </div>\r\n         </div>\r\n      </section>\r\n   );\r\n}\r\n\r\nexport default FAQ;","C:\\Users\\almut\\Desktop\\cston1\\Multiple-days-Non-Profits-and-Health-Wellness-Group-B\\frontend\\src\\pages\\profile.js",["176","177","178","179","180","181","182"],[],"import React, { useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport profileCSS from './profile.module.css';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport axios from 'axios';\r\nimport fourcss from './fourcss.css';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPenToSquare } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction Profile() {\r\n    const [all, setAll] = useState({\r\n        FirstName: localStorage.getItem('firstname'),\r\n        LastName: localStorage.getItem('lastname'),\r\n        Roles: localStorage.getItem('roles'),\r\n        Consent: localStorage.getItem('consent'),\r\n        Organization: localStorage.getItem('organization')\r\n    });\r\n\r\n    const [showModal, setShowModal] = useState(false);\r\n    const handleClose = () => setShowModal(false);\r\n    const handleShow = () => setShowModal(true);\r\n\r\n    const userId = localStorage.getItem('id');\r\n\r\n    window.onload = function () {\r\n        if (localStorage.getItem('roles').includes('user non-profit managers/CEO')) {\r\n            document.getElementById('manager_ceo').checked = true;\r\n        }\r\n        if (localStorage.getItem('roles').includes('user non-profit warehouse boss')) {\r\n            document.getElementById('warehouse_boss').checked = true;\r\n        }\r\n        if (localStorage.getItem('roles').includes('user non-profit volunteer')) {\r\n            document.getElementById('volunteer').checked = true;\r\n        }\r\n        if (localStorage.getItem('roles').includes('sponsor')) {\r\n            document.getElementById('sponsor').checked = true;\r\n        }\r\n        if (localStorage.getItem('roles').includes('admin')) {\r\n            document.getElementById('admin').checked = true;\r\n        }\r\n        if (localStorage.getItem('roles').includes('expert')) {\r\n            document.getElementById('expert').checked = true;\r\n        }\r\n        if (localStorage.getItem('consent') == 'consented') {\r\n            document.getElementById('consented').checked = true;\r\n        }\r\n        if (localStorage.getItem('consent') == 'unconsented') {\r\n            document.getElementById('unconsented').checked = true;\r\n        }\r\n\r\n        console.log(localStorage.getItem('roles')); \r\n    }\r\n\r\n    var role_str = [];\r\n    var prevroles = \"\";\r\n    if (new Date().getTime() > localStorage.getItem('expiry')  && localStorage.roles ){\r\n        const response = window.confirm(\"Your session has expired. Do you still want to be logged in?\");\r\n      \r\n        if(response){\r\n          localStorage.removeItem('expiry');\r\n          const date = new Date().setHours(new Date().getHours()+1);\r\n          localStorage.setItem('expiry',date) \r\n        }\r\n      }\r\n\r\n    if (new Date().getTime() < localStorage.getItem('expiry')  && localStorage.roles) {\r\n           return (\r\n            <section>\r\n                <div className=\"container p-4\">\r\n                    <div className=\"card\">\r\n                        <form>\r\n                            <div className={`${profileCSS.card_head} card-header bg-transparent text-center`}>\r\n                                <b>Profile</b>\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-3\">\r\n                                        <b>Name: </b>\r\n                                    </div>\r\n\r\n                                    <div className='col-6'>\r\n                                        <div className='row'>\r\n                                            <div className='col-auto'>\r\n                                                <input type=\"text\" id=\"fname\" name=\"fname\" placeholder={localStorage.getItem('firstname')} size=\"20\" disabled\r\n                                                    onChange={(e) => {\r\n                                                        localStorage.removeItem('firstname');\r\n                                                        localStorage.setItem('firstname', e.target.value);\r\n                                                        setAll({ ...all, FirstName: localStorage.getItem('firstname') })\r\n                                                        prevroles = localStorage.getItem('roles').toString();\r\n                                                    }} />\r\n                                            </div>\r\n                                            <div className='col-auto'>\r\n                                                <input type=\"text\" id=\"lname\" name=\"lname\" placeholder={localStorage.getItem('lastname')} size=\"20\" disabled\r\n                                                    onChange={(e) => {\r\n                                                        localStorage.removeItem('lastname');\r\n                                                        localStorage.setItem('lastname', e.target.value);\r\n                                                        setAll({ ...all, LastName: localStorage.getItem('lastname') });\r\n                                                        prevroles = localStorage.getItem('roles').toString();\r\n                                                    }} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='col-3'>\r\n                                        <Button className={`${profileCSS.edit_btn} btn btn-outline-danger`} variant=\"outline-danger\" onClick={(e) => {\r\n                                            document.getElementById('fname').disabled = false;\r\n                                            document.getElementById('lname').disabled = false;\r\n                                        }} >\r\n                                            Edit <FontAwesomeIcon icon={faPenToSquare} style={{ color: \"#DC143C\t\" }} />\r\n                                        </Button>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <br />\r\n\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-3\">\r\n                                        <b>Email: </b>\r\n                                    </div>\r\n\r\n                                    <div className='col-6'>\r\n                                        <input type=\"email\" id=\"email\" name=\"email\" placeholder={localStorage.getItem('email')} size=\"50\" disabled />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <br />\r\n\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-3\">\r\n                                        <b>Organization Name: </b>\r\n                                    </div>\r\n\r\n                                    <div className='col-6'>\r\n                                        <input type=\"text\" id=\"org\" name=\"org\" placeholder={localStorage.getItem('organization')} size=\"50\" disabled onChange={(e) => {\r\n                                            localStorage.removeItem('organization');\r\n                                            localStorage.setItem('organization', e.target.value);\r\n                                            setAll({ ...all, Organization: localStorage.getItem('organization') })\r\n                                            prevroles = localStorage.getItem('roles').toString();\r\n                                        }} />\r\n                                    </div>\r\n\r\n                                    <div className='col-3'>\r\n                                        <Button className={`${profileCSS.edit_btn} btn btn-outline-danger`} variant=\"outline-danger\" onClick={(e) => {\r\n                                            document.getElementById('org').disabled = false;\r\n                                        }}>\r\n                                            Edit <FontAwesomeIcon icon={faPenToSquare} style={{ color: \"#DC143C\t\" }} />\r\n                                        </Button>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <br />\r\n\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-3\">\r\n                                        <b>Role(s): </b>\r\n                                    </div>\r\n\r\n                                    <div className='col-6'\r\n                                        onChange={(e) => {\r\n                                            localStorage.removeItem('roles');\r\n                                            if (e.target.checked) {\r\n                                                role_str.push(e.target.value);\r\n                                            }\r\n\r\n                                        }\r\n                                       \r\n                                        }>\r\n                                        <label for=\"manager_ceo\" className='checkbox-inline'>\r\n                                            <input type=\"checkbox\" className='roles' id=\"manager_ceo\" name=\"roles\" value=\"user non-profit managers/CEO\" disabled\r\n                                            />\r\n                                            User non-profit managers/CEO</label>\r\n                                        <br />\r\n                                        <label for=\"warehouse_boss\">\r\n                                            <input type=\"checkbox\"  className='roles' id=\"warehouse_boss\" name=\"roles\" value=\"user non-profit warehouse boss\" disabled />\r\n                                            User non-profit warehouse boss</label>\r\n                                        <br />\r\n                                        <label for=\"volunteer\">\r\n                                            <input type=\"checkbox\"  className='roles' id=\"volunteer\" name=\"roles\" value=\"user non-profit volunteer\" disabled />\r\n                                            User non-profit volunteer</label>\r\n                                        <br />\r\n                                        <label for=\"sponsor\" className='checkbox-inline'>\r\n                                            <input type=\"checkbox\"  className='roles' id=\"sponsor\" name=\"roles\" value=\"sponsor\" disabled />\r\n                                            Sponsor</label>\r\n                                        <br />\r\n                                        <label for=\"admin\">\r\n                                            <input type=\"checkbox\" id=\"admin\" className='roles' name=\"roles\" value=\"admin\" disabled />\r\n                                            Admin</label>\r\n                                        <br />\r\n                                        <label for=\"expert\">\r\n                                            <input type=\"checkbox\" id=\"expert\" name=\"roles\" className='roles' value=\"expert\" disabled />\r\n                                            Expert</label>\r\n                                    </div>\r\n\r\n                                    <div className='col-3'>\r\n                                        <Button className={`${profileCSS.edit_btn} btn btn-outline-danger`} variant=\"outline-danger\" onClick={(e) => {\r\n                                            document.getElementById('manager_ceo').disabled = false;\r\n                                            document.getElementById('warehouse_boss').disabled = false;\r\n                                            document.getElementById('volunteer').disabled = false;\r\n                                            document.getElementById('sponsor').disabled = false;\r\n                                            document.getElementById('admin').disabled = false;\r\n                                            document.getElementById('expert').disabled = false;\r\n\r\n                                            document.getElementById('manager_ceo').checked = false;\r\n                                            document.getElementById('warehouse_boss').checked = false;\r\n                                            document.getElementById('volunteer').checked = false;\r\n                                            document.getElementById('sponsor').checked = false;\r\n                                            document.getElementById('admin').checked = false;\r\n                                            document.getElementById('expert').checked= false;\r\n                                            \r\n\r\n\r\n                                        }}>\r\n                                            Edit <FontAwesomeIcon icon={faPenToSquare} style={{ color: \"#DC143C\t\" }} />\r\n                                        </Button>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <br />\r\n\r\n                                <div className='row'>\r\n                                    <div className=\"col-3\">\r\n                                        <b>Consent: </b>\r\n                                    </div>\r\n\r\n                                    <div className='col-6' onChange={(e) => {\r\n                                        localStorage.removeItem('consent');\r\n                                        if (e.target.checked) {\r\n                                            localStorage.setItem('consent', e.target.value);\r\n                                        }\r\n                                        setAll({ ...all, Consent: localStorage.getItem('consent') });\r\n                                        prevroles = localStorage.getItem('roles').toString();\r\n                                    }}>\r\n                                        <label for=\"consented\">\r\n                                            <input type=\"radio\" id=\"consented\" name=\"consent\" value=\"consented\" disabled />\r\n                                            Yes, I consent to sharing my data.</label>\r\n                                        <label for=\"unconsented\">\r\n                                            <input type=\"radio\" id=\"unconsented\" name=\"consent\" value=\"unconsented\" onChange={handleShow} disabled />\r\n                                            No, I want to stop sharing my data.</label>\r\n                                    </div>\r\n\r\n                                    <div className='col-3' >\r\n                                        <Button className={`${profileCSS.edit_btn} btn btn-outline-danger`} variant=\"outline-danger\" onClick={() => {\r\n                                            document.getElementById('consented').disabled = false;\r\n                                            document.getElementById('unconsented').disabled = false;\r\n                                        }}>\r\n                                            Edit <FontAwesomeIcon icon={faPenToSquare} style={{ color: \"#DC143C\t\" }} />\r\n                                        </Button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className='row'>\r\n                                <Button className={`${profileCSS.save_btn} btn btn-outline-success`} id=\"saveBtn\" variant=\"outline-sucess\" onClick={() => {\r\n                                     \r\n                                    if(role_str != \"\" || role_str != null){\r\n                                       if(localStorage.getItem(\"roles\")){\r\n                                        localStorage.setItem(\"roles\",role_str.toString());\r\n                                       }else{\r\n                                        localStorage.setItem(\"roles\",role_str.toString());\r\n                                       }\r\n                                   \r\n                                    }else{\r\n                                        \r\n                                    \r\n                                        localStorage.roles.setItem(prevroles);\r\n                                    }\r\n\r\n                                  \r\n                                    console.log(role_str);\r\n                                    axios.put(\r\n                                        `http://127.0.0.1:8000/api/profileUpdate/${userId}`,\r\n                                        {\r\n                                            FirstName: all.FirstName,\r\n                                            LastName: all.LastName,\r\n                                            Roles: all.Roles,\r\n                                            Consent: all.Consent,\r\n                                            Organization: all.Organization\r\n                                        },\r\n                                        {\r\n                                            headers: {\r\n                                                \"Content-type\": \"application/json\",\r\n                                            }\r\n                                        }\r\n                                    )\r\n                                        .then(response => {\r\n                                            if (response.status == 201) {\r\n                                                if (response.data[\"deleted\"] == \"deleted\") {\r\n                                                    localStorage.clear();\r\n\r\n                                                    localStorage.removeItem('expiry');\r\n                                                    const date = new Date().setHours(new Date().getHours());\r\n                                                    localStorage.setItem('expiry', date);\r\n\r\n                                                    window.location.replace(\"http://localhost:3000/\");\r\n                                                }\r\n                                                 \r\n                                                if(role_str != \"\" || role_str != null){\r\n                                                    if(localStorage.getItem(\"roles\")){\r\n                                                     localStorage.roles.setItem(role_str.toString());\r\n                                                    }else{\r\n                                                     localStorage.setItem(\"roles\",role_str.toString());\r\n                                                    }\r\n                                                \r\n                                                 }else{\r\n                                                     \r\n                                                 \r\n                                                     localStorage.roles.setItem(prevroles);\r\n                                                 }\r\n                                               \r\n                                                // window.location.replace(\"http://localhost:3000/profile/\");\r\n\r\n                                            }\r\n                                        })\r\n                                        .catch(err => console.warn(err));\r\n                                }}>\r\n                                    Save\r\n                                </Button>\r\n\r\n                                <Modal show={showModal} onHide={handleClose}>\r\n                                    <Modal.Header closeButton>\r\n                                        <Modal.Title>Consent Withdrawal Confirmation</Modal.Title>\r\n                                    </Modal.Header>\r\n                                    <Modal.Body>\r\n                                        <p>Are you sure you want to withdraw your consent?</p>\r\n\r\n                                        If this was a mistake, please change the consent option back to 'Yes, I consent to sharing my data'. <br /><br />\r\n                                        If this was not a mistake, please ensure you have taken the time to download your data before you confirm the withdrawal as your account will be deactivated <b>immediately</b> after you click 'Save'.\r\n                                    </Modal.Body>\r\n                                </Modal>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </section >\r\n        );\r\n    }\r\n    else if (new Date().getTime() > localStorage.getItem('expiry') && !(localStorage.roles)) {\r\n\r\n        return (\r\n            <section>\r\n                <div className=\"flex-container\">\r\n                    <div className=\"text-center\">\r\n                        <h1 className=\"heading1\">\r\n                            <span className=\"fade-in\" id=\"digit1\">4</span>\r\n                            <span className=\"fade-in\" id=\"digit2\">0</span>\r\n                            <span className=\"fade-in\" id=\"digit3\">4</span>\r\n                        </h1>\r\n                        <h3 className=\" heading3 fadeIn\">YOU MUST LOGIN TO VIEW THIS PAGE</h3>\r\n                        <a href='/login'><Button type=\"button\" class='btn btn-primary ' name=\"button\">Login</Button></a>\r\n                    </div>\r\n                </div>\r\n            </section >\r\n        );\r\n    }\r\n}\r\n\r\nexport default Profile;","C:\\Users\\almut\\Desktop\\cston1\\Multiple-days-Non-Profits-and-Health-Wellness-Group-B\\frontend\\src\\pages\\publicSharing.js",["183","184","185","186","187","188"],[],"import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Button from 'react-bootstrap/Button';\r\nimport React, { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './network.css';\r\nimport axios, { all } from 'axios';\r\nvar filter = 'Product';\r\n\r\nfunction PublicSharing() {\r\n    const [getData, setData] = useState([]);\r\n  \r\n\r\n    const fetchData = async () => {\r\n        const response = await fetch(\"http://localhost:8000/api/networkPull/\");\r\n        const data = await response.json();\r\n        return setData(data);\r\n      }\r\n    \r\n      const fetchDataSharing = async () => {\r\n        const response = await fetch(\"http://localhost:8000/api/networkPullSharing/\");\r\n        const data = await response.json();\r\n        return setData(data);\r\n      }\r\n    \r\n      const fetchDataReceiving = async () => {\r\n        const response = await fetch(\"http://localhost:8000/api/networkPullReceiving/\");\r\n        const data = await response.json();\r\n        return setData(data);\r\n      }\r\n    \r\n    \r\n      useEffect(() => {\r\n        fetchData();\r\n      }, [])\r\n    \r\n      const [posts, setPosts] = useState({\r\n        product: '',\r\n        Type: '',\r\n        Units: '',\r\n        Quantity: '',\r\n        Description: '',\r\n        Email: ''\r\n      });\r\n    \r\n      const [showModal, setShowModal] = useState(false);\r\n      posts.Quantity = parseInt(posts.Quantity)\r\n      const handleClose = () => setShowModal(false);\r\n      const handleShow = () => setShowModal(true);\r\n    \r\n    \r\n     return (\r\n        <>\r\n    \r\n        <div className=\"container-lg col-md-auto\">\r\n            <div className=\"container-fluid\">\r\n              <div className=\"input-group\">\r\n                <input type=\"search\" className=\"form-control rounded\" placeholder=\"Search\" aria-label=\"Search\"\r\n                  onChange={(event) => {\r\n                    axios.post(\r\n                      \"http://127.0.0.1:8000/api/networkSearch/\",\r\n                      {\r\n                        filter: filter,\r\n                        input: event.target.value\r\n                      },\r\n                      {\r\n                        headers: {\r\n                          \"Content-type\": \"application/json\",\r\n                        }\r\n                      }\r\n                    )\r\n                      .then(response => {\r\n                        if (response.status == 200) {\r\n                          setData(response.data);\r\n                          console.log(response.data)\r\n                        }\r\n                      })\r\n                      .catch(err => console.warn(err));\r\n                  }}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"select\">\r\n                <select name=\"format\" className=\"form-select\"\r\n                  onChange={(event) => {\r\n                    filter = event.target.value;\r\n                  }}\r\n                >\r\n                  <option value=\"Email\" >Filter by: Email</option>\r\n                  <option value=\"Product\" selected>Filter by: Product</option>\r\n                </select>\r\n              </div>\r\n\r\n              <div className=\"select\">\r\n                <select name=\"format\" className=\"form-select\">\r\n                  <option selected disabled>Sort By: Latest Activity</option>\r\n                  <option value=\"pdf\">Latest activity</option>\r\n                  <option value=\"txt\">Date Created</option>\r\n                  <option value=\"epub\">Top: Past day</option>\r\n                  <option value=\"fb2\">Top: Past week</option>\r\n                  <option value=\"mobi\">Top: Past month</option>\r\n                </select>\r\n              </div>\r\n\r\n              <div>\r\n                <Button type=\"Button\" className=\"create_btn btn btn-success\" onClick={handleShow}>Create Post</Button>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"container-md\">\r\n              <div className=\"tab container-sm\">\r\n                <Button className=\"tablinks btn btn-light\" onClick={(e) => { { fetchData() } }} id=\"defaultOpen\">\r\n                  💬 All Posts</Button><br />\r\n                <Button className=\"tablinks btn btn-light\" onClick={(e) => { { fetchDataSharing() } }}  >📣 Sharing</Button><br />\r\n                <Button className=\"tablinks btn btn-light\" onClick={(e) => { { fetchDataReceiving() } }}>💬 Receiving</Button><br />\r\n              </div>\r\n\r\n              <div id=\"disc\">\r\n                {getData && getData.length > 0 && getData.map((userObj) => (\r\n                  <div class='card'>\r\n                    <h5 class='card-header m-0'>\r\n                      <span>{userObj.product} - {userObj.Quantity} {userObj.Units}</span>\r\n                    </h5>\r\n                   \r\n                    <div class='card-body'>\r\n                      <h6 class='card-text'>\r\n                        {userObj.Description}\r\n                      </h6>\r\n                      {/* <a href='\"+ url_mask + \"' id='postbutton' class='btn btn-outline-success'>Comment</a>*/}\r\n                      <p><small>Posted By: <br /> Contact: {userObj.Email}</small></p>\r\n                      <p class='text-success'> {userObj.Type} </p>\r\n\r\n                    </div>\r\n                  </div>\r\n                )).reverse()}\r\n              </div>\r\n            </div>\r\n\r\n            <Modal show={showModal} onHide={handleClose}>\r\n              <Modal.Header closeButton>\r\n                <Modal.Title>Create Post</Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                <div>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"product\">Product</label>\r\n                    <input type=\"text\" className=\"form-control\" id=\"product\" placeholder=\"Enter product name\"\r\n                      onChange={(event) => {\r\n                        setPosts({ ...posts, product: event.target.value })\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input type=\"text\" className=\"form-control\" id=\"email\" placeholder=\"Enter your Email\"\r\n                      onChange={(event) => {\r\n                        setPosts({ ...posts, Email: event.target.value })\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"quantity\">Quantity</label>\r\n                    <input type=\"number\" step=\"any\" className=\"form-control\" id=\"quantity\" placeholder=\"Enter quantity\"\r\n                      onChange={(event) => {\r\n                        setPosts({ ...posts, Quantity: event.target.value })\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"units\">Units</label>\r\n                    <select className=\"form-control\" id=\"units\"\r\n                      onChange={(event) => {\r\n                        setPosts({ ...posts, Units: event.target.value })\r\n                      }}\r\n                    >\r\n                      <option>Choose an option</option>\r\n                      <option>lbs</option>\r\n                      <option>kgs</option>\r\n                    </select>\r\n                  </div>\r\n                  <br />\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"desc\">Description</label>\r\n                    <textarea className=\"form-control\" id=\"desc\" rows=\"3\"\r\n                      onChange={(event) => {\r\n                        setPosts({ ...posts, Description: event.target.value })\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"type\">Type</label>\r\n                    <select className=\"form-control\" id=\"type\"\r\n                      onChange={(event) => {\r\n                        setPosts({ ...posts, Type: event.target.value })\r\n                      }}\r\n                    >\r\n                      <option>Choose an option</option>\r\n                      <option>Sharing</option>\r\n                      <option>Receiving</option>\r\n                    </select>\r\n                  </div>\r\n\r\n                  <Button variant=\"primary\" type=\"submit\"\r\n                    onClick={(e) => {\r\n                      axios.post(\r\n                        \"http://127.0.0.1:8000/api/networkInsert/\",\r\n                        {\r\n                          product: posts.product,\r\n                          Type: posts.Type,\r\n                          Quantity: posts.Quantity,\r\n                          Units: posts.Units,\r\n                          Description: posts.Description,\r\n                          Email: posts.Email,\r\n                        },\r\n                        {\r\n                          headers: {\r\n                            \"Content-type\": \"application/json\",\r\n                          }\r\n                        }\r\n                      )\r\n                        .then(response => {\r\n                          if (response.status == 201) {\r\n                            handleClose(e); //Close modal\r\n                            //window.alert(\"Your form has been submitted succesfully\")\r\n                            fetchData();\r\n                          }\r\n                        })\r\n                        .catch(err => console.warn(err));\r\n                    }}\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </div>\r\n              </Modal.Body>\r\n            </Modal>\r\n          </div>\r\n        </>\r\n     );\r\n}\r\n\r\nexport default PublicSharing;","C:\\Users\\almut\\Desktop\\cston1\\Multiple-days-Non-Profits-and-Health-Wellness-Group-B\\frontend\\src\\pages\\directory.js",["189","190"],[],"import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport directoryCSS from './directory.module.css';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nfunction Directory() {\r\n    return (\r\n\r\n        <section>\r\n            <div className='container p-2'>\r\n                <div className='card'>\r\n                    <div className='card-body'>\r\n                        <h4 className='card-title'>Directory</h4>\r\n\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Directory;","C:\\Users\\almut\\Desktop\\cston1\\Multiple-days-Non-Profits-and-Health-Wellness-Group-B\\frontend\\src\\pages\\network.js",["191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211"],[],"C:\\Users\\almut\\Desktop\\cston1\\Multiple-days-Non-Profits-and-Health-Wellness-Group-B\\frontend\\src\\pages\\admin.js",["212","213","214"],[],"import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './admin.css'\r\nimport axios from 'axios'\r\nimport React, { useReducer } from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport Button from \"react-bootstrap/Button\";\r\nimport fourcss from './fourcss.css';\r\n\r\nlet temp = [];\r\nlet temp_warehouse = [];\r\nlet temp_admin = [];\r\nlet temp_volunteer = [];\r\nlet temp_Sponsor = [];\r\nlet temp_Expert = [];\r\n\r\nfunction Admin() {\r\n\r\n    const [user, setUser] = useState([]);\r\n    const [approvedUser, setApprovedUser] = useState([]);\r\n    const [declinedUser, setDeclinedUser] = useState([]);\r\n\r\n\r\n    const fetchData = async () => {\r\n        const response = await fetch(\"http://localhost:8000/api/adminPull/\");\r\n        const data = await response.json();\r\n        return setUser(data);\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, [])\r\n\r\n    const fetchApprovedData = async () => {\r\n        const response = await fetch(\"http://localhost:8000/api/adminPullApprove/\");\r\n        const data = await response.json();\r\n        return setApprovedUser(data);\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchApprovedData();\r\n    }, [])\r\n\r\n    const fetchDeclinedData = async () => {\r\n        const response = await fetch(\"http://localhost:8000/api/adminPullDecline/\");\r\n        const data = await response.json();\r\n        return setDeclinedUser(data);\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchDeclinedData();\r\n    }, [])\r\n\r\n\r\n\r\n\r\n\r\n    const [CEO, setCEO] = useState({\r\n\r\n        role: 'User non-profit managers/CEO',\r\n        metrics: [],\r\n        network: '',\r\n        readwrite: ''\r\n\r\n    });\r\n    const [warehouse, setwarehouse] = useState({\r\n\r\n        role: 'User non-profit warehouse boss',\r\n        metrics: [],\r\n        network: '',\r\n        readwrite: ''\r\n\r\n    });\r\n    const [admin, setAdmin] = useState({\r\n\r\n        role: 'Admin',\r\n        metrics: [],\r\n        network: '',\r\n        readwrite: ''\r\n\r\n    });\r\n\r\n    const [volunteer, setVolunteer] = useState({\r\n\r\n        role: 'User non-profit volunteer',\r\n        metrics: [],\r\n        network: '',\r\n        readwrite: ''\r\n\r\n    });\r\n\r\n\r\n    const [Sponsors, setSponsors] = useState({\r\n\r\n        role: 'Sponsors',\r\n        metrics: [],\r\n        network: '',\r\n        readwrite: ''\r\n\r\n    });\r\n\r\n    const [Experts, setExperts] = useState({\r\n\r\n        role: 'Experts',\r\n        metrics: [],\r\n        network: '',\r\n        readwrite: ''\r\n\r\n    });\r\n\r\n    CEO.metrics = CEO.metrics.toString();\r\n    warehouse.metrics = warehouse.metrics.toString();\r\n    admin.metrics = admin.metrics.toString();\r\n    volunteer.metrics = volunteer.metrics.toString();\r\n    Sponsors.metrics = Sponsors.metrics.toString();\r\n    Experts.metrics = Experts.metrics.toString();\r\n\r\n    if (new Date().getTime() > localStorage.getItem('expiry')  && localStorage.roles){\r\n        const response = window.confirm(\"Your session has expired. Do you still want to be logged in?\");\r\n      \r\n        if(response){\r\n          localStorage.removeItem('expiry');\r\n          const date = new Date().setHours(new Date().getHours()+1);\r\n          localStorage.setItem('expiry',date) \r\n        }\r\n      }\r\n\r\n\r\n\r\n    {\r\n        if (new Date().getTime() < localStorage.getItem('expiry')  && localStorage.roles) {\r\n\r\n\r\n            return (\r\n\r\n                <><div id=\"role-settings-container\" className=\"container-lg col-md-auto\">\r\n\r\n                    <h3 className=\"h3\">Data Permissions:</h3>\r\n                    <h5 className=\"h5\">Inside Organization: </h5>\r\n                    <table className=\"table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th scope=\"col\">#</th>\r\n                                <th scope=\"col\">Role</th>\r\n                                <th scope=\"col\">Metric Access</th>\r\n                                <th scope=\"col\">Network Access</th>\r\n                                <th scope=\"col\">Tracker Data Access</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n\r\n                            <tr>\r\n                                <th scope=\"row\">1</th>\r\n                                <td> User non-profit managers/CEO</td>\r\n                                <td>\r\n                                    <div\r\n\r\n                                        onChange={(e) => {\r\n                                            if (e.target.checked) {\r\n                                                temp.push(e.target.value);\r\n                                                setCEO({ ...CEO, metrics: temp });\r\n\r\n                                            } else {\r\n                                                temp.pop(e.target.value);\r\n                                                setCEO({ ...CEO, metrics: temp });\r\n\r\n                                            }\r\n                                        }}\r\n                                    >\r\n                                        <div className=\"form-check\">\r\n                                            <input\r\n\r\n                                                className=\"form-check-input flexCheckDefault\"\r\n                                                type=\"checkbox\"\r\n                                                id=\"flexCheckDefault1\"\r\n                                                name=\"metrics[]\"\r\n                                                value=\"Fresh Produce\"\r\n                                            />\r\n                                            <label className=\"form-check-label\" for=\"flexCheckDefault1\">\r\n                                                Fresh Produce\r\n                                            </label>\r\n                                        </div>\r\n                                        <div className=\"form-check\">\r\n                                            <input\r\n                                                className=\"form-check-input flexCheckDefault\"\r\n                                                type=\"checkbox\"\r\n                                                id=\"flexCheckDefault2\"\r\n                                                name=\"metrics[]\"\r\n                                                value=\"metric#2\"\r\n\r\n                                            />\r\n                                            <label className=\"form-check-label\" for=\"flexCheckDefault2\">\r\n                                                Metric #2\r\n                                            </label>\r\n                                        </div>\r\n                                        <div className=\"form-check\">\r\n                                            <input\r\n                                                className=\"form-check-input flexCheckDefault\"\r\n                                                type=\"checkbox\"\r\n                                                id=\"flexCheckDefault3\"\r\n                                                name=\"metrics[]\"\r\n                                                value=\"Metric#3\"\r\n\r\n                                            />\r\n                                            <label className=\"form-check-label\" for=\"flexCheckDefault3\">\r\n                                                Metric #3\r\n                                            </label>\r\n                                        </div>\r\n                                        <div className=\"form-check\">\r\n                                            <input\r\n                                                className=\"form-check-input flexCheckDefault\"\r\n                                                type=\"checkbox\"\r\n                                                id=\"flexCheckDefault4\"\r\n                                                name=\"metrics[]\"\r\n                                                value=\"Metric#4\"\r\n\r\n                                            />\r\n                                            <label className=\"form-check-label\" for=\"flexCheckDefault4\">\r\n                                                Metric #4\r\n                                            </label>\r\n                                        </div>\r\n                                        <div className=\"form-check\">\r\n                                            <input\r\n                                                className=\"form-check-input flexCheckDefault\"\r\n                                                type=\"checkbox\"\r\n                                                id=\"flexCheckDefault5\"\r\n                                                name=\"metrics[]\"\r\n                                                value=\"Metric#5\"\r\n\r\n                                            />\r\n                                            <label className=\"form-check-label\" for=\"flexCheckDefault5\">\r\n                                                Metric #5\r\n                                            </label>\r\n                                        </div>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <div className=\"form-check \">\r\n                                        <div className=\"col-md-auto\">\r\n                                            <select className=\"form-select\" id=\"network\" name=\"network-CEO\" onChange={(event) =>\r\n                                                setCEO({ ...CEO, network: event.target.value })\r\n\r\n                                            }>\r\n                                                <option value=\"allow\">Allow</option>\r\n                                                <option value=\"dont allow\">Dont Allow</option>\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <div className=\"form-check\">\r\n                                        <div className=\"col-md-auto\">\r\n                                            <select className=\"form-select\" id=\"readwrite\" name=\"readwrite-CEO\" onChange={(event) =>\r\n                                                setCEO({ ...CEO, readwrite: event.target.value })\r\n\r\n                                            }>\r\n                                                <option value=\"read\">Read</option>\r\n                                                <option value=\"write\">Write</option>\r\n                                                <option value=\"both\">Both</option>\r\n                                                <option value=\"none\">None</option>\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n\r\n                            <tr>\r\n                                <th scope=\"row\">2</th>\r\n                                <td>User non-profit warehouse boss</td>\r\n                                <td>\r\n                                    <div\r\n\r\n                                        onChange={(e) => {\r\n                                            if (e.target.checked) {\r\n                                                temp_warehouse.push(e.target.value);\r\n                                                setwarehouse({ ...warehouse, metrics: temp_warehouse });\r\n\r\n\r\n                                            } else {\r\n                                                temp_warehouse.pop(e.target.value);\r\n                                                setwarehouse({ ...warehouse, metrics: temp_warehouse });\r\n\r\n                                            }\r\n\r\n\r\n\r\n                                        }}\r\n\r\n\r\n                                    >\r\n                                        <div className=\"form-check\">\r\n                                            <input\r\n\r\n                                                className=\"form-check-input flexCheckDefault\"\r\n                                                type=\"checkbox\"\r\n                                                id=\"flexCheckDefault1\"\r\n                                                name=\"metrics[]\"\r\n                                                value=\"Fresh Produce\"\r\n                                            />\r\n                                            <label className=\"form-check-label\" for=\"flexCheckDefault1\">\r\n                                                Fresh Produce\r\n                                            </label>\r\n                                        </div>\r\n                                        <div className=\"form-check\">\r\n                                            <input\r\n                                                className=\"form-check-input flexCheckDefault\"\r\n                                                type=\"checkbox\"\r\n                                                id=\"flexCheckDefault2\"\r\n                                                name=\"metrics[]\"\r\n                                                value=\"metric#2\"\r\n\r\n                                            />\r\n                                            <label className=\"form-check-label\" for=\"flexCheckDefault2\">\r\n                                                Metric #2\r\n                                            </label>\r\n                                        </div>\r\n                                        <div className=\"form-check\">\r\n                                            <input\r\n                                                className=\"form-check-input flexCheckDefault\"\r\n                                                type=\"checkbox\"\r\n                                                id=\"flexCheckDefault3\"\r\n                                                name=\"metrics[]\"\r\n                                                value=\"Metric#3\"\r\n\r\n                                            />\r\n                                            <label className=\"form-check-label\" for=\"flexCheckDefault3\">\r\n                                                Metric #3\r\n                                            </label>\r\n                                        </div>\r\n                                        <div className=\"form-check\">\r\n                                            <input\r\n                                                className=\"form-check-input flexCheckDefault\"\r\n                                                type=\"checkbox\"\r\n                                                id=\"flexCheckDefault4\"\r\n                                                name=\"metrics[]\"\r\n                                                value=\"Metric#4\"\r\n\r\n                                            />\r\n                                            <label className=\"form-check-label\" for=\"flexCheckDefault4\">\r\n                                                Metric #4\r\n                                            </label>\r\n                                        </div>\r\n                                        <div className=\"form-check\">\r\n                                            <input\r\n                                                className=\"form-check-input flexCheckDefault\"\r\n                                                type=\"checkbox\"\r\n                                                id=\"flexCheckDefault5\"\r\n                                                name=\"metrics[]\"\r\n                                                value=\"Metric#5\"\r\n\r\n                                            />\r\n                                            <label className=\"form-check-label\" for=\"flexCheckDefault5\">\r\n                                                Metric #5\r\n                                            </label>\r\n                                        </div>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <div className=\"form-check \">\r\n                                        <div className=\"col-md-auto\">\r\n                                            <select className=\"form-select\" id=\"network\" name=\"network-warehouse\"\r\n\r\n                                                onChange={(event) =>\r\n                                                    setwarehouse({ ...warehouse, network: event.target.value })\r\n\r\n                                                }\r\n\r\n                                            >\r\n                                                <option value=\"allow\">Allow</option>\r\n                                                <option value=\"dont allow\">Dont Allow</option>\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <div className=\"form-check\">\r\n                                        <div className=\"col-md-auto\">\r\n                                            <select className=\"form-select\" id=\"readwrite\" name=\"readwrite-warehouse\"\r\n                                                onChange={(event) =>\r\n                                                    setwarehouse({ ...warehouse, network: event.target.value })\r\n\r\n                                                }\r\n                                            >\r\n                                                <option value=\"read\">Read</option>\r\n                                                <option value=\"write\">Write</option>\r\n                                                <option value=\"both\">Both</option>\r\n                                                <option value=\"none\">None</option>\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n\r\n                            <tr>\r\n                                <th scope=\"row\">3</th>\r\n                                <td>Admin</td>\r\n                                <td>\r\n                                    <div\r\n\r\n                                        onChange={(e) => {\r\n                                            if (e.target.checked) {\r\n                                                temp_admin.push(e.target.value);\r\n                                                setAdmin({ ...admin, metrics: temp_admin });\r\n\r\n\r\n                                            } else {\r\n                                                temp_admin.pop(e.target.value);\r\n                                                setAdmin({ ...admin, metrics: temp_admin });\r\n\r\n                                            }\r\n\r\n\r\n\r\n                                        }}\r\n\r\n\r\n                                    >\r\n                                        <div className=\"form-check\">\r\n                                            <input\r\n\r\n                                                className=\"form-check-input flexCheckDefault\"\r\n                                                type=\"checkbox\"\r\n                                                id=\"flexCheckDefault1\"\r\n                                                name=\"metrics[]\"\r\n                                                value=\"Fresh Produce\"\r\n                                            />\r\n                                            <label className=\"form-check-label\" for=\"flexCheckDefault1\">\r\n                                                Fresh Produce\r\n                                            </label>\r\n                                        </div>\r\n                                        <div className=\"form-check\">\r\n                                            <input\r\n                                                className=\"form-check-input flexCheckDefault\"\r\n                                                type=\"checkbox\"\r\n                                                id=\"flexCheckDefault2\"\r\n                                                name=\"metrics[]\"\r\n                                                value=\"metric#2\"\r\n\r\n                                            />\r\n                                            <label className=\"form-check-label\" for=\"flexCheckDefault2\">\r\n                                                Metric #2\r\n                                            </label>\r\n                                        </div>\r\n                                        <div className=\"form-check\">\r\n                                            <input\r\n                                                className=\"form-check-input flexCheckDefault\"\r\n                                                type=\"checkbox\"\r\n                                                id=\"flexCheckDefault3\"\r\n                                                name=\"metrics[]\"\r\n                                                value=\"Metric#3\"\r\n\r\n                                            />\r\n                                            <label className=\"form-check-label\" for=\"flexCheckDefault3\">\r\n                                                Metric #3\r\n                                            </label>\r\n                                        </div>\r\n                                        <div className=\"form-check\">\r\n                                            <input\r\n                                                className=\"form-check-input flexCheckDefault\"\r\n                                                type=\"checkbox\"\r\n                                                id=\"flexCheckDefault4\"\r\n                                                name=\"metrics[]\"\r\n                                                value=\"Metric#4\"\r\n\r\n                                            />\r\n                                            <label className=\"form-check-label\" for=\"flexCheckDefault4\">\r\n                                                Metric #4\r\n                                            </label>\r\n                                        </div>\r\n                                        <div className=\"form-check\">\r\n                                            <input\r\n                                                className=\"form-check-input flexCheckDefault\"\r\n                                                type=\"checkbox\"\r\n                                                id=\"flexCheckDefault5\"\r\n                                                name=\"metrics[]\"\r\n                                                value=\"Metric#5\"\r\n\r\n                                            />\r\n                                            <label className=\"form-check-label\" for=\"flexCheckDefault5\">\r\n                                                Metric #5\r\n                                            </label>\r\n                                        </div>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <div className=\"form-check \">\r\n                                        <div className=\"col-md-auto\">\r\n                                            <select className=\"form-select\" id=\"network\" name=\"network-Admin\"\r\n\r\n                                                onChange={(event) =>\r\n                                                    setAdmin({ ...admin, network: event.target.value })\r\n\r\n                                                }\r\n\r\n                                            >\r\n                                                <option value=\"allow\">Allow</option>\r\n                                                <option value=\"dont allow\">Dont Allow</option>\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <div className=\"form-check\">\r\n                                        <div className=\"col-md-auto\">\r\n                                            <select className=\"form-select\" id=\"readwrite\" name=\"readwrite-Admin\"\r\n\r\n                                                onChange={(event) =>\r\n                                                    setAdmin({ ...admin, readwrite: event.target.value })\r\n\r\n                                                }\r\n                                            >\r\n                                                <option value=\"read\">Read</option>\r\n                                                <option value=\"write\">Write</option>\r\n                                                <option value=\"both\">Both</option>\r\n                                                <option value=\"none\">None</option>\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n\r\n                            <tr>\r\n                                <th scope=\"row\">4</th>\r\n                                <td>User non-profit volunteer</td>\r\n                                <td>\r\n\r\n                                    <div\r\n\r\n                                        onChange={(e) => {\r\n                                            if (e.target.checked) {\r\n                                                temp_volunteer.push(e.target.value);\r\n                                                setVolunteer({ ...volunteer, metrics: temp_volunteer });\r\n\r\n\r\n                                            } else {\r\n                                                temp_volunteer.pop(e.target.value);\r\n                                                setVolunteer({ ...volunteer, metrics: temp_volunteer });\r\n\r\n                                            }\r\n                                        }}\r\n                                    >\r\n                                        <div className=\"form-check\">\r\n                                            <input\r\n\r\n                                                className=\"form-check-input flexCheckDefault\"\r\n                                                type=\"checkbox\"\r\n                                                id=\"flexCheckDefault1\"\r\n                                                name=\"metrics[]\"\r\n                                                value=\"Fresh Produce\"\r\n                                            />\r\n                                            <label className=\"form-check-label\" for=\"flexCheckDefault1\">\r\n                                                Fresh Produce\r\n                                            </label>\r\n                                        </div>\r\n                                        <div className=\"form-check\">\r\n                                            <input\r\n                                                className=\"form-check-input flexCheckDefault\"\r\n                                                type=\"checkbox\"\r\n                                                id=\"flexCheckDefault2\"\r\n                                                name=\"metrics[]\"\r\n                                                value=\"metric#2\"\r\n\r\n                                            />\r\n                                            <label className=\"form-check-label\" for=\"flexCheckDefault2\">\r\n                                                Metric #2\r\n                                            </label>\r\n                                        </div>\r\n                                        <div className=\"form-check\">\r\n                                            <input\r\n                                                className=\"form-check-input flexCheckDefault\"\r\n                                                type=\"checkbox\"\r\n                                                id=\"flexCheckDefault3\"\r\n                                                name=\"metrics[]\"\r\n                                                value=\"Metric#3\"\r\n\r\n                                            />\r\n                                            <label className=\"form-check-label\" for=\"flexCheckDefault3\">\r\n                                                Metric #3\r\n                                            </label>\r\n                                        </div>\r\n                                        <div className=\"form-check\">\r\n                                            <input\r\n                                                className=\"form-check-input flexCheckDefault\"\r\n                                                type=\"checkbox\"\r\n                                                id=\"flexCheckDefault4\"\r\n                                                name=\"metrics[]\"\r\n                                                value=\"Metric#4\"\r\n\r\n                                            />\r\n                                            <label className=\"form-check-label\" for=\"flexCheckDefault4\">\r\n                                                Metric #4\r\n                                            </label>\r\n                                        </div>\r\n                                        <div className=\"form-check\">\r\n                                            <input\r\n                                                className=\"form-check-input flexCheckDefault\"\r\n                                                type=\"checkbox\"\r\n                                                id=\"flexCheckDefault5\"\r\n                                                name=\"metrics[]\"\r\n                                                value=\"Metric#5\"\r\n\r\n                                            />\r\n                                            <label className=\"form-check-label\" for=\"flexCheckDefault5\">\r\n                                                Metric #5\r\n                                            </label>\r\n                                        </div>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <div className=\"form-check \">\r\n                                        <div className=\"col-md-auto\">\r\n                                            <select className=\"form-select\" id=\"network\" name=\"network-CEO\" onChange={(event) =>\r\n                                                setVolunteer({ ...volunteer, network: event.target.value })\r\n                                            }>\r\n                                                <option value=\"allow\">Allow</option>\r\n                                                <option value=\"dont allow\">Dont Allow</option>\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <div className=\"form-check\">\r\n                                        <div className=\"col-md-auto\">\r\n                                            <select className=\"form-select\" id=\"readwrite\" name=\"readwrite-CEO\" onChange={(event) =>\r\n                                                setVolunteer({ ...volunteer, readwrite: event.target.value })\r\n\r\n                                            }>\r\n                                                <option value=\"read\">Read</option>\r\n                                                <option value=\"write\">Write</option>\r\n                                                <option value=\"both\">Both</option>\r\n                                                <option value=\"none\">None</option>\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </td>\r\n\r\n\r\n\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n\r\n                    <h5 className=\"h5\">Outside Organization: </h5>\r\n                    <table className=\"table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th scope=\"col\">#</th>\r\n                                <th scope=\"col\">Role</th>\r\n                                <th scope=\"col\">Metric Access</th>\r\n                                <th scope=\"col\">Network Access</th>\r\n                                <th scope=\"col\">Read/Write Access</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                                <th scope=\"row\">1</th>\r\n                                <td>Sponsors</td>\r\n                                <td>\r\n                                    <div\r\n\r\n                                        onChange={(e) => {\r\n                                            if (e.target.checked) {\r\n                                                temp_Sponsor.push(e.target.value);\r\n                                                setSponsors({ ...Sponsors, metrics: temp_Sponsor });\r\n\r\n\r\n                                            } else {\r\n                                                temp_Sponsor.pop(e.target.value);\r\n                                                setSponsors({ ...Sponsors, metrics: temp_Sponsor });\r\n\r\n                                            }\r\n\r\n                                        }}>\r\n                                        <div className=\"form-check\">\r\n                                            <input\r\n\r\n                                                className=\"form-check-input flexCheckDefault\"\r\n                                                type=\"checkbox\"\r\n                                                id=\"flexCheckDefault1\"\r\n                                                name=\"metrics[]\"\r\n                                                value=\"Fresh Produce\"\r\n                                            />\r\n                                            <label className=\"form-check-label\" for=\"flexCheckDefault1\">\r\n                                                Fresh Produce\r\n                                            </label>\r\n                                        </div>\r\n                                        <div className=\"form-check\">\r\n                                            <input\r\n                                                className=\"form-check-input flexCheckDefault\"\r\n                                                type=\"checkbox\"\r\n                                                id=\"flexCheckDefault2\"\r\n                                                name=\"metrics[]\"\r\n                                                value=\"metric#2\"\r\n\r\n                                            />\r\n                                            <label className=\"form-check-label\" for=\"flexCheckDefault2\">\r\n                                                Metric #2\r\n                                            </label>\r\n                                        </div>\r\n                                        <div className=\"form-check\">\r\n                                            <input\r\n                                                className=\"form-check-input flexCheckDefault\"\r\n                                                type=\"checkbox\"\r\n                                                id=\"flexCheckDefault3\"\r\n                                                name=\"metrics[]\"\r\n                                                value=\"Metric#3\"\r\n\r\n                                            />\r\n                                            <label className=\"form-check-label\" for=\"flexCheckDefault3\">\r\n                                                Metric #3\r\n                                            </label>\r\n                                        </div>\r\n                                        <div className=\"form-check\">\r\n                                            <input\r\n                                                className=\"form-check-input flexCheckDefault\"\r\n                                                type=\"checkbox\"\r\n                                                id=\"flexCheckDefault4\"\r\n                                                name=\"metrics[]\"\r\n                                                value=\"Metric#4\"\r\n\r\n                                            />\r\n                                            <label className=\"form-check-label\" for=\"flexCheckDefault4\">\r\n                                                Metric #4\r\n                                            </label>\r\n                                        </div>\r\n                                        <div className=\"form-check\">\r\n                                            <input\r\n                                                className=\"form-check-input flexCheckDefault\"\r\n                                                type=\"checkbox\"\r\n                                                id=\"flexCheckDefault5\"\r\n                                                name=\"metrics[]\"\r\n                                                value=\"Metric#5\"\r\n\r\n                                            />\r\n                                            <label className=\"form-check-label\" for=\"flexCheckDefault5\">\r\n                                                Metric #5\r\n                                            </label>\r\n                                        </div>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <div className=\"form-check \">\r\n                                        <div className=\"col-md-auto\">\r\n                                            <select className=\"form-select\" id=\"network\" name=\"network-Sponsors\" onChange={(event) =>\r\n                                                setSponsors({ ...Sponsors, network: event.target.value })\r\n\r\n                                            }>\r\n                                                <option value=\"allow\">Allow</option>\r\n                                                <option value=\"dont allow\">Dont Allow</option>\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <div className=\"form-check\">\r\n                                        <div className=\"col-md-auto\">\r\n                                            <select className=\"form-select\" id=\"readwrite\" name=\"readwrite-Sponsors\" onChange={(event) =>\r\n                                                setSponsors({ ...Sponsors, readwrite: event.target.value })\r\n\r\n                                            }>\r\n                                                <option value=\"read\">Read</option>\r\n                                                <option value=\"write\">Write</option>\r\n                                                <option value=\"both\">Both</option>\r\n                                                <option value=\"none\">None</option>\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n\r\n                            <tr>\r\n                                <th scope=\"row\">2</th>\r\n                                <td>Experts</td>\r\n                                <td>\r\n                                    <div\r\n\r\n                                        onChange={(e) => {\r\n                                            if (e.target.checked) {\r\n                                                temp_Expert.push(e.target.value);\r\n                                                setExperts({ ...Experts, metrics: temp_Expert });\r\n\r\n\r\n                                            } else {\r\n                                                temp_Expert.pop(e.target.value);\r\n                                                setExperts({ ...Experts, metrics: temp_Expert });\r\n\r\n                                            }\r\n\r\n                                        }}>\r\n                                        <div className=\"form-check\">\r\n                                            <input\r\n\r\n                                                className=\"form-check-input flexCheckDefault\"\r\n                                                type=\"checkbox\"\r\n                                                id=\"flexCheckDefault1\"\r\n                                                name=\"metrics[]\"\r\n                                                value=\"Fresh Produce\"\r\n                                            />\r\n                                            <label className=\"form-check-label\" for=\"flexCheckDefault1\">\r\n                                                Fresh Produce\r\n                                            </label>\r\n                                        </div>\r\n                                        <div className=\"form-check\">\r\n                                            <input\r\n                                                className=\"form-check-input flexCheckDefault\"\r\n                                                type=\"checkbox\"\r\n                                                id=\"flexCheckDefault2\"\r\n                                                name=\"metrics[]\"\r\n                                                value=\"metric#2\"\r\n\r\n                                            />\r\n                                            <label className=\"form-check-label\" for=\"flexCheckDefault2\">\r\n                                                Metric #2\r\n                                            </label>\r\n                                        </div>\r\n                                        <div className=\"form-check\">\r\n                                            <input\r\n                                                className=\"form-check-input flexCheckDefault\"\r\n                                                type=\"checkbox\"\r\n                                                id=\"flexCheckDefault3\"\r\n                                                name=\"metrics[]\"\r\n                                                value=\"Metric#3\"\r\n\r\n                                            />\r\n                                            <label className=\"form-check-label\" for=\"flexCheckDefault3\">\r\n                                                Metric #3\r\n                                            </label>\r\n                                        </div>\r\n                                        <div className=\"form-check\">\r\n                                            <input\r\n                                                className=\"form-check-input flexCheckDefault\"\r\n                                                type=\"checkbox\"\r\n                                                id=\"flexCheckDefault4\"\r\n                                                name=\"metrics[]\"\r\n                                                value=\"Metric#4\"\r\n\r\n                                            />\r\n                                            <label className=\"form-check-label\" for=\"flexCheckDefault4\">\r\n                                                Metric #4\r\n                                            </label>\r\n                                        </div>\r\n                                        <div className=\"form-check\">\r\n                                            <input\r\n                                                className=\"form-check-input flexCheckDefault\"\r\n                                                type=\"checkbox\"\r\n                                                id=\"flexCheckDefault5\"\r\n                                                name=\"metrics[]\"\r\n                                                value=\"Metric#5\"\r\n\r\n                                            />\r\n                                            <label className=\"form-check-label\" for=\"flexCheckDefault5\">\r\n                                                Metric #5\r\n                                            </label>\r\n                                        </div>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <div className=\"form-check \">\r\n                                        <div className=\"col-md-auto\">\r\n                                            <select className=\"form-select\" id=\"network\" name=\"network-Experts\" onChange={(event) =>\r\n                                                setExperts({ ...Experts, network: event.target.value })\r\n\r\n                                            }>\r\n                                                <option value=\"allow\">Allow</option>\r\n                                                <option value=\"dont allow\">Dont Allow</option>\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <div className=\"form-check\">\r\n                                        <div className=\"col-md-auto\">\r\n                                            <select className=\"form-select\" id=\"readwrite\" name=\"readwrite-Experts\" onChange={(event) =>\r\n                                                setExperts({ ...Experts, readwrite: event.target.value })\r\n\r\n                                            }>\r\n                                                <option value=\"read\">Read</option>\r\n                                                <option value=\"write\">Write</option>\r\n                                                <option value=\"both\">Both</option>\r\n                                                <option value=\"none\">None</option>\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                    <button type=\"submit\" for=\"perms\" id='sub' className=\"btn btn-outline-success\"\r\n\r\n                        onClick={(e) => {\r\n\r\n                            axios.post(\r\n                                \"http://127.0.0.1:8000/api/adminInsert/\",\r\n\r\n                                [\r\n                                    {\r\n                                        role: CEO.role,\r\n                                        metrics: CEO.metrics,\r\n                                        network: CEO.network,\r\n                                        readwrite: CEO.readwrite\r\n                                    },\r\n                                    {\r\n                                        role: warehouse.role,\r\n                                        metrics: warehouse.metrics,\r\n                                        network: warehouse.network,\r\n                                        readwrite: warehouse.readwrite\r\n                                    },\r\n                                    {\r\n                                        role: admin.role,\r\n                                        metrics: admin.metrics,\r\n                                        network: admin.network,\r\n                                        readwrite: admin.readwrite\r\n                                    },\r\n                                    {\r\n                                        role: volunteer.role,\r\n                                        metrics: volunteer.metrics,\r\n                                        network: volunteer.network,\r\n                                        readwrite: volunteer.readwrite\r\n                                    },\r\n                                    {\r\n                                        role: Sponsors.role,\r\n                                        metrics: Sponsors.metrics,\r\n                                        network: Sponsors.network,\r\n                                        readwrite: Sponsors.readwrite\r\n                                    },\r\n                                    {\r\n                                        role: Experts.role,\r\n                                        metrics: Experts.metrics,\r\n                                        network: Experts.network,\r\n                                        readwrite: Experts.readwrite\r\n                                    }\r\n                                ],\r\n                                {\r\n                                    headers: {\r\n                                        \"Content-type\": \"application/json\",\r\n                                    }\r\n                                }\r\n\r\n                            )\r\n                        }}\r\n                    >Save</button>\r\n\r\n                </div>\r\n                    <div id=\"role-settings-container\" className=\"container-lg col-md-auto\">\r\n                        <h3 className=\"h3\"> Pending Accounts:</h3>\r\n                        <table className=\"table\">\r\n                            <thead>\r\n                                <tr>\r\n\r\n                                    <th scope=\"col\">Name</th>\r\n                                    <th scope=\"col\">Email</th>\r\n                                    <th scope=\"col\">Roles</th>\r\n                                    <th scope=\"col\">Agree to Share Data</th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n\r\n\r\n                                {user && user.length > 0 && user.map((userObj, index) => (\r\n\r\n                                    <tr>\r\n\r\n                                        <td>{userObj.FirstName}  {userObj.LastName} </td>\r\n                                        <td>{userObj.Email}</td>\r\n                                        <td id='roles'>{userObj.Roles}</td>\r\n                                        <td>\r\n                                            <div className=\"form-check \">\r\n                                                <div className=\"col-md-auto\">\r\n                                                    <select className=\"form-select\" id=\"approve_user\" name=\"approve[]\"\r\n\r\n\r\n                                                        onChange={async (e) => {\r\n\r\n                                                            axios.put(\r\n                                                                `http://127.0.0.1:8000/api/adminUpdate/${userObj.id}`,\r\n\r\n\r\n                                                                { \"Approve\": e.target.value },\r\n                                                                {\r\n                                                                    headers: {\r\n                                                                        \"Content-type\": \"application/json\",\r\n                                                                    }\r\n                                                                }\r\n                                                            )\r\n\r\n                                                            const response = await fetch(\"http://localhost:8000/api/adminPull/\");\r\n                                                            const data = await response.json();\r\n                                                            setUser(data);\r\n                                                            fetchData();\r\n\r\n                                                            const response2 = await fetch(\"http://localhost:8000/api/adminPullApprove/\");\r\n                                                            const data2 = await response2.json();\r\n                                                            setApprovedUser(data2);\r\n                                                            fetchApprovedData();\r\n\r\n                                                            const response3 = await fetch(\"http://localhost:8000/api/adminPullDecline/\");\r\n                                                            const data3 = await response3.json();\r\n                                                            setDeclinedUser(data3);\r\n                                                            fetchDeclinedData();\r\n                                                        }}\r\n                                                    >\r\n                                                        <option name='empty' value=\"empty\">Choose an option</option>\r\n                                                        <option name='approve' value=\"approve\">Accept</option>\r\n                                                        <option name='decline' value=\"decline\">Decline</option>\r\n                                                    </select>\r\n                                                </div>\r\n                                            </div>\r\n                                        </td></tr>\r\n                                ))}\r\n\r\n                            </tbody>\r\n                        </table>\r\n                    </div >\r\n\r\n\r\n\r\n                    <div id=\"role-settings-container\" className=\"container-lg col-md-auto\">\r\n                        <h3 className=\"h3\">Approved Accounts:</h3>\r\n                        <table className=\"table\">\r\n                            <thead>\r\n                                <tr>\r\n\r\n                                    <th scope=\"col\">Name</th>\r\n                                    <th scope=\"col\">Email</th>\r\n                                    <th scope=\"col\">Roles</th>\r\n                                    <th scope='col'></th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n\r\n                                {approvedUser && approvedUser.length > 0 && approvedUser.map((userObj, index) => (\r\n\r\n                                    <tr>\r\n\r\n                                        <td>{userObj.FirstName}  {userObj.LastName} </td>\r\n                                        <td>{userObj.Email}</td>\r\n                                        <td id='roles'>{userObj.Roles}</td>\r\n                                        <td><Button className='btn btn-outline-success' variant='btn-outline-sucess' \r\n\r\n                                         onClick={async (e) => {\r\n\r\n                                    axios.put(\r\n                                        `http://127.0.0.1:8000/api/adminUpdate/${userObj.id}`,\r\n\r\n\r\n                                        { \"Approve\": null },\r\n                                        {\r\n                                            headers: {\r\n                                                \"Content-type\": \"application/json\",\r\n                                            }\r\n                                        }\r\n                                    )\r\n\r\n                                    const response = await fetch(\"http://localhost:8000/api/adminPull/\");\r\n                                    const data = await response.json();\r\n                                    setUser(data);\r\n                                    fetchData();\r\n\r\n                                    const response2 = await fetch(\"http://localhost:8000/api/adminPullApprove/\");\r\n                                    const data2 = await response2.json();\r\n                                    setApprovedUser(data2);\r\n                                    fetchApprovedData();\r\n\r\n                                    const response3 = await fetch(\"http://localhost:8000/api/adminPullDecline/\");\r\n                                    const data3 = await response3.json();\r\n                                    setDeclinedUser(data3);\r\n                                    fetchDeclinedData();\r\n                                }}\r\n                                        \r\n                                        \r\n                                        \r\n                                        > Revert </Button></td>\r\n                                    </tr>\r\n                                ))}\r\n\r\n                            </tbody>\r\n                        </table>\r\n                    </div >\r\n\r\n\r\n                    <div id=\"role-settings-container\" className=\"container-lg col-md-auto\">\r\n                        <h3 className=\"h3\">Declined Accounts:</h3>\r\n                        <table className=\"table\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th scope=\"col\">Name</th>\r\n                                    <th scope=\"col\">Email</th>\r\n                                    <th scope=\"col\">Roles</th>\r\n                                    <th scope='col'></th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n\r\n                                {declinedUser && declinedUser.length > 0 && declinedUser.map((userObj, index) => (\r\n\r\n                                    <tr>\r\n\r\n                                        <td>{userObj.FirstName}  {userObj.LastName} </td>\r\n                                        <td>{userObj.Email}</td>\r\n                                        <td id='roles'>{userObj.Roles}</td>\r\n                                        <td><Button className='btn btn-outline-success' variant='btn-outline-sucess' \r\n                                        \r\n                                onClick={async (e) => {\r\n\r\n                                    axios.put(\r\n                                        `http://127.0.0.1:8000/api/adminUpdate/${userObj.id}`,\r\n\r\n\r\n                                        { \"Approve\": null },\r\n                                        {\r\n                                            headers: {\r\n                                                \"Content-type\": \"application/json\",\r\n                                            }\r\n                                        }\r\n                                    )\r\n\r\n                                    const response = await fetch(\"http://localhost:8000/api/adminPull/\");\r\n                                    const data = await response.json();\r\n                                    setUser(data);\r\n                                    fetchData();\r\n\r\n                                    const response2 = await fetch(\"http://localhost:8000/api/adminPullApprove/\");\r\n                                    const data2 = await response2.json();\r\n                                    setApprovedUser(data2);\r\n                                    fetchApprovedData();\r\n\r\n                                    const response3 = await fetch(\"http://localhost:8000/api/adminPullDecline/\");\r\n                                    const data3 = await response3.json();\r\n                                    setDeclinedUser(data3);\r\n                                    fetchDeclinedData();\r\n                                }}\r\n                                        \r\n                                        > Revert </Button></td>\r\n                                    </tr>\r\n                                ))}\r\n\r\n                            </tbody>\r\n                        </table>\r\n                    </div >\r\n\r\n\r\n\r\n                </>\r\n\r\n            );\r\n        }\r\n\r\n        else if (new Date().getTime() > localStorage.getItem('expiry')  && !(localStorage.roles)) {\r\n\r\n            return (\r\n                <section>\r\n                    <div className=\"flex-container\">\r\n                        <div className=\"text-center\">\r\n                            <h1 className=\"heading1\">\r\n                                <span className=\"fade-in\" id=\"digit1\">4</span>\r\n                                <span className=\"fade-in\" id=\"digit2\">0</span>\r\n                                <span className=\"fade-in\" id=\"digit3\">4</span>\r\n                            </h1>\r\n                            <h3 className=\" heading3 fadeIn\">YOU MUST LOGIN TO VIEW THIS PAGE</h3>\r\n                            <a href='/login'><Button type=\"button\" class='btn btn-primary ' name=\"button\"> Login</Button ></a >\r\n          </div >\r\n      </div >\r\n  </section >\r\n        );\r\n\r\n    }\r\n}\r\n\r\n}\r\n\r\nexport default Admin;","C:\\Users\\almut\\Desktop\\cston1\\Multiple-days-Non-Profits-and-Health-Wellness-Group-B\\frontend\\src\\pages\\comment.js",[],[],"C:\\Users\\almut\\Desktop\\cston1\\Multiple-days-Non-Profits-and-Health-Wellness-Group-B\\frontend\\src\\pages\\tracker.js",["215","216","217","218","219","220","221","222","223","224"],[],"import React, { useState, useRef, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport trackerCSS from \"./tracker.module.css\";\r\nimport fourcss from \"./fourcss.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Table from \"react-bootstrap/Table\";\r\n\r\nimport * as d3Fetch from \"d3-fetch\";\r\nimport * as d3Scale from \"d3-scale\";\r\nimport * as d3Shape from \"d3-shape\";\r\nimport * as d3Selection from \"d3-selection\";\r\nimport * as d3Axis from \"d3-axis\";\r\nimport * as d3ScaleChromatic from \"d3-scale-chromatic\";\r\n\r\nfunction Tracker() {\r\n  const [getData, setData] = useState([]);\r\n  const [getPercentageData, setPercentageData] = useState([]);\r\n  const [getCategoryData, setCategoryData] = useState([]);\r\n\r\n  const fetchData = async () => {\r\n    const response = await fetch(\"http://127.0.0.1:8000/api/trackerPull/\");\r\n    const data = await response.json();\r\n    return setData(data);\r\n\r\n  }\r\n  const fetchPercentagechartData = async () => {\r\n    const response = await fetch(\"http://localhost:8000/api/trackerPercentageSum/\");\r\n    const data = await response.json();\r\n    return setPercentageData(data);\r\n\r\n  }\r\n  const fetchCategorychartData = async () => {\r\n    const response = await fetch(\"http://localhost:8000/api/trackerCategorySum/\");\r\n    const data = await response.json();\r\n    return setCategoryData(data);\r\n\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    fetchPercentagechartData();\r\n    fetchCategorychartData();\r\n  }, [])\r\n\r\n\r\n\r\n  const [trackers, setTrackers] = useState({\r\n    Category: \"Fresh Produce\",\r\n    Description: \"\",\r\n    Quantity: \"\",\r\n    Qunits: \"lb\",\r\n    amountToClients: \"\",\r\n    amountToAFeed: \"\",\r\n    amountToCompost: \"\",\r\n    amountToPartnerNetwork: \"\",\r\n    Email: \"\",\r\n    Organization: \"\"\r\n   \r\n  });\r\n\r\n  const quantity = useRef();\r\n  const clients = useRef();\r\n  const animalFeed = useRef();\r\n  const compost = useRef();\r\n  const partnerNetwork = useRef();\r\n  const landFill = useRef();\r\n\r\n  const percentClients = useRef();\r\n  const percentAnimalFeed = useRef();\r\n  const percentCompost = useRef();\r\n  const percentPartnerNetwork = useRef();\r\n  const percentLandFill = useRef();\r\n\r\n  // setInterval(calculateLandFillPercent(), 500);\r\n  useEffect(() => {\r\n    const interval = setInterval(function () {\r\n      calculateLandFillAndPercentsWrapper();\r\n    }, 500);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  function calculateLandFillAndPercentsWrapper() {\r\n    calculateLandFill();\r\n    calculatePercent();\r\n    calculateLandFillPercent();\r\n  }\r\n\r\n  function calculateLandFill() {\r\n    const sum =\r\n      Number(clients.current.value) +\r\n      Number(animalFeed.current.value) +\r\n      Number(compost.current.value) +\r\n      Number(partnerNetwork.current.value);\r\n    const diff = Number(quantity.current.value) - Number(sum);\r\n\r\n    landFill.current.value = Number(diff);\r\n  }\r\n\r\n  function calculateLandFillPercent() {\r\n    const sum =\r\n      Number(percentClients.current.value) +\r\n      Number(percentAnimalFeed.current.value) +\r\n      Number(percentCompost.current.value) +\r\n      Number(percentPartnerNetwork.current.value);\r\n\r\n    const diff = 100 - Number(sum);\r\n\r\n    percentLandFill.current.value = Number(diff).toFixed(2);\r\n  }\r\n\r\n  function calculatePercent() {\r\n    percentClients.current.value = (\r\n      Number(Number(clients.current.value) / Number(quantity.current.value)) *\r\n      100\r\n    ).toFixed(2);\r\n    percentAnimalFeed.current.value = (\r\n      Number(\r\n        Number(animalFeed.current.value) / Number(quantity.current.value)\r\n      ) * 100\r\n    ).toFixed(2);\r\n    percentCompost.current.value = (\r\n      Number(Number(compost.current.value) / Number(quantity.current.value)) *\r\n      100\r\n    ).toFixed(2);\r\n    percentPartnerNetwork.current.value = (\r\n      Number(\r\n        Number(partnerNetwork.current.value) / Number(quantity.current.value)\r\n      ) * 100\r\n    ).toFixed(2);\r\n  }\r\n\r\n  // Downloading CSV\r\n  function downloadCSV(csv, filename) {\r\n    const csvFile = new Blob([csv], { type: \"text/csv\" });\r\n    const downloadLink = document.createElement(\"a\");\r\n\r\n    downloadLink.download = filename;\r\n    downloadLink.href = window.URL.createObjectURL(csvFile);\r\n\r\n    downloadLink.style.display = \"none\";\r\n\r\n    document.body.appendChild(downloadLink);\r\n    downloadLink.click();\r\n  }\r\n\r\n  // Exporting Table to CSV\r\n  function exportTableToCSV(filename) {\r\n    var csv;\r\n    const rows = document.querySelectorAll(\"table tr\");\r\n\r\n    for (var i = 0; i < rows.length; i++) {\r\n      var row = [],\r\n        cols = rows[i].querySelectorAll(\"td, th\");\r\n\r\n      for (var j = 0; j < cols.length - 1; j++) row.push(cols[j].innerText);\r\n\r\n      csv.push(row.join(\",\"));\r\n    }\r\n    downloadCSV(csv.join(\"\\n\"), filename);\r\n  }\r\n\r\n  var trackerData = JSON.stringify(trackers);\r\n  if (\r\n    new Date().getTime() > localStorage.getItem(\"expiry\") &&\r\n    localStorage.roles\r\n  ) {\r\n    const response = window.confirm(\r\n      \"Your session has expired. Do you still want to be logged in?\"\r\n    );\r\n\r\n    if (response) {\r\n      localStorage.removeItem(\"expiry\");\r\n      const date = new Date().setHours(new Date().getHours() + 1);\r\n      localStorage.setItem(\"expiry\", date);\r\n    }\r\n  }\r\n\r\n  {\r\n    if (\r\n      new Date().getTime() < localStorage.getItem(\"expiry\") &&\r\n      localStorage.roles\r\n    ) {\r\n      return (\r\n        <div className=\"container p-2\">\r\n          <p>\r\n            <strong>Welcome, {localStorage.getItem(\"firstname\")}!</strong>\r\n          </p>\r\n          <div className=\"card\">\r\n            <div className=\"card-header\">\r\n              <h3>Enter tracker data:</h3>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <div id=\"form-wrapper\">\r\n                <div\r\n                  className=\"tracker-data-entry\"\r\n                  id=\"tracker\"\r\n                >\r\n                  <Form.Group>\r\n                    {/* {% csrf_token %} */}\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-auto\">\r\n                        <label htmlFor=\"category\">Category</label>\r\n                        <br />\r\n                        <select\r\n                          className=\"form-select\"\r\n                          id=\"category\"\r\n                          name=\"category\"\r\n                          onChange={(event) => {\r\n                            setTrackers({\r\n                              ...trackers,\r\n                              Category: event.target.value,\r\n                            });\r\n                          }}\r\n                        >\r\n                          <option selected>Fresh Produce</option>\r\n                          <option>Meat</option>\r\n                          <option>Canned Food</option>\r\n                          <option>Bread</option>\r\n                          <option>Dairy</option>\r\n                          <option>Reclaimed</option>\r\n                        </select>\r\n                      </div>\r\n                      <div className=\"col-md-auto\">\r\n                        <label htmlFor=\"description\">Description</label>\r\n                        <br />\r\n                        <input\r\n                          type=\"text\"\r\n                          id=\"description\"\r\n                          className={`form-control input-text ${trackerCSS[\"customised-input\"]}`}\r\n                          placeholder=\"Description\"\r\n                          name=\"description\"\r\n                          onChange={(event) => {\r\n                            setTrackers({\r\n                              ...trackers,\r\n                              Description: event.target.value,\r\n                            });\r\n                          }}\r\n                        />\r\n                      </div>\r\n                      <div className=\"col-md-auto\">\r\n                        <label htmlFor=\"quantity\">Quantity</label>\r\n                        <br />\r\n                        <input\r\n                          type={`text`}\r\n                          id=\"quantity\"\r\n                          className={`form-control input-text ${trackerCSS[\"customised-input\"]}`}\r\n                          placeholder=\"Quantity\"\r\n                          name=\"quantity\"\r\n                          ref={quantity}\r\n                          onKeyUp={calculateLandFillAndPercentsWrapper}\r\n                          onChange={(event) => {\r\n                            setTrackers({\r\n                              ...trackers,\r\n                              Quantity: event.target.value,\r\n                            });\r\n                          }}\r\n                        />\r\n                      </div>\r\n                      <div className=\"col-md-auto\">\r\n                        <label htmlFor=\"qunits\">Units</label>\r\n                        <br />\r\n                        <select\r\n                          className=\"form-select\"\r\n                          id=\"qunits\"\r\n                          name=\"qunits\"\r\n                          onChange={(event) => {\r\n                            setTrackers({\r\n                              ...trackers,\r\n                              Qunits: event.target.value,\r\n                            });\r\n                          }}\r\n                        >\r\n                          <option selected>lbs</option>\r\n                          <option>kgs</option>\r\n                        </select>\r\n                      </div>\r\n                      <div className=\"col-auto\">\r\n                        <div className=\"row\">\r\n                          <div className=\"col-auto\">\r\n                            <label htmlFor=\"amount\">Amount</label>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"row pb-2\">\r\n                          <div className=\"col-auto\">\r\n                            <input\r\n                              type=\"number\"\r\n                              step=\"any\"\r\n                              className={`form-control ${trackerCSS[\"customised-input\"]}`}\r\n                              id=\"clients\"\r\n                              name=\"clients\"\r\n                              ref={clients}\r\n                              min={0}\r\n                              // style={{ width: \"10em\" }}\r\n                              onKeyUp={calculateLandFillAndPercentsWrapper}\r\n                              // onkeyup=\"calculateLandfill(); calculatePercent()\r\n                              onChange={(event) => {\r\n                                setTrackers({\r\n                                  ...trackers,\r\n                                  amountToClients: event.target.value,\r\n                                });\r\n                              }}\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"row pb-2\">\r\n                          <div className=\"col-auto\">\r\n                            <input\r\n                              type=\"number\"\r\n                              step = \"any\"\r\n                              className={`form-control ${trackerCSS[\"customised-input\"]}`}\r\n                              id=\"animalFeed\"\r\n                              name=\"animalFeed\"\r\n                              ref={animalFeed}\r\n                              min={0}\r\n                              onKeyUp={calculateLandFillAndPercentsWrapper}\r\n                              // onkeyup=\"calculateLandfill(); calculatePercent()\"\r\n                              onChange={(event) => {\r\n                                setTrackers({\r\n                                  ...trackers,\r\n                                  amountToAFeed: event.target.value,\r\n                                });\r\n                              }}\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"row pb-2\">\r\n                          <div className=\"col-auto\">\r\n                            <input\r\n                              type=\"number\"\r\n                              step = \"any\"\r\n                              className={`form-control ${trackerCSS[\"customised-input\"]}`}\r\n                              id=\"compost\"\r\n                              name=\"compost\"\r\n                              ref={compost}\r\n                              min={0}\r\n                              onKeyUp={calculateLandFillAndPercentsWrapper}\r\n                              // onkeyup=\"calculateLandfill(); calculatePercent()\"\r\n                              onChange={(event) => {\r\n                                setTrackers({\r\n                                  ...trackers,\r\n                                  amountToCompost: event.target.value,\r\n                                });\r\n                              }}\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"row pb-2\">\r\n                          <div className=\"col-auto\">\r\n                            <input\r\n                              type=\"number\"\r\n                              step = \"any\"\r\n                              className={`form-control ${trackerCSS[\"customised-input\"]}`}\r\n                              id=\"partnerNetwork\"\r\n                              name=\"partnerNetwork\"\r\n                              ref={partnerNetwork}\r\n                              min={0}\r\n                              onKeyUp={calculateLandFillAndPercentsWrapper}\r\n                              // onKeyUp={() => {calculateLandfill(); calculatePercent()}}\r\n                              // onkeyup=\"calculateLandfill(); calculatePercent()\"\r\n                              onChange={(event) => {\r\n                                setTrackers({\r\n                                  ...trackers,\r\n                                  amountToPartnerNetwork: event.target.value,\r\n                                });\r\n                              }}\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"row pb-2\">\r\n                          <div className=\"col-auto\">\r\n                            <input\r\n                              type=\"number\"\r\n                              step = \"any\"\r\n                              className={`form-control ${trackerCSS[\"customised-input\"]}`}\r\n                              id=\"landFill\"\r\n                              name=\"landFill\"\r\n                              ref={landFill}\r\n                              min={0}\r\n                              onChange={(event) => {\r\n                                setTrackers({\r\n                                  ...trackers,\r\n                                  amountToLandfill: event.target.value,\r\n                                });\r\n                              }}\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col\">\r\n                        <div className=\"row\">\r\n                          <div className=\"col-auto\">\r\n                            <label htmlFor=\"percent\">% Diverted to:</label>\r\n                            <br />\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"row pb-2\">\r\n                          <div className=\"col-auto\">\r\n                            <input\r\n                              type=\"number\"\r\n                              step = \"any\"\r\n                              className={`form-control ${trackerCSS[\"customised-smaller-input\"]}`}\r\n                              id=\"percentClients\"\r\n                              name=\"percentClients\"\r\n                              ref={percentClients}\r\n                              min={0}\r\n                              value={0}\r\n                              max={100}\r\n                              onLoad={calculateLandFillPercent}\r\n                              onChange={(event) => {\r\n                                setTrackers({\r\n                                  ...trackers,\r\n                                  percentClients: event.target.value,\r\n                                });\r\n                              }}\r\n                              // onLoad={() => calculateLandfillPercent()}\r\n                              // onload=\"calculateLandfillPercent()\"\r\n                              readonly\r\n                            />\r\n                          </div>\r\n                          <div className=\"col d-flex align-items-center\">\r\n                            Clients\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"row pb-2\">\r\n                          <div className=\"col-auto\">\r\n                            <input\r\n                              type=\"number\"\r\n                              step = \"any\"\r\n                              className={`form-control ${trackerCSS[\"customised-smaller-input\"]}`}\r\n                              id=\"percentAnimalFeed\"\r\n                              name=\"percentAnimalFeed\"\r\n                              ref={percentAnimalFeed}\r\n                              min={0}\r\n                              value={0}\r\n                              max={100}\r\n                              onLoad={calculateLandFillPercent}\r\n                              onChange={(event) => {\r\n                                setTrackers({\r\n                                  ...trackers,\r\n                                  percentAFeed: event.target.value,\r\n                                });\r\n                              }}\r\n                              // onLoad={() => calculateLandfillPercent()}\r\n                              // onload=\"calculateLandfillPercent()\"\r\n                              readonly\r\n                            />\r\n                          </div>\r\n                          <div className=\"col d-flex align-items-center\">\r\n                            Animal Feed\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"row pb-2\">\r\n                          <div className=\"col-auto\">\r\n                            <input\r\n                              type=\"number\"\r\n                              step = \"any\"\r\n                              className={`form-control ${trackerCSS[\"customised-smaller-input\"]}`}\r\n                              id=\"percentCompost\"\r\n                              name=\"percentCompost\"\r\n                              ref={percentCompost}\r\n                              min={0}\r\n                              value={0}\r\n                              max={100}\r\n                              onLoad={calculateLandFillPercent}\r\n                              onChange={(event) => {\r\n                                setTrackers({\r\n                                  ...trackers,\r\n                                  percentCompost: event.target.value,\r\n                                });\r\n                              }}\r\n                              // onLoad={() => calculateLandfillPercent()}\r\n                              // onload=\"calculateLandfillPercent()\"\r\n                              readonly\r\n                            />\r\n                          </div>\r\n                          <div className=\"col d-flex align-items-center\">\r\n                            Compost / Fertilizer\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"row pb-2\">\r\n                          <div className=\"col-auto\">\r\n                            <input\r\n                              type=\"number\"\r\n                              step = \"any\"\r\n                              className={`form-control ${trackerCSS[\"customised-smaller-input\"]}`}\r\n                              id=\"percentPartnerNetwork\"\r\n                              name=\"percentPartnerNetwork\"\r\n                              ref={percentPartnerNetwork}\r\n                              min={0}\r\n                              value={0}\r\n                              max={100}\r\n                              onLoad={calculateLandFillPercent}\r\n                              onChange={(event) => {\r\n                                setTrackers({\r\n                                  ...trackers,\r\n                                  percentPartNet: event.target.value,\r\n                                });\r\n                              }}\r\n                              // onLoad={() => calculateLandfillPercent()}\r\n                              // onLoad=\"calculateLandfillPercent()\"\r\n                              readonly\r\n                            />\r\n                          </div>\r\n                          <div className=\"col d-flex align-items-center\">\r\n                            Partner Network\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"row pb-2\">\r\n                          <div className=\"col-auto\">\r\n                            <input\r\n                              type=\"number\"\r\n                              step = \"any\"\r\n                              className={`form-control ${trackerCSS[\"customised-smaller-input\"]}`}\r\n                              id=\"percentLandFill\"\r\n                              name=\"percentLandFill\"\r\n                              ref={percentLandFill}\r\n                              value={100}\r\n                              onChange={(event) => {\r\n                                setTrackers({\r\n                                  ...trackers,\r\n                                  percentLandfill: event.target.value,\r\n                                });\r\n                              }}\r\n                              readonly\r\n                            />\r\n                          </div>\r\n                          <div className=\"col d-flex align-items-center\">\r\n                            Landfill\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row p-2\">\r\n                      <div className=\"d-flex justify-content-start\">\r\n                        <Button\r\n                          variant=\"outline-success\"\r\n                          className={`${trackerCSS[\"save\"]} btn btn-outline-success`}\r\n                          id=\"submit\"\r\n                          onClick={(e) => {\r\n                            \r\n                            \r\n                           \r\n                            axios\r\n                              .post(\r\n                                \"http://127.0.0.1:8000/api/trackerInsert/\",\r\n                                {\r\n                                  Category: trackers.Category,\r\n                                  Description: trackers.Description,\r\n                                  Quantity: trackers.Quantity,\r\n                                  Qunits: trackers.Qunits,\r\n                                  amountToClients: trackers.amountToClients,\r\n                                  amountToAFeed: trackers.amountToAFeed,\r\n                                  amountToCompost: trackers.amountToCompost,\r\n                                  amountToPartNet:\r\n                                    trackers.amountToPartnerNetwork,\r\n                                  amountToLandfill: document.getElementById('landFill').value,\r\n                                  percentClients: document.getElementById('percentClients').value,\r\n                                  percentAFeed: document.getElementById('percentAnimalFeed').value,\r\n                                  percentCompost: document.getElementById('percentCompost').value,\r\n                                  percentPartNet: document.getElementById('percentPartnerNetwork').value,\r\n                                  percentLandfill: document.getElementById('percentLandFill').value,\r\n                                  Email: localStorage.getItem('email'),\r\n                                  Organization: localStorage.getItem('organization')\r\n                                },\r\n                                {\r\n                                  headers: {\r\n                                    \"Content-type\": \"application/json\",\r\n                                  },\r\n                                }\r\n                              )\r\n                              .then((response) => {\r\n                                if (response.status == 201) {\r\n                                  window.alert(\r\n                                    \"Your form has been submitted successfully\"\r\n                                  );\r\n                                  fetchData();\r\n                                  fetchPercentagechartData();\r\n                                  fetchCategorychartData();                                 \r\n                           \r\n\r\n                                }\r\n                              })\r\n                              .catch((err) => console.warn(err));\r\n                             \r\n                          }}\r\n                        >\r\n                          Save\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n                  </Form.Group>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <br />\r\n          <br />\r\n\r\n          <section id=\"section\">\r\n            <div className=\"card\">\r\n              <div className={`${trackerCSS[\"card-header\"]} card-header`}>\r\n                <h3>Database</h3>\r\n                <Button\r\n                  type=\"button\"\r\n                  variant=\"outline-success\"\r\n                  className=\"btn btn-outline-success\"\r\n                  onClick={function () {\r\n                    exportTableToCSV(\"data.csv\");\r\n                  }}\r\n                  // onClick={() => exportTableToCSV(\"data.csv\")}\r\n                >\r\n                  Export CSV\r\n                </Button>\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <Table\r\n                  striped\r\n                  bordered\r\n                  hover\r\n                  responsive\r\n                  style={{ width: \"100%\" }}\r\n                >\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Category</th>\r\n                      <th>Description</th>\r\n                      <th>Quantity</th>\r\n                      <th>Units</th>\r\n                      <th>Clients</th>\r\n                      <th>Animal Feed</th>\r\n                      <th>Compost</th>\r\n                      <th>Partner Network</th>\r\n                      <th>Landfill</th>\r\n                      <th>Date Time</th>\r\n                      <th></th>\r\n                   \r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    \r\n                  {getData && getData.length > 0 && getData.map((userObj) => (\r\n                 \r\n                    <tr>\r\n                      <td>{userObj.Category}</td>\r\n                      <td>{userObj.Description}</td>\r\n                      <td>{userObj.Quantity}</td>\r\n                      <td>{userObj.Qunits}</td>\r\n                      <td>{userObj.percentClients}</td>\r\n                      <td>{userObj.percentAFeed}</td>\r\n                      <td>{userObj.percentCompost}</td>\r\n                      <td>{userObj.percentPartNet}</td>\r\n                      <td>{userObj.percentLandfill}</td>\r\n                      <td>{userObj.date_time}</td>\r\n                      <td>\r\n                        <div>\r\n                \r\n                          <Button\r\n                            variant=\"danger\"\r\n                            className=\"btn btn-danger\"\r\n                            name=\"field\"\r\n                          >\r\n                            Delete\r\n                          </Button>\r\n                        </div>\r\n                      </td>\r\n                    </tr>\r\n                    ))}\r\n                   \r\n                  </tbody>\r\n                </Table>\r\n              </div>\r\n            </div>\r\n          </section>\r\n\r\n          <br />\r\n        \r\n          <div id=\"penetrate\" className=\"penetrate\" onLoad={pieChart}></div>\r\n          {/* {{ json|json_script:\"json\" }} */}\r\n        </div>\r\n      );\r\n    } else if (\r\n      new Date().getTime() > localStorage.getItem(\"expiry\") &&\r\n      !localStorage.roles\r\n    ) {\r\n      return (\r\n        <section>\r\n          <div className=\"flex-container\">\r\n            <div className=\"text-center\">\r\n              <h1 className=\"heading1\">\r\n                <span className=\"fade-in\" id=\"digit1\">\r\n                  4\r\n                </span>\r\n                <span className=\"fade-in\" id=\"digit2\">\r\n                  0\r\n                </span>\r\n                <span className=\"fade-in\" id=\"digit3\">\r\n                  4\r\n                </span>\r\n              </h1>\r\n              <h3 className=\" heading3 fadeIn\">\r\n                YOU MUST LOGIN TO VIEW THIS PAGE\r\n              </h3>\r\n              <a href=\"/login\">\r\n                <Button type=\"button\" class=\"btn btn-primary \" name=\"button\">\r\n                  Login\r\n                </Button>\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      );\r\n    }\r\n  }\r\n\r\n  function pieChart() {\r\n    let penetrate = document.getElementById(\"penetrate\");\r\n    let h3 = document.createElement(\"h3\");\r\n    h3.innerText = \"Database Visuals\";\r\n    penetrate.appendChild(h3);\r\n\r\n    var mydata = JSON.parse(document.getElementById(\"json\").textContent);\r\n    mydata = JSON.parse(mydata);\r\n    mydata = JSON.parse(JSON.stringify(mydata));\r\n    mydata.forEach((val) => console.log(val.Category)); //print by field\r\n    console.log(mydata); // print whole object\r\n\r\n    var sum = mydata.reduce((n, { Quantity }) => n + Quantity, 0);\r\n    console.log(sum);\r\n\r\n    var result = Array.from(\r\n      mydata.reduce(\r\n        (acc, obj) =>\r\n          Object.keys(obj).reduce(\r\n            (acc, key) =>\r\n              typeof obj[key] == \"number\"\r\n                ? acc.set(key, (acc.get(key) || []).concat(obj[key]))\r\n                : acc,\r\n            acc\r\n          ),\r\n        new Map()\r\n      ),\r\n      ([name, values]) => ({\r\n        name,\r\n        average: (values.reduce((a, b) => a + b) / sum) * 100,\r\n      })\r\n    );\r\n    console.log(result);\r\n\r\n    let mycategory = mydata[0].Category;\r\n    let myclients = result[1].average.toFixed(2);\r\n    let myfeeds = result[2].average.toFixed(2);\r\n    let mycompost = result[3].average.toFixed(2);\r\n    let mypartners = result[4].average.toFixed(2);\r\n    let mylandfill = result[5].average.toFixed(2);\r\n\r\n    let thedata = [\r\n      { category: \"Clients\", number: myclients },\r\n      { category: \"Animal Feed\", number: myfeeds },\r\n      { category: \"Compost / Fertilizer\", number: mycompost },\r\n      { category: \"Partner Network\", number: mypartners },\r\n      { category: \"Landfill\", number: mylandfill },\r\n    ];\r\n\r\n    let width = 750,\r\n      height = 500;\r\n\r\n    let colors = d3Scale.scaleOrdinal(d3ScaleChromatic.schemeDark2);\r\n\r\n    let svg = d3Selection\r\n      .select(\"body\")\r\n      .append(\"svg\")\r\n      .attr(\"width\", width)\r\n      .attr(\"height\", height)\r\n      .style(\"background\", \"#e7f5e4\");\r\n\r\n    let data = d3Shape\r\n      .pie()\r\n      .sort(null)\r\n      .value(function (d) {\r\n        return d.number;\r\n      })(thedata);\r\n\r\n    let segments = d3Shape\r\n      .arc()\r\n      .innerRadius(0)\r\n      .outerRadius(200)\r\n      .padAngle(0.05)\r\n      .padRadius(50);\r\n\r\n    let sections = svg\r\n      .append(\"g\")\r\n      .attr(\"transform\", \"translate(250, 250)\")\r\n      .selectAll(\"path\")\r\n      .data(data);\r\n\r\n    sections\r\n      .enter()\r\n      .append(\"path\")\r\n      .attr(\"d\", segments)\r\n      .attr(\"fill\", function (d) {\r\n        return colors(d.data.category);\r\n      });\r\n\r\n    let content = d3Selection.select(\"g\").selectAll(\"text\").data(data);\r\n\r\n    content\r\n      .enter()\r\n      .append(\"text\")\r\n      .classed(\"inside\", true)\r\n      .each(function (d) {\r\n        let center = segments.centroid(d);\r\n        d3Selection\r\n          .select(this)\r\n          .attr(\"x\", center[0])\r\n          .attr(\"y\", center[1])\r\n          .text(`${d.data.category}:\\n${d.data.number}`)\r\n          .style(\"text-anchor\", \"middle\");\r\n      });\r\n\r\n    let legends = svg\r\n      .append(\"g\")\r\n      .attr(\"transform\", \"translate(500, 100)\")\r\n      .selectAll(\".legends\")\r\n      .data(data);\r\n\r\n    let legend = legends\r\n      .enter()\r\n      .append(\"g\")\r\n      .classed(\"legends\", true)\r\n      .attr(\"transform\", function (d, i) {\r\n        return \"translate(0,\" + (i + 1) * 30 + \")\";\r\n      });\r\n\r\n    legend\r\n      .append(\"rect\")\r\n      .attr(\"width\", 20)\r\n      .attr(\"height\", 20)\r\n      .attr(\"fill\", function (d) {\r\n        return colors(d.data.category);\r\n      });\r\n\r\n    legend\r\n      .append(\"text\")\r\n      .classed(\"label\", true)\r\n      .text(function (d) {\r\n        return d.data.category;\r\n      })\r\n      .attr(\"fill\", function (d) {\r\n        return colors(d.data.category);\r\n      })\r\n      .attr(\"x\", 30)\r\n      .attr(\"y\", 15);\r\n    //   console.log(`Hey my category is: ${mydata[0].Category}`);\r\n    //   for (let i = 0; i < mydata.length; i++) console.log(mydata[i].DivertAFeed);\r\n  }\r\n}\r\nexport default Tracker;\r\n","C:\\Users\\almut\\Desktop\\cston1\\Multiple-days-Non-Profits-and-Health-Wellness-Group-B\\frontend\\src\\components\\Step4.js",[],[],"C:\\Users\\almut\\Desktop\\cston1\\Multiple-days-Non-Profits-and-Health-Wellness-Group-B\\frontend\\src\\components\\Step2.js",[],[],"C:\\Users\\almut\\Desktop\\cston1\\Multiple-days-Non-Profits-and-Health-Wellness-Group-B\\frontend\\src\\components\\Step3.js",["225"],[],"\r\nimport React from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction Step3({ formData, setFormData }) {\r\n  return (\r\n    <div className=\"other-info-container\">\r\n      <textarea readonly rows=\"5\" cols=\"auto\">\r\n        The information you enter will be stored in a secure database\r\n        that meets Canadian privacy regulations. If you have any\r\n        concerns, please contact UBC Behavioural Research Ethics Council\r\n        (BREB) about Barb Marcolin's study or call Dr. Marcolin at\r\n        (250)807-9637 to ask any questions.\r\n      </textarea>\r\n      <div className=\"consent form-check \">\r\n        <input\r\n          className=\"form-check-input\"\r\n          type=\"radio\"\r\n          id=\"consent-check1\"\r\n          name=\"consent\"\r\n          value=\"consented\"\r\n          onChange={(e) => {\r\n            if(e.target.checked){\r\n            setFormData({ ...formData, Consent: e.target.value });\r\n            }\r\n            \r\n          }}\r\n        />\r\n        <label\r\n          className=\"form-check-label consent-text\"\r\n          for=\"consent-check1\"\r\n        >\r\n          I accept\r\n        </label>\r\n      </div>\r\n      <div className=\"consent form-check\">\r\n        <input\r\n          className=\"form-check-input\"\r\n          type=\"radio\"\r\n          id=\"consent-check2\"\r\n          name=\"consent\"\r\n          value=\"not-consented\"\r\n          onChange={(e) => {\r\n            if(e.target.checked){\r\n            setFormData({ ...formData, Consent: e.target.value });\r\n            }\r\n          }}\r\n        />\r\n        <label\r\n          className=\"form-check-label consent-text\"\r\n          for=\"consent-check2\"\r\n        >\r\n          I refuse\r\n        </label>\r\n      </div>\r\n      <div className=\"consent form-check\">\r\n        \r\n        <a href=\"#\"> More info</a>\r\n       \r\n         \r\n        \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Step3;","C:\\Users\\almut\\Desktop\\cston1\\Multiple-days-Non-Profits-and-Health-Wellness-Group-B\\frontend\\src\\components\\Step1.js",[],[],{"ruleId":"226","severity":1,"message":"227","line":4,"column":10,"nodeType":"228","messageId":"229","endLine":4,"endColumn":18},{"ruleId":"226","severity":1,"message":"230","line":4,"column":20,"nodeType":"228","messageId":"229","endLine":4,"endColumn":29},{"ruleId":"231","severity":1,"message":"232","line":13,"column":11,"nodeType":"233","endLine":13,"endColumn":22},{"ruleId":"234","severity":1,"message":"235","line":16,"column":85,"nodeType":"236","messageId":"237","endLine":16,"endColumn":87},{"ruleId":"226","severity":1,"message":"238","line":6,"column":10,"nodeType":"228","messageId":"229","endLine":6,"endColumn":15},{"ruleId":"239","severity":1,"message":"240","line":27,"column":56,"nodeType":"233","endLine":28,"endColumn":62},{"ruleId":"239","severity":1,"message":"240","line":32,"column":48,"nodeType":"233","endLine":33,"endColumn":67},{"ruleId":"239","severity":1,"message":"240","line":37,"column":51,"nodeType":"233","endLine":38,"endColumn":68},{"ruleId":"239","severity":1,"message":"240","line":44,"column":15,"nodeType":"233","endLine":44,"endColumn":63},{"ruleId":"231","severity":1,"message":"232","line":15,"column":21,"nodeType":"233","endLine":15,"endColumn":32},{"ruleId":"226","severity":1,"message":"241","line":2,"column":10,"nodeType":"228","messageId":"229","endLine":2,"endColumn":18},{"ruleId":"226","severity":1,"message":"238","line":11,"column":10,"nodeType":"228","messageId":"229","endLine":11,"endColumn":15},{"ruleId":"234","severity":1,"message":"235","line":55,"column":28,"nodeType":"236","messageId":"237","endLine":55,"endColumn":30},{"ruleId":"234","severity":1,"message":"235","line":57,"column":30,"nodeType":"236","messageId":"237","endLine":57,"endColumn":32},{"ruleId":"234","severity":1,"message":"235","line":67,"column":30,"nodeType":"236","messageId":"237","endLine":67,"endColumn":32},{"ruleId":"234","severity":1,"message":"235","line":104,"column":43,"nodeType":"236","messageId":"237","endLine":104,"endColumn":45},{"ruleId":"242","severity":1,"message":"243","line":126,"column":29,"nodeType":"244","messageId":"245","endLine":126,"endColumn":45},{"ruleId":"234","severity":1,"message":"246","line":143,"column":42,"nodeType":"236","messageId":"237","endLine":143,"endColumn":44},{"ruleId":"234","severity":1,"message":"246","line":144,"column":41,"nodeType":"236","messageId":"237","endLine":144,"endColumn":43},{"ruleId":"234","severity":1,"message":"246","line":147,"column":38,"nodeType":"236","messageId":"237","endLine":147,"endColumn":40},{"ruleId":"234","severity":1,"message":"246","line":149,"column":41,"nodeType":"236","messageId":"237","endLine":149,"endColumn":43},{"ruleId":"234","severity":1,"message":"235","line":151,"column":64,"nodeType":"236","messageId":"237","endLine":151,"endColumn":66},{"ruleId":"234","severity":1,"message":"246","line":152,"column":44,"nodeType":"236","messageId":"237","endLine":152,"endColumn":46},{"ruleId":"234","severity":1,"message":"235","line":158,"column":42,"nodeType":"236","messageId":"237","endLine":158,"endColumn":44},{"ruleId":"234","severity":1,"message":"235","line":159,"column":41,"nodeType":"236","messageId":"237","endLine":159,"endColumn":43},{"ruleId":"234","severity":1,"message":"235","line":160,"column":38,"nodeType":"236","messageId":"237","endLine":160,"endColumn":40},{"ruleId":"234","severity":1,"message":"235","line":161,"column":41,"nodeType":"236","messageId":"237","endLine":161,"endColumn":43},{"ruleId":"234","severity":1,"message":"235","line":162,"column":45,"nodeType":"236","messageId":"237","endLine":162,"endColumn":47},{"ruleId":"234","severity":1,"message":"235","line":163,"column":64,"nodeType":"236","messageId":"237","endLine":163,"endColumn":66},{"ruleId":"234","severity":1,"message":"235","line":178,"column":42,"nodeType":"236","messageId":"237","endLine":178,"endColumn":44},{"ruleId":"234","severity":1,"message":"235","line":207,"column":41,"nodeType":"236","messageId":"237","endLine":207,"endColumn":43},{"ruleId":"234","severity":1,"message":"235","line":236,"column":38,"nodeType":"236","messageId":"237","endLine":236,"endColumn":40},{"ruleId":"234","severity":1,"message":"246","line":248,"column":40,"nodeType":"236","messageId":"237","endLine":248,"endColumn":42},{"ruleId":"234","severity":1,"message":"235","line":261,"column":41,"nodeType":"236","messageId":"237","endLine":261,"endColumn":43},{"ruleId":"234","severity":1,"message":"246","line":277,"column":43,"nodeType":"236","messageId":"237","endLine":277,"endColumn":45},{"ruleId":"234","severity":1,"message":"235","line":298,"column":66,"nodeType":"236","messageId":"237","endLine":298,"endColumn":68},{"ruleId":"234","severity":1,"message":"235","line":299,"column":64,"nodeType":"236","messageId":"237","endLine":299,"endColumn":66},{"ruleId":"234","severity":1,"message":"246","line":310,"column":68,"nodeType":"236","messageId":"237","endLine":310,"endColumn":70},{"ruleId":"234","severity":1,"message":"235","line":324,"column":46,"nodeType":"236","messageId":"237","endLine":324,"endColumn":48},{"ruleId":"234","severity":1,"message":"235","line":342,"column":47,"nodeType":"236","messageId":"237","endLine":342,"endColumn":49},{"ruleId":"234","severity":1,"message":"235","line":368,"column":42,"nodeType":"236","messageId":"237","endLine":368,"endColumn":44},{"ruleId":"226","severity":1,"message":"230","line":5,"column":17,"nodeType":"228","messageId":"229","endLine":5,"endColumn":26},{"ruleId":"226","severity":1,"message":"247","line":6,"column":10,"nodeType":"228","messageId":"229","endLine":6,"endColumn":18},{"ruleId":"234","severity":1,"message":"235","line":60,"column":41,"nodeType":"236","messageId":"237","endLine":60,"endColumn":43},{"ruleId":"242","severity":1,"message":"243","line":80,"column":23,"nodeType":"244","messageId":"245","endLine":80,"endColumn":164},{"ruleId":"234","severity":1,"message":"246","line":80,"column":95,"nodeType":"236","messageId":"237","endLine":80,"endColumn":97},{"ruleId":"234","severity":1,"message":"246","line":80,"column":159,"nodeType":"236","messageId":"237","endLine":80,"endColumn":161},{"ruleId":"226","severity":1,"message":"248","line":2,"column":8,"nodeType":"228","messageId":"229","endLine":2,"endColumn":18},{"ruleId":"226","severity":1,"message":"249","line":3,"column":8,"nodeType":"228","messageId":"229","endLine":3,"endColumn":14},{"ruleId":"226","severity":1,"message":"250","line":7,"column":8,"nodeType":"228","messageId":"229","endLine":7,"endColumn":15},{"ruleId":"234","severity":1,"message":"235","line":45,"column":45,"nodeType":"236","messageId":"237","endLine":45,"endColumn":47},{"ruleId":"234","severity":1,"message":"235","line":48,"column":45,"nodeType":"236","messageId":"237","endLine":48,"endColumn":47},{"ruleId":"234","severity":1,"message":"246","line":255,"column":49,"nodeType":"236","messageId":"237","endLine":255,"endColumn":51},{"ruleId":"234","severity":1,"message":"235","line":286,"column":65,"nodeType":"236","messageId":"237","endLine":286,"endColumn":67},{"ruleId":"234","severity":1,"message":"235","line":287,"column":78,"nodeType":"236","messageId":"237","endLine":287,"endColumn":80},{"ruleId":"234","severity":1,"message":"246","line":297,"column":61,"nodeType":"236","messageId":"237","endLine":297,"endColumn":63},{"ruleId":"226","severity":1,"message":"251","line":8,"column":17,"nodeType":"228","messageId":"229","endLine":8,"endColumn":20},{"ruleId":"234","severity":1,"message":"235","line":74,"column":45,"nodeType":"236","messageId":"237","endLine":74,"endColumn":47},{"ruleId":"252","severity":1,"message":"253","line":113,"column":78,"nodeType":"254","messageId":"255","endLine":113,"endColumn":93},{"ruleId":"252","severity":1,"message":"253","line":115,"column":78,"nodeType":"254","messageId":"255","endLine":115,"endColumn":100},{"ruleId":"252","severity":1,"message":"253","line":116,"column":78,"nodeType":"254","messageId":"255","endLine":116,"endColumn":102},{"ruleId":"234","severity":1,"message":"235","line":223,"column":47,"nodeType":"236","messageId":"237","endLine":223,"endColumn":49},{"ruleId":"226","severity":1,"message":"256","line":2,"column":8,"nodeType":"228","messageId":"229","endLine":2,"endColumn":20},{"ruleId":"226","severity":1,"message":"249","line":3,"column":8,"nodeType":"228","messageId":"229","endLine":3,"endColumn":14},{"ruleId":"226","severity":1,"message":"250","line":7,"column":8,"nodeType":"228","messageId":"229","endLine":7,"endColumn":15},{"ruleId":"226","severity":1,"message":"251","line":8,"column":17,"nodeType":"228","messageId":"229","endLine":8,"endColumn":20},{"ruleId":"226","severity":1,"message":"238","line":9,"column":10,"nodeType":"228","messageId":"229","endLine":9,"endColumn":15},{"ruleId":"226","severity":1,"message":"257","line":16,"column":10,"nodeType":"228","messageId":"229","endLine":16,"endColumn":22},{"ruleId":"226","severity":1,"message":"258","line":17,"column":10,"nodeType":"228","messageId":"229","endLine":17,"endColumn":21},{"ruleId":"226","severity":1,"message":"259","line":17,"column":23,"nodeType":"228","messageId":"229","endLine":17,"endColumn":34},{"ruleId":"234","severity":1,"message":"235","line":32,"column":29,"nodeType":"236","messageId":"237","endLine":32,"endColumn":31},{"ruleId":"234","severity":1,"message":"235","line":70,"column":29,"nodeType":"236","messageId":"237","endLine":70,"endColumn":31},{"ruleId":"252","severity":1,"message":"253","line":107,"column":3,"nodeType":"254","messageId":"255","endLine":420,"endColumn":4},{"ruleId":"234","severity":1,"message":"235","line":140,"column":47,"nodeType":"236","messageId":"237","endLine":140,"endColumn":49},{"ruleId":"234","severity":1,"message":"235","line":175,"column":45,"nodeType":"236","messageId":"237","endLine":175,"endColumn":47},{"ruleId":"252","severity":1,"message":"253","line":213,"column":78,"nodeType":"254","messageId":"255","endLine":213,"endColumn":93},{"ruleId":"252","severity":1,"message":"253","line":215,"column":78,"nodeType":"254","messageId":"255","endLine":215,"endColumn":100},{"ruleId":"252","severity":1,"message":"253","line":216,"column":78,"nodeType":"254","messageId":"255","endLine":216,"endColumn":102},{"ruleId":"252","severity":1,"message":"253","line":217,"column":78,"nodeType":"254","messageId":"255","endLine":217,"endColumn":100},{"ruleId":"234","severity":1,"message":"235","line":227,"column":43,"nodeType":"236","messageId":"237","endLine":227,"endColumn":45},{"ruleId":"234","severity":1,"message":"235","line":227,"column":92,"nodeType":"236","messageId":"237","endLine":227,"endColumn":94},{"ruleId":"234","severity":1,"message":"235","line":232,"column":56,"nodeType":"236","messageId":"237","endLine":232,"endColumn":58},{"ruleId":"234","severity":1,"message":"235","line":257,"column":61,"nodeType":"236","messageId":"237","endLine":257,"endColumn":63},{"ruleId":"234","severity":1,"message":"235","line":276,"column":51,"nodeType":"236","messageId":"237","endLine":276,"endColumn":53},{"ruleId":"234","severity":1,"message":"235","line":385,"column":47,"nodeType":"236","messageId":"237","endLine":385,"endColumn":49},{"ruleId":"226","severity":1,"message":"260","line":4,"column":17,"nodeType":"228","messageId":"229","endLine":4,"endColumn":27},{"ruleId":"226","severity":1,"message":"250","line":7,"column":8,"nodeType":"228","messageId":"229","endLine":7,"endColumn":15},{"ruleId":"252","severity":1,"message":"253","line":129,"column":5,"nodeType":"254","messageId":"255","endLine":1170,"endColumn":2},{"ruleId":"226","severity":1,"message":"250","line":5,"column":8,"nodeType":"228","messageId":"229","endLine":5,"endColumn":15},{"ruleId":"226","severity":1,"message":"261","line":12,"column":13,"nodeType":"228","messageId":"229","endLine":12,"endColumn":20},{"ruleId":"226","severity":1,"message":"262","line":16,"column":13,"nodeType":"228","messageId":"229","endLine":16,"endColumn":19},{"ruleId":"226","severity":1,"message":"263","line":21,"column":10,"nodeType":"228","messageId":"229","endLine":21,"endColumn":27},{"ruleId":"226","severity":1,"message":"264","line":22,"column":10,"nodeType":"228","messageId":"229","endLine":22,"endColumn":25},{"ruleId":"265","severity":1,"message":"266","line":85,"column":6,"nodeType":"267","endLine":85,"endColumn":8,"suggestions":"268"},{"ruleId":"226","severity":1,"message":"269","line":167,"column":7,"nodeType":"228","messageId":"229","endLine":167,"endColumn":18},{"ruleId":"252","severity":1,"message":"253","line":183,"column":3,"nodeType":"254","messageId":"255","endLine":719,"endColumn":4},{"ruleId":"234","severity":1,"message":"235","line":577,"column":53,"nodeType":"236","messageId":"237","endLine":577,"endColumn":55},{"ruleId":"226","severity":1,"message":"270","line":755,"column":9,"nodeType":"228","messageId":"229","endLine":755,"endColumn":19},{"ruleId":"231","severity":1,"message":"232","line":58,"column":9,"nodeType":"233","endLine":58,"endColumn":21},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'local' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'redirect' is defined but never used.","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","Expected '!==' and instead saw '!='.","'Navigate' is defined but never used.","'startedCSS' is defined but never used.","'Button' is defined but never used.","'fourcss' is defined but never used.","'all' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'directoryCSS' is defined but never used.","'getGraphData' is assigned a value but never used.","'getNameData' is assigned a value but never used.","'setNameData' is assigned a value but never used.","'useReducer' is defined but never used.","'d3Fetch' is defined but never used.","'d3Axis' is defined but never used.","'getPercentageData' is assigned a value but never used.","'getCategoryData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'calculateLandFillAndPercentsWrapper'. Either include it or remove the dependency array.","ArrayExpression",["271"],"'trackerData' is assigned a value but never used.","'mycategory' is assigned a value but never used.",{"desc":"272","fix":"273"},"Update the dependencies array to be: [calculateLandFillAndPercentsWrapper]",{"range":"274","text":"275"},[2463,2465],"[calculateLandFillAndPercentsWrapper]"]